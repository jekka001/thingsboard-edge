#
# ThingsBoard, Inc. ("COMPANY") CONFIDENTIAL
#
# Copyright Â© 2016-2024 ThingsBoard, Inc. All Rights Reserved.
#
# NOTICE: All information contained herein is, and remains
# the property of ThingsBoard, Inc. and its suppliers,
# if any.  The intellectual and technical concepts contained
# herein are proprietary to ThingsBoard, Inc.
# and its suppliers and may be covered by U.S. and Foreign Patents,
# patents in process, and are protected by trade secret or copyright law.
#
# Dissemination of this information or reproduction of this material is strictly forbidden
# unless prior written permission is obtained from COMPANY.
#
# Access to the source code contained herein is hereby forbidden to anyone except current COMPANY employees,
# managers or contractors who have executed Confidentiality and Non-disclosure agreements
# explicitly covering such access.
#
# The copyright notice above does not evidence any actual or intended publication
# or disclosure  of  this source code, which includes
# information that is confidential and/or proprietary, and is a trade secret, of  COMPANY.
# ANY REPRODUCTION, MODIFICATION, DISTRIBUTION, PUBLIC  PERFORMANCE,
# OR PUBLIC DISPLAY OF OR THROUGH USE  OF THIS  SOURCE CODE  WITHOUT
# THE EXPRESS WRITTEN CONSENT OF COMPANY IS STRICTLY PROHIBITED,
# AND IN VIOLATION OF APPLICABLE LAWS AND INTERNATIONAL TREATIES.
# THE RECEIPT OR POSSESSION OF THIS SOURCE CODE AND/OR RELATED INFORMATION
# DOES NOT CONVEY OR IMPLY ANY RIGHTS TO REPRODUCE, DISCLOSE OR DISTRIBUTE ITS CONTENTS,
# OR TO MANUFACTURE, USE, OR SELL ANYTHING THAT IT  MAY DESCRIBE, IN WHOLE OR IN PART.
#


version: '3.0'

services:
  tb-edge-1:
    restart: always
    image: "${DOCKER_REPO}/${TB_EDGE_DOCKER_NAME}:${TB_EDGE_VERSION}"
    ports:
      - "8082"
      - "1883"
    environment:
      EDGE_LICENSE_INSTANCE_DATA_FILE: /data/instance-edge-license.data
      CLOUD_ROUTING_KEY: "${CLOUD_ROUTING_KEY_1}"
      CLOUD_ROUTING_SECRET: "${CLOUD_ROUTING_SECRET_1}"
      SPRING_DATASOURCE_URL: "${SPRING_DATASOURCE_URL_1}"
      CLOUD_RPC_HOST: "${CLOUD_RPC_HOST}"
      HTTP_BIND_PORT: "8082"
      CONF_FOLDER: "/config"
    env_file:
      - tb-edge.env
    volumes:
      - ./tb-edge/conf:/config
  tb-edge-2:
    restart: always
    image: "${DOCKER_REPO}/${TB_EDGE_DOCKER_NAME}:${TB_EDGE_VERSION}"
    ports:
      - "8083"
      - "1884"
    environment:
      CLOUD_ROUTING_KEY: "${CLOUD_ROUTING_KEY_2}"
      CLOUD_ROUTING_SECRET: "${CLOUD_ROUTING_SECRET_2}"
      SPRING_DATASOURCE_URL: "${SPRING_DATASOURCE_URL_2}"
      CLOUD_RPC_HOST: "${CLOUD_RPC_HOST}"
      HTTP_BIND_PORT: "8083"
      CONF_FOLDER: "/config"
      TB_QUEUE_TYPE: "kafka"
      TB_KAFKA_SERVERS: "kafka:9092"
    env_file:
      - tb-edge.env
    volumes:
      - ./tb-edge/conf:/config
  zookeeper:
    restart: always
    image: "zookeeper:3.8.0"
    ports:
      - "2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;zookeeper:2181
      ZOO_ADMINSERVER_ENABLED: "false"
  kafka:
    restart: always
    image: "bitnami/kafka:3.7.0"
    ports:
      - "9092"
    env_file:
      - kafka.env
    depends_on:
      - zookeeper
  tb-monolith:
    restart: always
    image: "${DOCKER_REPO}/${TB_NODE_DOCKER_NAME}:${TB_VERSION}"
    ports:
      - "7070"
      - "8080"
      - "1883"
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "30"
    environment:
      TB_SERVICE_ID: tb-monolith
      TB_SERVICE_TYPE: monolith
      MQTT_ENABLED: "false"
      COAP_ENABLED: "false"
      LWM2M_ENABLED: "false"
      SNMP_ENABLED: "false"
      EDGES_ENABLED: "true"
      TB_QUEUE_TYPE: "in-memory"
      TB_KAFKA_SERVERS: "kafka:9092"
    env_file:
      - tb-node.env
    volumes:
      - ./tb-node/conf:/config
      - ./tb-node/log:/var/log/thingsboard
      - ./tb-node/data:/data
    depends_on:
      - zookeeper
      - kafka
  zookeeper:
    restart: always
    image: "zookeeper:3.8.0"
    ports:
      - "2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;zookeeper:2181
      ZOO_ADMINSERVER_ENABLED: "false"
  kafka:
    restart: always
    image: "bitnami/kafka:3.7.0"
    ports:
      - "9092"
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CFG_LISTENERS: "INSIDE://:9093,OUTSIDE://:9092"
      KAFKA_CFG_ADVERTISED_LISTENERS: "INSIDE://:9093,OUTSIDE://kafka:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "INSIDE"
      KAFKA_CFG_LOG_RETENTION_BYTES: "1073741824"
      KAFKA_CFG_SEGMENT_BYTES: "268435456"
      KAFKA_CFG_LOG_RETENTION_MS: "300000"
      KAFKA_CFG_LOG_CLEANUP_POLICY: "delete"
    depends_on:
      - zookeeper
