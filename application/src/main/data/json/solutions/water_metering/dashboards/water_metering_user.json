{
  "title": "Water metering User dashboard",
  "image": null,
  "mobileHide": false,
  "mobileOrder": null,
  "configuration": {
    "widgets": {
      "80ac9372-6c45-28e7-6c88-baf76fe78318": {
        "type": "alarm",
        "sizeX": 16,
        "sizeY": 6,
        "config": {
          "timewindow": {
            "realtime": {
              "interval": 1000,
              "timewindowMs": 2592000000
            },
            "aggregation": {
              "type": "NONE",
              "limit": 200
            }
          },
          "showTitle": true,
          "backgroundColor": "rgb(255, 255, 255)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "4px",
          "settings": {
            "enableSelection": true,
            "enableSearch": true,
            "displayDetails": false,
            "allowAcknowledgment": false,
            "allowClear": true,
            "displayPagination": false,
            "defaultPageSize": 10,
            "defaultSortOrder": "-createdTime",
            "alarmsTitle": "Active Alarms",
            "enableSelectColumnDisplay": true,
            "enableFilter": true
          },
          "title": "Active Alarms",
          "dropShadow": false,
          "enableFullscreen": true,
          "titleStyle": {
            "fontSize": "18px",
            "fontWeight": 600,
            "padding": "5px 10px 5px 5px"
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "alarmSource": {
            "type": "entity",
            "name": "alarms",
            "entityAliasId": "f7bed459-ea25-5a39-bfc1-a3bb8c941d8d",
            "filterId": null,
            "dataKeys": [
              {
                "name": "createdTime",
                "type": "alarm",
                "label": "Created time",
                "color": "#2196f3",
                "settings": {},
                "_hash": 0.8381664834025695
              },
              {
                "name": "details.label",
                "type": "alarm",
                "label": "Originator",
                "color": "#9c27b0",
                "settings": {
                  "columnWidth": "0px",
                  "useCellStyleFunction": false,
                  "useCellContentFunction": false
                },
                "_hash": 0.9439985173644962
              },
              {
                "name": "type",
                "type": "alarm",
                "label": "Type",
                "color": "#f44336",
                "settings": {
                  "columnWidth": "0px",
                  "useCellStyleFunction": false,
                  "useCellContentFunction": false
                },
                "_hash": 0.29133570655221086
              },
              {
                "name": "severity",
                "type": "alarm",
                "label": "Severity",
                "color": "#ffc107",
                "settings": {
                  "columnWidth": "0px",
                  "useCellStyleFunction": false,
                  "cellStyleFunction": "",
                  "useCellContentFunction": false,
                  "cellContentFunction": ""
                },
                "_hash": 0.2887719874552679
              },
              {
                "name": "status",
                "type": "alarm",
                "label": "Status",
                "color": "#607d8b",
                "settings": {
                  "columnWidth": "0px",
                  "useCellStyleFunction": false,
                  "cellStyleFunction": "",
                  "useCellContentFunction": false,
                  "cellContentFunction": ""
                },
                "_hash": 0.8430731865074601
              }
            ]
          },
          "alarmsPollingInterval": 5,
          "datasources": [],
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "displayTimewindow": false,
          "actions": {
            "headerButton": []
          },
          "alarmsMaxCountLoad": 0,
          "alarmsFetchSize": 100,
          "alarmFilterConfig": {
            "statusList": [
              "ACTIVE"
            ],
            "severityList": [],
            "typeList": [
              "Weekly Consumption Threshold Exceeded Customer Alarm",
              "Daily Consumption Threshold Exceeded Customer Alarm",
              "Low Temperature Customer Alarm"
            ],
            "searchPropagatedAlarms": false
          }
        },
        "id": "80ac9372-6c45-28e7-6c88-baf76fe78318",
        "typeFullFqn": "system.alarm_widgets.alarms_table"
      },
      "e931ad52-49d0-d235-aa13-57de58615b97": {
        "type": "latest",
        "sizeX": 9,
        "sizeY": 15,
        "config": {
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "NONE",
              "limit": 200
            }
          },
          "showTitle": true,
          "backgroundColor": "rgb(255, 255, 255)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "4px",
          "settings": {
            "enableSearch": true,
            "displayPagination": false,
            "defaultPageSize": 10,
            "displayEntityName": false,
            "displayEntityType": false,
            "defaultSortOrder": "entityName",
            "entitiesTitle": "Water Meters",
            "enableSelectColumnDisplay": true,
            "entityNameColumnTitle": "Serial Number",
            "displayEntityLabel": true,
            "entityLabelColumnTitle": "Label"
          },
          "title": "Water Meters",
          "dropShadow": false,
          "enableFullscreen": false,
          "titleStyle": {
            "fontSize": "18px",
            "fontWeight": 600,
            "padding": "5px 10px 5px 5px"
          },
          "useDashboardTimewindow": false,
          "showLegend": false,
          "datasources": [
            {
              "type": "entity",
              "dataKeys": [
                {
                  "name": "meterReading",
                  "type": "timeseries",
                  "label": "Consumed",
                  "color": "#2196f3",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": false,
                    "useCellContentFunction": false
                  },
                  "_hash": 0.6622074305397865,
                  "units": "mÂ³",
                  "decimals": 2,
                  "postFuncBody": "return value || 0;"
                },
                {
                  "name": "active",
                  "type": "attribute",
                  "label": "Status",
                  "color": "#ffc107",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": false,
                    "useCellContentFunction": false
                  },
                  "_hash": 0.9076421001622259,
                  "postFuncBody": "if (value === 'true') {\n    return 'Active';\n} else {\n    return 'Inactive';\n}"
                }
              ],
              "entityAliasId": "f7bed459-ea25-5a39-bfc1-a3bb8c941d8d"
            }
          ],
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "displayTimewindow": true,
          "actions": {
            "rowClick": [
              {
                "id": "ee0e8b55-f381-f98d-68fe-89149ebe3152",
                "name": "View Details",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": null,
                "setEntityId": true,
                "stateEntityParamName": "device"
              }
            ],
            "headerButton": []
          }
        },
        "id": "e931ad52-49d0-d235-aa13-57de58615b97",
        "typeFullFqn": "system.cards.entities_table"
      },
      "291ab4b2-f371-9897-6856-385e5745f430": {
        "type": "latest",
        "sizeX": 22,
        "sizeY": 15,
        "config": {
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "NONE",
              "limit": 200
            }
          },
          "showTitle": true,
          "backgroundColor": "rgb(255, 255, 255)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "4px",
          "settings": {
            "enableSearch": true,
            "displayPagination": false,
            "defaultPageSize": 10,
            "displayEntityName": false,
            "displayEntityType": false,
            "defaultSortOrder": "entityName",
            "entitiesTitle": "Water Meters",
            "displayEntityLabel": true,
            "enableSelectColumnDisplay": true,
            "entityNameColumnTitle": "Serial Number",
            "entityLabelColumnTitle": "Label"
          },
          "title": "Water Meters",
          "dropShadow": false,
          "enableFullscreen": true,
          "titleStyle": {
            "fontSize": "18px",
            "fontWeight": 600,
            "padding": "5px 10px 5px 5px"
          },
          "useDashboardTimewindow": false,
          "showLegend": false,
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "f7bed459-ea25-5a39-bfc1-a3bb8c941d8d",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "pulseCounter",
                  "type": "timeseries",
                  "label": "Consumed",
                  "color": "#2196f3",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": false,
                    "useCellContentFunction": false
                  },
                  "_hash": 0.6622074305397865,
                  "units": "mÂ³",
                  "decimals": 2,
                  "postFuncBody": "return value || 0;",
                  "usePostProcessing": true,
                  "funcBody": null
                },
                {
                  "name": "address",
                  "type": "attribute",
                  "label": "Address",
                  "color": "#f44336",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": false,
                    "useCellContentFunction": false
                  },
                  "_hash": 0.9392023657375805
                },
                {
                  "name": "active",
                  "type": "attribute",
                  "label": "Status",
                  "color": "#ffc107",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": false,
                    "useCellContentFunction": false
                  },
                  "_hash": 0.9076421001622259,
                  "postFuncBody": "if (value === 'true') {\n    return 'Active';\n} else {\n    return 'Inactive';\n}"
                },
                {
                  "name": "leakage",
                  "type": "timeseries",
                  "label": "Leakage",
                  "color": "#8bc34a",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": true,
                    "useCellContentFunction": true,
                    "cellStyleFunction": "var color;\nif (value == 'true') {\n    color = '#EB5757';\n} else {\n    color = '#27AE60';\n}\nreturn {\n    color: color,\n    fontSize: '18px',\n    paddingLeft: '12px'\n};",
                    "cellContentFunction": "value = '&#11044;';\nreturn value;"
                  },
                  "_hash": 0.9508568110027811,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                }
              ]
            }
          ],
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "displayTimewindow": true,
          "actions": {
            "headerButton": [],
            "rowClick": [
              {
                "id": "81dffda7-f420-5b50-05ff-fa08077b9eb9",
                "name": "Device Details",
                "icon": "more_horiz",
                "type": "openDashboardState",
                "targetDashboardStateId": "device_details",
                "setEntityId": true
              }
            ],
            "actionCellButton": [
              {
                "name": "Edit Info",
                "icon": "edit",
                "type": "customPretty",
                "customHtml": "<form #editDeviceForm=\"ngForm\" [formGroup]=\"editDeviceFormGroup\" class=\"edit-device-form\" (ngSubmit)=\"save()\">\n  <mat-toolbar class=\"edit-device-form-toolbar flex flex-row\">\n    <h2>Edit Device</h2>\n    <span class=\"flex-1\"></span>\n    <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n  <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\"></mat-progress-bar>\n  <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n  <div mat-dialog-content class=\"flex flex-col\">\n    <fieldset [disabled]=\"(isLoading$ | async) || loading\">\n      <div class=\"flex flex-row gap-2 xs:flex-col xs:gap-0\">\n        <mat-form-field class=\"mat-block flex-1\">\n          <mat-label>Label</mat-label>\n          <input matInput formControlName=\"deviceLabel\" >\n        </mat-form-field>\n      </div>\n    </fieldset>\n  </div>\n  <div mat-dialog-actions class=\"edit-device-form-actions flex flex-row items-center justify-end\">\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button color=\"primary\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || loading || editDeviceForm.invalid || !editDeviceForm.dirty\">\n      Save\n    </button>\n  </div>\n</form>",
                "customCss": ".edit-device-form mat-toolbar.edit-device-form-toolbar {\n    background-color: #ffffff;\n    color: #333333;\n}\n.edit-device-form .edit-device-form-actions button[mat-button][color=\"primary\"] {\n    border: 1px solid #E0E0E0;\n}",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog')),\n    deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n\n    vm.device = {};\n\n    vm.editDeviceFormGroup = vm.fb.group({\n        deviceLabel: [null]\n    });\n\n    getEntityInfo();\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.save = () => {\n        vm.loading = true;\n        vm.editDeviceFormGroup.markAsPristine();\n        saveDevice().subscribe(\n            (/*device*/) => {\n                vm.loading = false;\n                widgetContext.updateAliases();\n                vm.dialogRef.close(null);\n            },\n            () => {\n                vm.loading = false;\n            }\n        );\n    };\n\n    function getEntityInfo() {\n        vm.loading = true;\n        deviceService.getDevice(entityId.id).subscribe(\n            (device) => {\n                vm.device = device;\n                vm.editDeviceFormGroup.patchValue({\n                    deviceLabel: vm.device.label || vm.device.name\n                }, {emitEvent: false});\n                vm.loading = false;\n            }\n        );\n    }\n\n    function saveDevice() {\n        const formValues = vm.editDeviceFormGroup.value;\n        if (vm.device.label !== formValues.deviceLabel) {\n            vm.device.label = formValues.deviceLabel;\n            return deviceService.saveDevice(vm.device);\n        }\n        return widgetContext.rxjs.of([]);\n    }\n}\n",
                "customResources": [],
                "id": "702a8de4-6902-3545-223d-be481a8a29f5"
              },
              {
                "name": "Set Location Parameters",
                "icon": "location_on",
                "type": "openDashboardState",
                "targetDashboardStateId": "set-location",
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": true,
                "dialogTitle": "",
                "dialogHideDashboardToolbar": true,
                "dialogWidth": null,
                "dialogHeight": null,
                "openRightLayout": false,
                "id": "8e19b15c-7b8c-2ba8-fc43-d995ad0b1bbb"
              }
            ]
          }
        },
        "id": "291ab4b2-f371-9897-6856-385e5745f430",
        "typeFullFqn": "system.cards.entities_table"
      },
      "c33ce26b-a96e-4de0-ae3b-7ddf92cf6555": {
        "type": "alarm",
        "sizeX": 8,
        "sizeY": 15,
        "config": {
          "timewindow": {
            "realtime": {
              "interval": 1000,
              "timewindowMs": 2592000000
            },
            "aggregation": {
              "type": "NONE",
              "limit": 200
            }
          },
          "showTitle": true,
          "backgroundColor": "rgb(255, 255, 255)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "4px",
          "settings": {
            "enableSelection": true,
            "enableSearch": true,
            "displayDetails": false,
            "allowAcknowledgment": false,
            "allowClear": true,
            "displayPagination": false,
            "defaultPageSize": 10,
            "defaultSortOrder": "-createdTime",
            "alarmsTitle": "Active Alarms",
            "enableSelectColumnDisplay": true,
            "enableFilter": true,
            "enableStickyHeader": true
          },
          "title": "Active Alarms",
          "dropShadow": false,
          "enableFullscreen": false,
          "titleStyle": {
            "fontSize": "18px",
            "fontWeight": 600,
            "padding": "5px 10px 5px 5px"
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "alarmSource": {
            "type": "entity",
            "name": "alarms",
            "entityAliasId": "f7bed459-ea25-5a39-bfc1-a3bb8c941d8d",
            "filterId": null,
            "dataKeys": [
              {
                "name": "createdTime",
                "type": "alarm",
                "label": "Created time",
                "color": "#2196f3",
                "settings": {},
                "_hash": 0.8381664834025695
              },
              {
                "name": "originator",
                "type": "alarm",
                "label": "Originator",
                "color": "#ffc107",
                "settings": {
                  "columnWidth": "0px",
                  "useCellStyleFunction": false,
                  "useCellContentFunction": false,
                  "defaultColumnVisibility": "visible",
                  "columnSelectionToDisplay": "enabled"
                },
                "_hash": 0.11602780870074247,
                "units": null,
                "decimals": null,
                "funcBody": null,
                "usePostProcessing": null,
                "postFuncBody": null
              },
              {
                "name": "type",
                "type": "alarm",
                "label": "Type",
                "color": "#f44336",
                "settings": {
                  "columnWidth": "0px",
                  "useCellStyleFunction": false,
                  "cellStyleFunction": "",
                  "useCellContentFunction": false,
                  "cellContentFunction": ""
                },
                "_hash": 0.5983551827511795
              }
            ]
          },
          "alarmsPollingInterval": 5,
          "datasources": [],
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "displayTimewindow": false,
          "actions": {
            "headerButton": [
              {
                "id": "1f58fb76-87bf-235a-4ce8-e3b67bf3c834",
                "name": "Alarms Details",
                "icon": "fullscreen",
                "type": "updateDashboardState",
                "targetDashboardStateId": "alarms",
                "setEntityId": false
              }
            ]
          },
          "alarmsMaxCountLoad": 0,
          "alarmsFetchSize": 100,
          "alarmFilterConfig": {
            "statusList": [
              "ACTIVE"
            ],
            "severityList": [],
            "typeList": [
              "Weekly Consumption Threshold Exceeded Customer Alarm",
              "Daily Consumption Threshold Exceeded Customer Alarm",
              "Low Temperature Customer Alarm"
            ],
            "searchPropagatedAlarms": false
          }
        },
        "id": "c33ce26b-a96e-4de0-ae3b-7ddf92cf6555",
        "typeFullFqn": "system.alarm_widgets.alarms_table"
      },
      "c2bdcb20-9d23-3ef4-34fd-950d8e322152": {
        "type": "latest",
        "sizeX": 8,
        "sizeY": 15,
        "config": {
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "NONE",
              "limit": 200
            }
          },
          "showTitle": true,
          "backgroundColor": "rgb(255, 255, 255)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "4px",
          "settings": {
            "enableSearch": true,
            "displayPagination": false,
            "defaultPageSize": 10,
            "displayEntityName": false,
            "displayEntityType": false,
            "defaultSortOrder": "entityName",
            "entitiesTitle": "Water Meters",
            "enableSelectColumnDisplay": true,
            "entityNameColumnTitle": "Serial Number",
            "displayEntityLabel": true,
            "entityLabelColumnTitle": "Label"
          },
          "title": "Water Meters",
          "dropShadow": false,
          "enableFullscreen": false,
          "titleStyle": {
            "fontSize": "18px",
            "fontWeight": 600,
            "padding": "5px 10px 5px 5px"
          },
          "useDashboardTimewindow": false,
          "showLegend": false,
          "datasources": [
            {
              "type": "entity",
              "dataKeys": [
                {
                  "name": "meterReading",
                  "type": "timeseries",
                  "label": "Consumed",
                  "color": "#2196f3",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": false,
                    "useCellContentFunction": false
                  },
                  "_hash": 0.6622074305397865,
                  "units": "mÂ³",
                  "decimals": 2,
                  "postFuncBody": "return value || 0;"
                },
                {
                  "name": "active",
                  "type": "attribute",
                  "label": "Status",
                  "color": "#ffc107",
                  "settings": {
                    "columnWidth": "0px",
                    "useCellStyleFunction": false,
                    "useCellContentFunction": false
                  },
                  "_hash": 0.9076421001622259,
                  "postFuncBody": "if (value === 'true') {\n    return 'Active';\n} else {\n    return 'Inactive';\n}"
                }
              ],
              "entityAliasId": "f7bed459-ea25-5a39-bfc1-a3bb8c941d8d"
            }
          ],
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "displayTimewindow": true,
          "actions": {
            "rowClick": [
              {
                "id": "7f27dc96-fe24-d16d-91ce-9e11c875febb",
                "name": "Device Details",
                "icon": "more_horiz",
                "type": "openDashboardState",
                "targetDashboardStateId": "device_details",
                "setEntityId": true
              }
            ],
            "headerButton": []
          }
        },
        "id": "c2bdcb20-9d23-3ef4-34fd-950d8e322152",
        "typeFullFqn": "system.cards.entities_table"
      },
      "db53f985-2418-e36d-6b5d-c51eb80c6264": {
        "type": "alarm",
        "sizeX": 22,
        "sizeY": 15,
        "config": {
          "timewindow": {
            "realtime": {
              "interval": 1000,
              "timewindowMs": 2592000000
            },
            "aggregation": {
              "type": "NONE",
              "limit": 200
            }
          },
          "showTitle": true,
          "backgroundColor": "rgb(255, 255, 255)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "4px",
          "settings": {
            "enableSelection": true,
            "enableSearch": true,
            "displayDetails": true,
            "allowAcknowledgment": true,
            "allowClear": true,
            "displayPagination": false,
            "defaultPageSize": 10,
            "defaultSortOrder": "-createdTime",
            "alarmsTitle": "Alarms",
            "enableSelectColumnDisplay": true,
            "enableFilter": true
          },
          "title": "Alarms",
          "dropShadow": false,
          "enableFullscreen": false,
          "titleStyle": {
            "fontSize": "18px",
            "fontWeight": 600,
            "padding": "5px 10px 5px 5px"
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "alarmSource": {
            "type": "entity",
            "name": "alarms",
            "entityAliasId": "f7bed459-ea25-5a39-bfc1-a3bb8c941d8d",
            "filterId": null,
            "dataKeys": [
              {
                "name": "createdTime",
                "type": "alarm",
                "label": "Created time",
                "color": "#2196f3",
                "settings": {},
                "_hash": 0.8381664834025695
              },
              {
                "name": "details.label",
                "type": "alarm",
                "label": "Originator",
                "color": "#9c27b0",
                "settings": {
                  "columnWidth": "0px",
                  "useCellStyleFunction": false,
                  "useCellContentFunction": false
                },
                "_hash": 0.7788473194269789
              },
              {
                "name": "type",
                "type": "alarm",
                "label": "Type",
                "color": "#f44336",
                "settings": {},
                "_hash": 0.3769001942764416
              },
              {
                "name": "severity",
                "type": "alarm",
                "label": "Severity",
                "color": "#ffc107",
                "settings": {},
                "_hash": 0.45046333683628226
              },
              {
                "name": "status",
                "type": "alarm",
                "label": "Status",
                "color": "#607d8b",
                "settings": {},
                "_hash": 0.7071153699227859
              }
            ]
          },
          "alarmsPollingInterval": 5,
          "datasources": [],
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "displayTimewindow": false,
          "actions": {},
          "alarmsMaxCountLoad": 0,
          "alarmsFetchSize": 100,
          "alarmFilterConfig": {
            "statusList": [],
            "severityList": [],
            "typeList": [
              "Low Temperature Customer Alarm",
              "Daily Consumption Threshold Exceeded Customer Alarm",
              "Weekly Consumption Threshold Exceeded Customer Alarm"
            ],
            "searchPropagatedAlarms": false
          }
        },
        "id": "db53f985-2418-e36d-6b5d-c51eb80c6264",
        "typeFullFqn": "system.alarm_widgets.alarms_table"
      },
      "2f9a86a1-b6ac-6fee-e67c-cbe72f2d41a7": {
        "type": "latest",
        "sizeX": 8,
        "sizeY": 3,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "dataKeys": [
                {
                  "name": "weeklyConsumption",
                  "type": "timeseries",
                  "label": "weeklyConsumption",
                  "color": "#4caf50",
                  "settings": {},
                  "_hash": 0.5838592690087288,
                  "postFuncBody": "return value || 0;"
                }
              ],
              "entityAliasId": "2754dd92-28a3-a689-d65c-ab9001a86f73"
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "cardCss": ".card {\n   width: 100%;\n   height: 100%;\n   border: 1px solid #E0E0E0;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 22px 30px;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .value {\n    font-size: 1.5em;\n    font-weight: bold;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n.card .description {\n    font-size: 1em;\n    font-weight: normal;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n@media (min-width: 960px) and (max-width: 1200px) {\n    .card .value {\n        font-size: 1.2em;\n        line-height: 1;\n    }\n    \n    .card .description {\n        font-size: 0.8em;\n        line-height: 1;\n    }\n}",
            "cardHtml": "<div class='card'>\n    <div class='content'>\n        <div class='value'>\n            ${weeklyConsumption:2} m<sup>3</sup>\n        </div> \n        <div class='description'>\n            Consumed per week\n        </div>\n    </div>\n</div>"
          },
          "title": "New HTML Value Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "displayTimewindow": true
        },
        "id": "2f9a86a1-b6ac-6fee-e67c-cbe72f2d41a7",
        "typeFullFqn": "system.cards.html_value_card"
      },
      "6f390f15-d267-3d9d-3afd-5b18247ddc2d": {
        "type": "latest",
        "sizeX": 8,
        "sizeY": 3,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "2754dd92-28a3-a689-d65c-ab9001a86f73",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "pulseCounter",
                  "type": "timeseries",
                  "label": "totalConsumption",
                  "color": "#2196f3",
                  "settings": {},
                  "_hash": 0.9485144836240813,
                  "postFuncBody": "return value || 0;",
                  "usePostProcessing": true,
                  "units": null,
                  "decimals": null,
                  "funcBody": null
                }
              ]
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "cardCss": ".card {\n   width: 100%;\n   height: 100%;\n   border: 1px solid #E0E0E0;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 22px 30px;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .value {\n    font-size: 1.5em;\n    font-weight: bold;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n.card .description {\n    font-size: 1em;\n    font-weight: normal;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n@media (min-width: 960px) and (max-width: 1200px) {\n    .card .value {\n        font-size: 1.2em;\n        line-height: 1;\n    }\n    \n    .card .description {\n        font-size: 0.8em;\n        line-height: 1;\n    }\n}",
            "cardHtml": "<div class='card'>\n    <div class='content'>\n        <div class='value'>\n            ${totalConsumption:2} m<sup>3</sup>\n        </div> \n        <div class='description'>\n            Consumed for all time\n        </div>\n    </div>\n</div>"
          },
          "title": "New HTML Value Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "displayTimewindow": true
        },
        "id": "6f390f15-d267-3d9d-3afd-5b18247ddc2d",
        "typeFullFqn": "system.cards.html_value_card"
      },
      "328e8d85-ed7c-ae06-d537-3edc002de94c": {
        "type": "latest",
        "sizeX": 7,
        "sizeY": 3,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "2754dd92-28a3-a689-d65c-ab9001a86f73",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "temperature",
                  "type": "timeseries",
                  "label": "temperature",
                  "color": "#2196f3",
                  "settings": {},
                  "_hash": 0.21584949493784333,
                  "postFuncBody": "if (typeof value === 'number') {\n    return value.toFixed(1) +' &#8451;';\n} else {\n    return '';\n}",
                  "decimals": 1,
                  "usePostProcessing": true,
                  "units": null,
                  "funcBody": null
                }
              ]
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "cardCss": ".card {\n   width: 100%;\n   height: 100%;\n   border: 1px solid #E0E0E0;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 22px 30px;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .value {\n    font-size: 1.5em;\n    font-weight: bold;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n.card .description {\n    font-size: 1em;\n    font-weight: normal;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n@media (min-width: 960px) and (max-width: 1200px) {\n    .card .value {\n        font-size: 1.2em;\n        line-height: 1;\n    }\n    \n    .card .description {\n        font-size: 0.8em;\n        line-height: 1;\n    }\n}",
            "cardHtml": "<div class='card'>\n    <div class='content'>\n        <div class='value'>\n            ${temperature:0}\n        </div> \n        <div class='description'>\n            Temperature\n        </div>\n    </div>\n</div>"
          },
          "title": "New HTML Value Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "displayTimewindow": true
        },
        "id": "328e8d85-ed7c-ae06-d537-3edc002de94c",
        "typeFullFqn": "system.cards.html_value_card"
      },
      "1e7b764e-6e7d-0bb3-7470-9e3b9154235c": {
        "type": "latest",
        "sizeX": 8,
        "sizeY": 5,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "dataKeys": [
                {
                  "name": "address",
                  "type": "attribute",
                  "label": "address",
                  "color": "#2196f3",
                  "settings": {},
                  "_hash": 0.7221680351335023
                },
                {
                  "name": "buildingOwner",
                  "type": "attribute",
                  "label": "buildingOwner",
                  "color": "#4caf50",
                  "settings": {},
                  "_hash": 0.5563788873287914
                },
                {
                  "name": "buildingOwnerEmail",
                  "type": "attribute",
                  "label": "buildingOwnerEmail",
                  "color": "#f44336",
                  "settings": {},
                  "_hash": 0.8134429336988194
                },
                {
                  "name": "renterName",
                  "type": "attribute",
                  "label": "renterName",
                  "color": "#ffc107",
                  "settings": {},
                  "_hash": 0.9602853858495966
                },
                {
                  "name": "renterPhone",
                  "type": "attribute",
                  "label": "renterPhone",
                  "color": "#607d8b",
                  "settings": {},
                  "_hash": 0.2924585860274258
                }
              ],
              "entityAliasId": "2754dd92-28a3-a689-d65c-ab9001a86f73"
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "cardCss": ".card {\n    width: 100%;\n    height: 100%;\n    border-top: 1px solid #E0E0E0;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n}\n\n.card .header {\n  font-size: 1.15em;\n  font-weight: 600;\n  padding: 10px 10px 5px 10px;\n  border-bottom: 1px solid #E0E0E0\n}\n\n.card .content {\n   padding: 0 12px 10px 12px;\n   display: flex;\n   flex-direction: column;\n   /*align-items: stretch;*/\n   justify-content: flex-start;\n   height: 100%;\n   overflow-y: auto;\n   box-sizing: border-box;\n}\n\n.card .row {\n    display: flex;\n    align-items: flex-end;\n    justify-content: space-between;\n    padding: 8px 5px 8px 0;\n}\n\n.card .divider {\n    border: 1px solid #F2F2F2;\n    margin: 5px -5px;\n}\n\n.card .value {\n    font-size: 1em;\n    line-height: 1.5;\n    color: #333333;\n    text-align: right;\n}\n\n.card .description {\n    font-size: 0.75em;\n    font-weight: normal;\n    line-height: 2;\n    text-transform: uppercase;\n    color: #333333;\n}\n\n@media (min-width: 960px) and (max-width: 1200px) {\n    .card .header {\n        font-size: 0.9em;\n    }\n    .card .value {\n        font-size: 0.7em;\n        line-height: 1;\n    }\n    .card .description {\n        font-size: 0.6em;\n        line-height: 1;\n    }\n}",
            "cardHtml": "<div class='card'>\n    <div class=\"header\">\n        <span>Meter location</span>\n    </div>\n    <div class='content'>\n        <div class=\"row\">\n            <span class='description'>Address:</span>\n            <span class='value'>${address}</span> \n        </div>\n        <div class=\"row\">\n            <span class='description'>Building owner:</span>\n            <span class='value'>${buildingOwner}</span> \n        </div>\n        <div class=\"row\">\n            <span class='description'>Owner email:</span>\n            <span class='value'>${buildingOwnerEmail}</span> \n        </div>\n        <div class=\"divider\"></div>\n        <div class=\"row\">\n            <span class='description'>Renter name:</span>\n            <span class='value'>${renterName}</span> \n        </div>\n        <div class=\"row\">\n            <span class='description'>Renter phone:</span>\n            <span class='value'>${renterPhone}</span> \n        </div>\n    </div>\n</div>"
          },
          "title": "Meter location",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "titleStyle": {
            "fontSize": "18px",
            "fontWeight": 600,
            "padding": "5px 10px 5px 5px"
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {
            "headerButton": [
              {
                "name": "Edit Info",
                "icon": "edit",
                "type": "customPretty",
                "customHtml": "<form #editDeviceForm=\"ngForm\" [formGroup]=\"editDeviceFormGroup\" class=\"edit-device-form\" (ngSubmit)=\"save()\">\n  <mat-toolbar class=\"edit-device-form-toolbar flex flex-row\">\n    <h2>Edit Contact Info</h2>\n    <span class=\"flex-1\"></span>\n    <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n  <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\"></mat-progress-bar>\n  <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n  <div mat-dialog-content class=\"flex flex-col\">\n    <fieldset [disabled]=\"(isLoading$ | async) || loading\">\n      <mat-form-field class=\"mat-block flex-1\">\n        <mat-label>Address</mat-label>\n        <input matInput formControlName=\"address\">\n      </mat-form-field>\n      <div class=\"flex flex-row gap-2 xs:flex-col xs:gap-0\">\n        <mat-form-field class=\"mat-block flex-1\">\n          <mat-label>Building owner</mat-label>\n          <input matInput formControlName=\"buildingOwner\">\n        </mat-form-field>\n        <mat-form-field class=\"mat-block flex-1\">\n          <mat-label>Owner email</mat-label>\n          <input matInput type=\"email\" formControlName=\"buildingOwnerEmail\" >\n          <mat-error *ngIf=\"editDeviceFormGroup.get('buildingOwnerEmail').hasError('email')\">\n            Invalid value format\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"flex flex-row gap-2 xs:flex-col xs:gap-0\">\n        <mat-form-field class=\"mat-block flex-1\">\n          <mat-label>Renter name</mat-label>\n          <input matInput formControlName=\"renterName\">\n        </mat-form-field>\n        <mat-form-field class=\"mat-block flex-1\">\n          <mat-label>Renter phone</mat-label>\n          <input matInput formControlName=\"renterPhone\" >\n        </mat-form-field>\n      </div>\n    </fieldset>\n  </div>\n  <div mat-dialog-actions class=\"edit-device-form-actions flex flex-row items-center justify-end\">\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button color=\"primary\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || loading || editDeviceForm.invalid || !editDeviceForm.dirty\">\n      Save\n    </button>\n  </div>\n</form>",
                "customCss": ".edit-device-form mat-toolbar.edit-device-form-toolbar {\n    background-color: #ffffff;\n    color: #333333;\n}\n.edit-device-form .edit-device-form-actions button[mat-button][color=\"primary\"] {\n    border: 1px solid #E0E0E0;\n}",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog')),\n    attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n\n    vm.attributes = {};\n    let attributesKeys = ['address', 'buildingOwner', 'buildingOwnerEmail', 'renterName', 'renterPhone'];\n\n    vm.editDeviceFormGroup = vm.fb.group({\n        address: [''],\n        buildingOwner: [''],\n        buildingOwnerEmail: ['', [vm.validators.email]],\n        renterName: [''],\n        renterPhone: ['']\n    });\n\n    getEntityInfo(attributesKeys);\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.save = () => {\n        vm.loading = true;\n        vm.editDeviceFormGroup.markAsPristine();\n        saveAttributes(entityId).subscribe(\n            () => {\n                vm.loading = false;\n                vm.dialogRef.close(null);\n            },\n            () => {\n                vm.loading = false;\n            }\n        );\n    };\n\n    function getEntityInfo(attributesKeys) {\n        vm.loading = true;\n        attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', attributesKeys).subscribe(\n            (data) => {\n                if (data.length) {\n                    getEntityAttributes(data);\n                    vm.editDeviceFormGroup.patchValue(vm.attributes, {emitEvent: false});\n                }\n                vm.loading = false;\n            }\n        );\n    }\n\n    function getEntityAttributes(attributes) {\n        for (let i = 0; i < attributes.length; i++) {\n            vm.attributes[attributes[i].key] = attributes[i].value;\n        }\n    }\n\n    function saveAttributes(entityId) {\n        let attributes = vm.editDeviceFormGroup.value;\n        let attributesArray = [];\n        for (let key in attributes) {\n            if (attributes[key] !== vm.attributes[key]) {\n                attributesArray.push({key: key, value: attributes[key]});\n            }\n        }\n        if (attributesArray.length > 0) {\n            return attributeService.saveEntityAttributes(entityId, \"SERVER_SCOPE\", attributesArray);\n        }\n        return widgetContext.rxjs.of([]);\n    }\n}",
                "customResources": [],
                "id": "5d71c0f8-1abb-941a-593a-416885366684"
              }
            ]
          },
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "displayTimewindow": true
        },
        "id": "1e7b764e-6e7d-0bb3-7470-9e3b9154235c",
        "typeFullFqn": "system.cards.html_value_card"
      },
      "51f6f10f-c491-9e27-04d5-a235ca4fc16c": {
        "type": "latest",
        "sizeX": 8,
        "sizeY": 5,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "2754dd92-28a3-a689-d65c-ab9001a86f73",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "active",
                  "type": "attribute",
                  "label": "active",
                  "color": "#4caf50",
                  "settings": {},
                  "_hash": 0.9421613144570329,
                  "postFuncBody": "if (value === 'false') {\n    return 'Inactive';\n} else {\n    return 'Active';\n}"
                },
                {
                  "name": "name",
                  "type": "attribute",
                  "label": "name",
                  "color": "#f44336",
                  "settings": {},
                  "_hash": 0.2130486689083202
                },
                {
                  "name": "installationDate",
                  "type": "attribute",
                  "label": "installationDate",
                  "color": "#607d8b",
                  "settings": {},
                  "_hash": 0.2099158296476744,
                  "postFuncBody": "if (value) {\n    return moment(value).format(\"LL\");\n} else {\n    return 'Not set';\n}",
                  "usePostProcessing": true,
                  "units": null,
                  "decimals": null,
                  "funcBody": null
                },
                {
                  "name": "label",
                  "type": "entityField",
                  "label": "Label",
                  "color": "#ffc107",
                  "settings": {},
                  "_hash": 0.11187010061655278
                }
              ]
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "cardHtml": "<div class='card'>\n    <div class=\"header\">\n        <span>Meter details</span>\n    </div>\n    <div class='content'>\n        <div class=\"row\">\n            <span class='description'>Label:</span>\n            <span class='value'>${entityLabel:0}</span> \n        </div>\n        <div class=\"row\">\n            <span class='description'>Status:</span>\n            <span class='value'>${active}</span> \n        </div>\n        <div class=\"row\">\n            <span class='description'>Name:</span>\n            <span class='value'>${name}</span> \n        </div>\n        <div class=\"divider\"></div>\n        <div class=\"row\">\n            <span class='description'>Date of installation:</span>\n            <span class='value'>${installationDate}</span> \n        </div>\n    </div>\n</div>",
            "cardCss": ".card {\n    width: 100%;\n    height: 100%;\n    border-top: 1px solid #E0E0E0;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n}\n\n.card .header {\n  font-size: 1.15em;\n  font-weight: 600;\n  padding: 10px 10px 5px 10px;\n  border-bottom: 1px solid #E0E0E0\n}\n\n.card .content {\n   padding: 0 12px 10px 12px;\n   display: flex;\n   flex-direction: column;\n   align-items: stretch;\n   justify-content: flex-start;\n   height: 100%;\n   overflow-y: auto;\n   box-sizing: border-box;\n}\n\n.card .row {\n    display: flex;\n    align-items: flex-end;\n    justify-content: space-between;\n    padding: 8px 5px 8px 0;\n}\n\n.card .divider {\n    border: 1px solid #F2F2F2;\n    margin: 5px -5px;\n}\n\n.card .value {\n    font-size: 1em;\n    line-height: 1.5;\n    color: #333333;\n    text-align: right;\n}\n\n.card .description {\n    font-size: 0.75em;\n    font-weight: normal;\n    line-height: 2;\n    text-transform: uppercase;\n    color: #333333;\n}\n\n@media (min-width: 960px) and (max-width: 1200px) {\n    .card .header {\n        font-size: 0.9em;\n    }\n    .card .value {\n        font-size: 0.7em;\n        line-height: 1;\n    }\n    .card .description {\n        font-size: 0.6em;\n        line-height: 1;\n    }\n}"
          },
          "title": "Meter details",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "titleStyle": {
            "fontSize": "18px",
            "fontWeight": 600,
            "padding": "5px 10px 5px 5px"
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {
            "headerButton": [
              {
                "name": "Edit Info",
                "icon": "edit",
                "type": "customPretty",
                "customHtml": "<form #editDeviceForm=\"ngForm\" [formGroup]=\"editDeviceFormGroup\" class=\"edit-device-form\" (ngSubmit)=\"save()\">\n  <mat-toolbar class=\"edit-device-form-toolbar flex flex-row\">\n    <h2>Edit Meter Details</h2>\n    <span class=\"flex-1\"></span>\n    <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n  <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\"></mat-progress-bar>\n  <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n  <div mat-dialog-content class=\"flex flex-col\">\n    <fieldset [disabled]=\"(isLoading$ | async) || loading\">\n      <div class=\"flex flex-row gap-2 xs:flex-col xs:gap-0\">\n        <mat-form-field class=\"mat-block flex-1\">\n          <mat-label>Label</mat-label>\n          <input matInput formControlName=\"deviceLabel\" >\n        </mat-form-field>\n      </div>\n      <div formGroupName=\"attributes\" class=\"flex flex-col\">\n        <mat-form-field class=\"mat-block flex-1\">\n          <mat-label>Name</mat-label>\n          <input matInput formControlName=\"name\">\n        </mat-form-field>\n        <mat-form-field class=\"mat-block flex-1\">\n          <mat-placeholder>Date of installation</mat-placeholder>\n          <mat-datetimepicker-toggle [for]=\"datePicker\" matPrefix></mat-datetimepicker-toggle>\n          <mat-datetimepicker #datePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\n          <input matInput formControlName=\"installationDate\" [matDatetimepicker]=\"datePicker\">\n        </mat-form-field>\n      </div>\n    </fieldset>\n  </div>\n  <div mat-dialog-actions class=\"edit-device-form-actions flex flex-row items-center justify-end\">\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button color=\"primary\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || loading || editDeviceForm.invalid || !editDeviceForm.dirty\">\n      Save\n    </button>\n  </div>\n</form>\n\n",
                "customCss": ".edit-device-form mat-toolbar.edit-device-form-toolbar {\n    background-color: #ffffff;\n    color: #333333;\n}\n.edit-device-form .edit-device-form-actions button[mat-button][color=\"primary\"] {\n    border: 1px solid #E0E0E0;\n}",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog')),\n    deviceService = $injector.get(widgetContext.servicesMap.get('deviceService')),\n    attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n\n    vm.device = {};\n    vm.attributes = {};\n    let attributesKeys = ['name', 'installationDate'];\n\n    vm.editDeviceFormGroup = vm.fb.group({\n        deviceLabel: [entityLabel || entityName],\n        attributes: vm.fb.group({\n            name: [''],\n            installationDate: [null]\n        })\n    });\n\n    getEntityInfo();\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.save = () => {\n        vm.loading = true;\n        vm.editDeviceFormGroup.markAsPristine();\n        widgetContext.rxjs.forkJoin([saveDevice(), saveAttributes(entityId)]).subscribe(\n            () => {\n                vm.loading = false;\n                widgetContext.updateAliases();\n                vm.dialogRef.close(null);\n            },\n            () => {\n                vm.loading = false;\n            }\n        );\n    };\n\n    function getEntityInfo() {\n        vm.loading = true;\n        widgetContext.rxjs.forkJoin([\n            deviceService.getDevice(entityId.id),\n            attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', attributesKeys)]).subscribe(\n            (data) => {\n                vm.device = data[0];\n                if (data[1].length) {\n                    getEntityAttributes(data[1]);\n                    vm.editDeviceFormGroup.patchValue(\n                        {attributes: vm.attributes},\n                        {emitEvent: false}\n                        );\n                }\n                vm.loading = false;\n            }\n        );\n    }\n\n    function saveDevice() {\n        const formValues = vm.editDeviceFormGroup.value;\n        if (vm.device.label !== formValues.deviceLabel) {\n            vm.device.label = formValues.deviceLabel;\n            return deviceService.saveDevice(vm.device);\n        }\n        return widgetContext.rxjs.of([]);\n    }\n\n    function getEntityAttributes(attributes) {\n        for (let i = 0; i < attributes.length; i++) {\n            if (attributes[i].key === 'installationDate') {\n                vm.attributes[attributes[i].key] = moment(attributes[i].value).toDate();\n            } else {\n                vm.attributes[attributes[i].key] = attributes[i].value;\n            }\n        }\n    }\n\n    function saveAttributes(entityId) {\n        let attributes = vm.editDeviceFormGroup.get('attributes').value;\n        let attributesArray = [];\n        for (let key in attributes) {\n            if (attributes[key] !== vm.attributes[key]) {\n                attributesArray.push({key: key, value: attributes[key]});\n            }\n        }\n        if (attributesArray.length > 0) {\n            return attributeService.saveEntityAttributes(entityId, \"SERVER_SCOPE\", attributesArray);\n        }\n        return widgetContext.rxjs.of([]);\n    }\n}",
                "customResources": [],
                "id": "eae3f520-d7a8-e886-e8ae-ec42f497286e"
              }
            ]
          },
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "displayTimewindow": true
        },
        "id": "51f6f10f-c491-9e27-04d5-a235ca4fc16c",
        "typeFullFqn": "system.cards.html_value_card"
      },
      "0924e14a-b8cc-2566-90e1-5c6f9819761e": {
        "type": "latest",
        "sizeX": 7,
        "sizeY": 5,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "dataKeys": [
                {
                  "name": "meterPhoto",
                  "type": "attribute",
                  "label": "meterPhoto",
                  "color": "#2196f3",
                  "settings": {},
                  "_hash": 0.12577658530662794
                }
              ],
              "entityAliasId": "2754dd92-28a3-a689-d65c-ab9001a86f73"
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "cardHtml": "<div class='card'>\n    <div class=\"header\">\n        <span>Photo</span>\n    </div>\n    <div class='content'>\n       <div class='meter-photo'>\n            <img src=\"${meterPhoto}\">\n        </div>\n    </div>\n</div>",
            "cardCss": ".card {\n    width: 100%;\n    height: 100%;\n    border-top: 1px solid #E0E0E0;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n}\n\n.card .header {\n  font-size: 1.15em;\n  font-weight: 600;\n  padding: 10px 10px 5px 10px;\n  border-bottom: 1px solid #E0E0E0\n}\n\n.card .content {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    justify-content: flex-start;\n    height: 100%;\n    overflow-y: auto;\n    box-sizing: border-box;\n}\n\n.card .meter-photo {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    z-index: 0;\n}\n\n.card .meter-photo img {\n    width: auto;\n    height: 100%;\n    object-fit: contain;\n}\n\n@media (min-width: 960px) and (max-width: 1200px) {\n    .card .header {\n        font-size: 0.9em;\n    }\n}"
          },
          "title": "Photo",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "titleStyle": {
            "fontSize": "18px",
            "fontWeight": 600,
            "padding": "5px 10px 5px 5px"
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {
            "headerButton": [
              {
                "name": "Edit Photo",
                "icon": "edit",
                "type": "customPretty",
                "customHtml": "<form #editDeviceForm=\"ngForm\" [formGroup]=\"editDeviceFormGroup\" class=\"edit-device-form\" (ngSubmit)=\"save()\">\n  <mat-toolbar class=\"edit-device-form-toolbar flex flex-row\">\n    <h2>Edit Photo</h2>\n    <span class=\"flex-1\"></span>\n    <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n  <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\"></mat-progress-bar>\n  <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n  <div mat-dialog-content class=\"flex flex-col\">\n    <fieldset [disabled]=\"(isLoading$ | async) || loading\">\n      <tb-image-input\n          formControlName=\"meterPhoto\"\n          [showPreview]=\"true\"\n          [showClearButton]=\"true\">\n      </tb-image-input>\n    </fieldset>\n  </div>\n  <div mat-dialog-actions class=\"edit-device-form-actions flex flex-row items-center justify-end\">\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button color=\"primary\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || loading || editDeviceForm.invalid || !editDeviceForm.dirty\">\n      Save\n    </button>\n  </div>\n</form>",
                "customCss": ".edit-device-form mat-toolbar.edit-device-form-toolbar {\n    background-color: #ffffff;\n    color: #333333;\n}\n.edit-device-form .edit-device-form-actions button[mat-button][color=\"primary\"] {\n    border: 1px solid #E0E0E0;\n}",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog')),\n    attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n\n    vm.attributes = {};\n    let attributesKeys = ['meterPhoto'];\n\n    vm.editDeviceFormGroup = vm.fb.group({\n        meterPhoto: [null]\n    });\n\n    getEntityInfo(attributesKeys);\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.save = () => {\n        vm.loading = true;\n        vm.editDeviceFormGroup.markAsPristine();\n        saveAttributes(entityId).subscribe(\n            () => {\n                vm.loading = false;\n                vm.dialogRef.close(null);\n            },\n            () => {\n                vm.loading = false;\n            }\n        );\n    };\n\n    function getEntityInfo(attributesKeys) {\n        vm.loading = true;\n        attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', attributesKeys).subscribe(\n            (data) => {\n                if (data.length) {\n                    getEntityAttributes(data);\n                    vm.editDeviceFormGroup.patchValue(vm.attributes, {emitEvent: false});\n                }\n                vm.loading = false;\n            }\n        );\n    }\n\n    function getEntityAttributes(attributes) {\n        for (let i = 0; i < attributes.length; i++) {\n            vm.attributes[attributes[i].key] = attributes[i].value;\n        }\n    }\n\n    function saveAttributes(entityId) {\n        let attributes = vm.editDeviceFormGroup.value;\n        let attributesArray = [];\n        for (let key in attributes) {\n            if (attributes[key] !== vm.attributes[key]) {\n                attributesArray.push({key: key, value: attributes[key]});\n            }\n        }\n        if (attributesArray.length > 0) {\n            return attributeService.saveEntityAttributes(entityId, \"SERVER_SCOPE\", attributesArray);\n        }\n        return widgetContext.rxjs.of([]);\n    }\n}",
                "customResources": [],
                "id": "70bd8e2b-d9b3-dd73-fa16-764bb61521c4"
              }
            ]
          },
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "displayTimewindow": true
        },
        "id": "0924e14a-b8cc-2566-90e1-5c6f9819761e",
        "typeFullFqn": "system.cards.html_value_card"
      },
      "1b26a5b1-61be-945c-b7a7-85edc3e219cf": {
        "type": "latest",
        "sizeX": 10,
        "sizeY": 15,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "98886949-dba9-9fcf-7b4f-9d3937df249a",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "cLowTempAlarmEnabled",
                  "type": "attribute",
                  "label": "Low Temperature Alarm",
                  "color": "#4caf50",
                  "settings": {
                    "dataKeyType": "server",
                    "dataKeyValueType": "booleanSwitch",
                    "required": false,
                    "isEditable": "editable",
                    "dataKeyHidden": false,
                    "step": 1
                  },
                  "_hash": 0.7775367356739471,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "cLowTempThreshold",
                  "type": "attribute",
                  "label": "Low Temperature Threshold",
                  "color": "#e91e63",
                  "settings": {
                    "dataKeyHidden": false,
                    "dataKeyType": "server",
                    "dataKeyValueType": "string",
                    "required": false,
                    "isEditable": "editable",
                    "disabledOnDataKey": "cLowTempAlarmEnabled",
                    "appearance": "outline",
                    "subscriptSizing": "dynamic",
                    "useCustomIcon": false,
                    "useGetValueFunction": false,
                    "useSetValueFunction": false
                  },
                  "_hash": 0.9590971916933051,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null,
                  "aggregationType": null
                },
                {
                  "name": "cDailyConsumptionAlarmEnabled",
                  "type": "attribute",
                  "label": "Exceeding Daily Consumption Alarm",
                  "color": "#ffc107",
                  "settings": {
                    "dataKeyType": "server",
                    "dataKeyValueType": "booleanSwitch",
                    "required": false,
                    "isEditable": "editable",
                    "dataKeyHidden": false,
                    "step": 1
                  },
                  "_hash": 0.07853020804094801,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "cDailyConsumptionThreshold",
                  "type": "attribute",
                  "label": "Daily Consumption Threshold",
                  "color": "#9c27b0",
                  "settings": {
                    "dataKeyHidden": false,
                    "dataKeyType": "server",
                    "dataKeyValueType": "double",
                    "required": false,
                    "isEditable": "editable",
                    "disabledOnDataKey": "cDailyConsumptionAlarmEnabled",
                    "appearance": "outline",
                    "subscriptSizing": "dynamic",
                    "step": 1,
                    "useCustomIcon": false,
                    "useGetValueFunction": false,
                    "useSetValueFunction": false
                  },
                  "_hash": 0.20555135495339383,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null,
                  "aggregationType": null
                },
                {
                  "name": "cWeeklyConsumptionAlarmEnabled",
                  "type": "attribute",
                  "label": "Exceeding Weekly Consumption Alarm",
                  "color": "#607d8b",
                  "settings": {
                    "dataKeyType": "server",
                    "dataKeyValueType": "booleanSwitch",
                    "required": false,
                    "isEditable": "editable",
                    "dataKeyHidden": false,
                    "step": 1
                  },
                  "_hash": 0.3361600543780858,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "cWeeklyConsumptionThreshold",
                  "type": "attribute",
                  "label": "Weekly Consumption Threshold",
                  "color": "#8bc34a",
                  "settings": {
                    "dataKeyHidden": false,
                    "dataKeyType": "server",
                    "dataKeyValueType": "double",
                    "required": false,
                    "isEditable": "editable",
                    "disabledOnDataKey": "cWeeklyConsumptionAlarmEnabled",
                    "appearance": "outline",
                    "subscriptSizing": "dynamic",
                    "step": 1,
                    "useCustomIcon": false,
                    "useGetValueFunction": false,
                    "useSetValueFunction": false
                  },
                  "_hash": 0.9860115623092394,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null,
                  "aggregationType": null
                }
              ],
              "alarmFilterConfig": {
                "statusList": [
                  "ACTIVE"
                ]
              }
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": true,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "8px",
          "settings": {
            "widgetTitle": "System Alarms",
            "showResultMessage": true,
            "showActionButtons": false,
            "showGroupTitle": false,
            "fieldsAlignment": "column",
            "rowGap": 10,
            "groupTitle": "${entityName}",
            "fieldsInRow": 2,
            "columnGap": 10
          },
          "title": "New Update Multiple Attributes",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {
            "border": "1px solid #E0E0E0",
            "fontSize": "12px",
            "textTransform": "uppercase",
            "white-space": "normal !important"
          },
          "titleStyle": {
            "fontSize": "18px",
            "fontWeight": 600,
            "padding": "5px 10px 5px 5px",
            "textTransform": "capitalize"
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "displayTimewindow": true,
          "widgetCss": ".mdc-form-field, .mat-mdc-floating-label {\n    text-transform: uppercase;\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "1b26a5b1-61be-945c-b7a7-85edc3e219cf",
        "typeFullFqn": "system.input_widgets.update_multiple_attributes"
      },
      "e5602f65-3248-dc60-799c-0d8b413e3604": {
        "type": "latest",
        "sizeX": 10,
        "sizeY": 15,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "98886949-dba9-9fcf-7b4f-9d3937df249a",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "lowTempSmsEnabled",
                  "type": "attribute",
                  "label": "Low Temperature Alarm",
                  "color": "#4caf50",
                  "settings": {
                    "dataKeyType": "server",
                    "dataKeyValueType": "booleanSwitch",
                    "required": false,
                    "isEditable": "editable",
                    "dataKeyHidden": false,
                    "step": 1,
                    "disabledOnDataKey": "cLowTempAlarmEnabled"
                  },
                  "_hash": 0.7775367356739471,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "dailyConsumptionSmsEnabled",
                  "type": "attribute",
                  "label": "Exceeding Daily Consumption Alarm",
                  "color": "#ffc107",
                  "settings": {
                    "dataKeyType": "server",
                    "dataKeyValueType": "booleanSwitch",
                    "required": false,
                    "isEditable": "editable",
                    "dataKeyHidden": false,
                    "step": 1,
                    "disabledOnDataKey": "cDailyConsumptionAlarmEnabled"
                  },
                  "_hash": 0.07853020804094801,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "weeklyConsumptionSmsEnabled",
                  "type": "attribute",
                  "label": "Exceeding Weekly Consumption Alarm",
                  "color": "#607d8b",
                  "settings": {
                    "dataKeyType": "server",
                    "dataKeyValueType": "booleanSwitch",
                    "required": false,
                    "isEditable": "editable",
                    "dataKeyHidden": false,
                    "step": 1,
                    "disabledOnDataKey": "cWeeklyConsumptionAlarmEnabled"
                  },
                  "_hash": 0.1337452487876316,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "cLowTempAlarmEnabled",
                  "type": "attribute",
                  "label": "cLowTempAlarmEnabled",
                  "color": "#8bc34a",
                  "settings": {
                    "dataKeyType": "server",
                    "dataKeyValueType": "string",
                    "required": false,
                    "isEditable": "editable",
                    "dataKeyHidden": true,
                    "step": 1
                  },
                  "_hash": 0.10791951005981737,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "cDailyConsumptionAlarmEnabled",
                  "type": "attribute",
                  "label": "cDailyConsumptionAlarmEnabled",
                  "color": "#e91e63",
                  "settings": {
                    "dataKeyType": "server",
                    "dataKeyValueType": "string",
                    "required": false,
                    "isEditable": "editable",
                    "dataKeyHidden": true,
                    "step": 1
                  },
                  "_hash": 0.6877141787041134,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "cWeeklyConsumptionAlarmEnabled",
                  "type": "attribute",
                  "label": "cWeeklyConsumptionAlarmEnabled",
                  "color": "#ffeb3b",
                  "settings": {
                    "dataKeyType": "server",
                    "dataKeyValueType": "string",
                    "required": false,
                    "isEditable": "editable",
                    "dataKeyHidden": true,
                    "step": 1
                  },
                  "_hash": 0.3514341740752789,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                }
              ]
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": true,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "8px",
          "settings": {
            "showActionButtons": false,
            "showResultMessage": true,
            "fieldsAlignment": "column",
            "fieldsInRow": 2,
            "widgetTitle": "SMS Notifications",
            "groupTitle": "${entityName}",
            "columnGap": 10,
            "rowGap": 5
          },
          "title": "SMS Notifications",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {
            "border": "1px solid #E0E0E0",
            "fontSize": "12px",
            "textTransform": "uppercase",
            "white-space": "normal !important"
          },
          "titleStyle": {
            "fontSize": "18px",
            "fontWeight": 600,
            "padding": "5px 10px 5px 5px",
            "textTransform": "capitalize"
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "displayTimewindow": true,
          "widgetCss": ".mdc-form-field, .mat-mdc-floating-label {\n    text-transform: uppercase;\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "e5602f65-3248-dc60-799c-0d8b413e3604",
        "typeFullFqn": "system.input_widgets.update_multiple_attributes"
      },
      "2b036a6f-052f-46fe-14c6-6dc59416704f": {
        "type": "latest",
        "sizeX": 10,
        "sizeY": 15,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "98886949-dba9-9fcf-7b4f-9d3937df249a",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "lowTempEmailEnabled",
                  "type": "attribute",
                  "label": "Low Temperature Alarm",
                  "color": "#4caf50",
                  "settings": {
                    "dataKeyType": "server",
                    "dataKeyValueType": "booleanSwitch",
                    "required": false,
                    "isEditable": "editable",
                    "dataKeyHidden": false,
                    "step": 1,
                    "disabledOnDataKey": "cLowTempAlarmEnabled"
                  },
                  "_hash": 0.7775367356739471,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "dailyConsumptionEmailEnabled",
                  "type": "attribute",
                  "label": "Exceeding Daily Consumption Alarm",
                  "color": "#ffc107",
                  "settings": {
                    "dataKeyType": "server",
                    "dataKeyValueType": "booleanSwitch",
                    "required": false,
                    "isEditable": "editable",
                    "dataKeyHidden": false,
                    "step": 1,
                    "disabledOnDataKey": "cDailyConsumptionAlarmEnabled"
                  },
                  "_hash": 0.07853020804094801,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "weeklyConsumptionEmailEnabled",
                  "type": "attribute",
                  "label": "Exceeding Weekly Consumption Alarm",
                  "color": "#607d8b",
                  "settings": {
                    "dataKeyType": "server",
                    "dataKeyValueType": "booleanSwitch",
                    "required": false,
                    "isEditable": "editable",
                    "dataKeyHidden": false,
                    "step": 1,
                    "disabledOnDataKey": "cWeeklyConsumptionAlarmEnabled"
                  },
                  "_hash": 0.1337452487876316,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "cLowTempAlarmEnabled",
                  "type": "attribute",
                  "label": "cLowTempAlarmEnabled",
                  "color": "#8bc34a",
                  "settings": {
                    "dataKeyType": "server",
                    "dataKeyValueType": "string",
                    "required": false,
                    "isEditable": "editable",
                    "dataKeyHidden": true,
                    "step": 1
                  },
                  "_hash": 0.33533143393702325,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "cDailyConsumptionAlarmEnabled",
                  "type": "attribute",
                  "label": "cDailyConsumptionAlarmEnabled",
                  "color": "#e91e63",
                  "settings": {
                    "dataKeyType": "server",
                    "dataKeyValueType": "string",
                    "required": false,
                    "isEditable": "editable",
                    "dataKeyHidden": true,
                    "step": 1
                  },
                  "_hash": 0.8778621689054382,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "cWeeklyConsumptionAlarmEnabled",
                  "type": "attribute",
                  "label": "cWeeklyConsumptionAlarmEnabled",
                  "color": "#ffeb3b",
                  "settings": {
                    "dataKeyType": "server",
                    "dataKeyValueType": "string",
                    "required": false,
                    "isEditable": "editable",
                    "dataKeyHidden": true,
                    "step": 1
                  },
                  "_hash": 0.4706952279595922,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                }
              ]
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": true,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "8px",
          "settings": {
            "showActionButtons": false,
            "showResultMessage": true,
            "fieldsAlignment": "column",
            "fieldsInRow": 2,
            "widgetTitle": "Email Notifications",
            "groupTitle": "${entityName}",
            "columnGap": 10,
            "rowGap": 5
          },
          "title": "Email Notifications",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {
            "border": "1px solid #E0E0E0",
            "fontSize": "12px",
            "textTransform": "uppercase",
            "white-space": "normal !important"
          },
          "titleStyle": {
            "fontSize": "18px",
            "fontWeight": 600,
            "padding": "5px 10px 5px 5px",
            "textTransform": "capitalize"
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "displayTimewindow": true,
          "widgetCss": ".mdc-form-field, .mat-mdc-floating-label {\n    text-transform: uppercase;\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": ""
        },
        "id": "2b036a6f-052f-46fe-14c6-6dc59416704f",
        "typeFullFqn": "system.input_widgets.update_multiple_attributes"
      },
      "41f3bd64-9293-91b4-60aa-eeb4971f96bd": {
        "type": "latest",
        "sizeX": 7,
        "sizeY": 3,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "e8bf7353-e2d4-1343-d6d7-32e74bd260db",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "weeklyConsumption",
                  "type": "timeseries",
                  "label": "weeklyConsumption",
                  "color": "#4caf50",
                  "settings": {},
                  "_hash": 0.6873469556096485,
                  "postFuncBody": "return value || 0;"
                }
              ]
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "cardCss": ".card {\n   width: 100%;\n   height: 100%;\n   border: 1px solid #E0E0E0;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 22px 30px;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .value {\n    font-size: 1.5em;\n    font-weight: bold;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n.card .description {\n    font-size: 1em;\n    font-weight: normal;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n@media (min-width: 960px) and (max-width: 1200px) {\n    .card .value {\n        font-size: 1.2em;\n        line-height: 1;\n    }\n    \n    .card .description {\n        font-size: 0.8em;\n        line-height: 1;\n    }\n}\n",
            "cardHtml": "<div class='card'>\n    <div class='content'>\n        <div class='value'>\n            ${weeklyConsumption:2} m<sup>3</sup>\n        </div> \n        <div class='description'>\n            Consumed per current week\n        </div>\n    </div>\n</div>"
          },
          "title": "Water Consumption",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "displayTimewindow": true
        },
        "id": "41f3bd64-9293-91b4-60aa-eeb4971f96bd",
        "typeFullFqn": "system.cards.html_value_card"
      },
      "ef333025-00fe-50b8-400d-65f4347bb538": {
        "type": "latest",
        "sizeX": 7,
        "sizeY": 3,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "e8bf7353-e2d4-1343-d6d7-32e74bd260db",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "dailyConsumption",
                  "type": "timeseries",
                  "label": "dailyConsumption",
                  "color": "#4caf50",
                  "settings": {},
                  "_hash": 0.6873469556096485,
                  "postFuncBody": "return value || 0;"
                }
              ]
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "cardCss": ".card {\n   width: 100%;\n   height: 100%;\n   border: 1px solid #E0E0E0;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 22px 30px;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .value {\n    font-size: 1.5em;\n    font-weight: bold;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n.card .description {\n    font-size: 1em;\n    font-weight: normal;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n@media (min-width: 960px) and (max-width: 1200px) {\n    .card .value {\n        font-size: 1.2em;\n        line-height: 1;\n    }\n    \n    .card .description {\n        font-size: 0.8em;\n        line-height: 1;\n    }\n}\n",
            "cardHtml": "<div class='card'>\n    <div class='content'>\n        <div class='value'>\n            ${dailyConsumption:2} m<sup>3</sup>\n        </div> \n        <div class='description'>\n            Consumed per day\n        </div>\n    </div>\n</div>"
          },
          "title": "Water Consumption",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "displayTimewindow": true
        },
        "id": "ef333025-00fe-50b8-400d-65f4347bb538",
        "typeFullFqn": "system.cards.html_value_card"
      },
      "bfe2aa3e-8453-29f4-2e16-13c23c032a38": {
        "type": "latest",
        "sizeX": 8,
        "sizeY": 2,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "dataKeys": [
                {
                  "name": "weeklyConsumption",
                  "type": "timeseries",
                  "label": "weeklyConsumption",
                  "color": "#4caf50",
                  "settings": {},
                  "_hash": 0.6873469556096485,
                  "postFuncBody": "return value || 0;"
                }
              ],
              "entityAliasId": "98886949-dba9-9fcf-7b4f-9d3937df249a"
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "cardCss": ".card {\n   width: 100%;\n   height: 100%;\n   border: 1px solid #E0E0E0;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 22px 30px;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .value {\n    font-size: 1.5em;\n    font-weight: bold;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n.card .description {\n    font-size: 1em;\n    font-weight: normal;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n@media (min-width: 960px) and (max-width: 1200px) {\n    .card .value {\n        font-size: 1.2em;\n        line-height: 1;\n    }\n    \n    .card .description {\n        font-size: 0.8em;\n        line-height: 1;\n    }\n}\n",
            "cardHtml": "<div class='card'>\n    <div class='content'>\n        <div class='value'>\n            ${weeklyConsumption:2} m<sup>3</sup>\n        </div> \n        <div class='description'>\n            Consumed per current week\n        </div>\n    </div>\n</div>"
          },
          "title": "New HTML Value Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "displayTimewindow": true
        },
        "id": "bfe2aa3e-8453-29f4-2e16-13c23c032a38",
        "typeFullFqn": "system.cards.html_value_card"
      },
      "e615cae0-75da-c2bd-54de-1571431b9be8": {
        "type": "latest",
        "sizeX": 8,
        "sizeY": 2,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "dataKeys": [
                {
                  "name": "dailyConsumption",
                  "type": "timeseries",
                  "label": "dailyConsumption",
                  "color": "#4caf50",
                  "settings": {},
                  "_hash": 0.6873469556096485,
                  "postFuncBody": "return value || 0;"
                }
              ],
              "entityAliasId": "98886949-dba9-9fcf-7b4f-9d3937df249a"
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "cardCss": ".card {\n   width: 100%;\n   height: 100%;\n   border: 1px solid #E0E0E0;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 22px 30px;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .value {\n    font-size: 1.5em;\n    font-weight: bold;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n.card .description {\n    font-size: 1em;\n    font-weight: normal;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n@media (min-width: 960px) and (max-width: 1200px) {\n    .card .value {\n        font-size: 1.2em;\n        line-height: 1;\n    }\n    \n    .card .description {\n        font-size: 0.8em;\n        line-height: 1;\n    }\n}\n",
            "cardHtml": "<div class='card'>\n    <div class='content'>\n        <div class='value'>\n            ${dailyConsumption:2} m<sup>3</sup>\n        </div> \n        <div class='description'>\n            Consumed per day\n        </div>\n    </div>\n</div>"
          },
          "title": "New HTML Value Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "displayTimewindow": true
        },
        "id": "e615cae0-75da-c2bd-54de-1571431b9be8",
        "typeFullFqn": "system.cards.html_value_card"
      },
      "ac8a033a-b659-fe42-f85a-a3c20fd2b0f1": {
        "type": "latest",
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "2754dd92-28a3-a689-d65c-ab9001a86f73",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "address",
                  "type": "attribute",
                  "label": "Address",
                  "color": "#2196f3",
                  "settings": {
                    "dataKeyHidden": false,
                    "dataKeyType": "server",
                    "dataKeyValueType": "string",
                    "required": false,
                    "isEditable": "editable",
                    "appearance": "outline",
                    "subscriptSizing": "dynamic",
                    "useCustomIcon": false,
                    "icon": "place",
                    "useGetValueFunction": false,
                    "useSetValueFunction": false
                  },
                  "_hash": 0.48214674570930094,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null,
                  "aggregationType": null
                }
              ],
              "alarmFilterConfig": {
                "statusList": [
                  "ACTIVE"
                ]
              }
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "8px",
          "settings": {
            "showActionButtons": false,
            "showResultMessage": true,
            "fieldsAlignment": "row",
            "fieldsInRow": 1,
            "groupTitle": "${entityName}",
            "columnGap": 10,
            "rowGap": 5
          },
          "title": "New Update Multiple Attributes",
          "dropShadow": true,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {},
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "displayTimewindow": true
        },
        "row": 0,
        "col": 0,
        "id": "ac8a033a-b659-fe42-f85a-a3c20fd2b0f1",
        "typeFullFqn": "system.input_widgets.update_multiple_attributes"
      },
      "7862ed59-3ffa-e2ae-5bd1-c5531ca668cb": {
        "type": "latest",
        "sizeX": 8,
        "sizeY": 3,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "2754dd92-28a3-a689-d65c-ab9001a86f73",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "battery",
                  "type": "timeseries",
                  "label": "battery",
                  "color": "#2196f3",
                  "settings": {},
                  "_hash": 0.7691945203875652,
                  "postFuncBody": "if (typeof value === 'number') {\n    return value.toFixed(1) + '%';\n} else {\n    return value;\n}",
                  "decimals": 1,
                  "usePostProcessing": true,
                  "units": null,
                  "funcBody": null
                }
              ]
            }
          ],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1678090071280,
                "endTimeMs": 1678176471280
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "cardHtml": "<div class='card'>\n    <div class='content'>\n        <div class='value'>\n            ${battery:0}\n        </div> \n        <div class='description'>\n            Battery level\n        </div>\n    </div>\n</div>",
            "cardCss": ".card {\n   width: 100%;\n   height: 100%;\n   border: 1px solid #E0E0E0;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 22px 30px;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .value {\n    font-size: 1.5em;\n    font-weight: bold;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n.card .description {\n    font-size: 1em;\n    font-weight: normal;\n    line-height: 1.5;\n    color: #333333;\n    text-align: center;\n}\n\n@media (min-width: 960px) and (max-width: 1200px) {\n    .card .value {\n        font-size: 1.2em;\n        line-height: 1;\n    }\n    \n    .card .description {\n        font-size: 0.8em;\n        line-height: 1;\n    }\n}"
          },
          "title": "New HTML Value Card",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "actions": {
            "headerButton": []
          },
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "displayTimewindow": true
        },
        "id": "7862ed59-3ffa-e2ae-5bd1-c5531ca668cb",
        "typeFullFqn": "system.cards.html_value_card"
      },
      "a1d8419f-a06d-497c-a334-38225733b77c": {
        "type": "alarm",
        "sizeX": 8,
        "sizeY": 12,
        "config": {
          "timewindow": {
            "realtime": {
              "interval": 1000,
              "timewindowMs": 2592000000
            },
            "aggregation": {
              "type": "NONE",
              "limit": 200
            }
          },
          "showTitle": true,
          "backgroundColor": "rgb(255, 255, 255)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "4px",
          "settings": {
            "enableSelection": true,
            "enableSearch": true,
            "displayDetails": false,
            "allowAcknowledgment": false,
            "allowClear": true,
            "displayPagination": false,
            "defaultPageSize": 10,
            "defaultSortOrder": "-createdTime",
            "alarmsTitle": "Active Alarms",
            "enableSelectColumnDisplay": true,
            "enableFilter": true,
            "enableStickyHeader": true
          },
          "title": "Active Alarms",
          "dropShadow": false,
          "enableFullscreen": false,
          "titleStyle": {
            "fontSize": "18px",
            "fontWeight": 600,
            "padding": "5px 10px 5px 5px"
          },
          "useDashboardTimewindow": true,
          "showLegend": false,
          "alarmSource": {
            "type": "entity",
            "name": "alarms",
            "entityAliasId": "2754dd92-28a3-a689-d65c-ab9001a86f73",
            "filterId": null,
            "dataKeys": [
              {
                "name": "createdTime",
                "type": "alarm",
                "label": "Created time",
                "color": "#2196f3",
                "settings": {},
                "_hash": 0.8381664834025695
              },
              {
                "name": "type",
                "type": "alarm",
                "label": "Type",
                "color": "#f44336",
                "settings": {
                  "columnWidth": "0px",
                  "useCellStyleFunction": false,
                  "cellStyleFunction": "",
                  "useCellContentFunction": false,
                  "cellContentFunction": ""
                },
                "_hash": 0.6632477787428679
              }
            ]
          },
          "alarmsPollingInterval": 5,
          "datasources": [],
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableDataExport": false,
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "displayTimewindow": false,
          "actions": {
            "headerButton": [
              {
                "id": "1f58fb76-87bf-235a-4ce8-e3b67bf3c834",
                "name": "Alarms Details",
                "icon": "fullscreen",
                "type": "openDashboardState",
                "targetDashboardStateId": "device_alarms",
                "setEntityId": false
              }
            ]
          },
          "alarmsMaxCountLoad": 0,
          "alarmsFetchSize": 100,
          "alarmFilterConfig": {
            "statusList": [
              "ACTIVE"
            ],
            "severityList": [],
            "typeList": [
              "Daily Consumption Threshold Exceeded",
              "Weekly Consumption Threshold Exceeded",
              "Low Battery",
              "Low Temperature",
              "Device Inactive",
              "Leakage Detected"
            ],
            "searchPropagatedAlarms": true
          }
        },
        "id": "a1d8419f-a06d-497c-a334-38225733b77c",
        "typeFullFqn": "system.alarm_widgets.alarms_table"
      },
      "b2b1a8a8-43f5-0613-434f-d2251c2f98aa": {
        "typeFullFqn": "system.time_series_chart",
        "type": "timeseries",
        "sizeX": 8,
        "sizeY": 5,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": "",
              "entityAliasId": "98886949-dba9-9fcf-7b4f-9d3937df249a",
              "dataKeys": [
                {
                  "name": "dailyConsumption",
                  "type": "timeseries",
                  "label": "Daily Consumption",
                  "color": "#2196f3",
                  "settings": {
                    "yAxisId": "default",
                    "showInLegend": true,
                    "dataHiddenByDefault": false,
                    "type": "bar",
                    "lineSettings": {
                      "showLine": true,
                      "step": false,
                      "stepType": "start",
                      "smooth": false,
                      "lineType": "solid",
                      "lineWidth": 2,
                      "showPoints": false,
                      "showPointLabel": false,
                      "pointLabelPosition": "top",
                      "pointLabelFont": {
                        "family": "Roboto",
                        "size": 11,
                        "sizeUnit": "px",
                        "style": "normal",
                        "weight": "400",
                        "lineHeight": "1"
                      },
                      "pointLabelColor": "rgba(0, 0, 0, 0.76)",
                      "enablePointLabelBackground": false,
                      "pointLabelBackground": "rgba(255,255,255,0.56)",
                      "pointShape": "emptyCircle",
                      "pointSize": 4,
                      "fillAreaSettings": {
                        "type": "none",
                        "opacity": 0.4,
                        "gradient": {
                          "start": 100,
                          "end": 0
                        }
                      }
                    },
                    "barSettings": {
                      "showBorder": false,
                      "borderWidth": 2,
                      "borderRadius": 0,
                      "showLabel": false,
                      "labelPosition": "top",
                      "labelFont": {
                        "family": "Roboto",
                        "size": 11,
                        "sizeUnit": "px",
                        "style": "normal",
                        "weight": "400",
                        "lineHeight": "1"
                      },
                      "labelColor": "rgba(0, 0, 0, 0.76)",
                      "enableLabelBackground": false,
                      "labelBackground": "rgba(255,255,255,0.56)",
                      "backgroundSettings": {
                        "type": "none",
                        "opacity": 0.4,
                        "gradient": {
                          "start": 100,
                          "end": 0
                        }
                      }
                    },
                    "comparisonSettings": {
                      "showValuesForComparison": false,
                      "comparisonValuesLabel": "",
                      "color": ""
                    }
                  },
                  "_hash": 0.6850103979581212,
                  "units": "mÂ³",
                  "decimals": 2,
                  "aggregationType": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                }
              ],
              "alarmFilterConfig": {
                "statusList": [
                  "ACTIVE"
                ]
              },
              "latestDataKeys": []
            }
          ],
          "timewindow": {
            "hideInterval": false,
            "hideLastInterval": false,
            "hideQuickInterval": false,
            "hideAggregation": false,
            "hideAggInterval": false,
            "hideTimezone": false,
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 0,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "interval": 1000
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            },
            "timezone": null
          },
          "showTitle": true,
          "backgroundColor": "rgba(0, 0, 0, 0)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "showLegend": true,
            "legendConfig": {
              "direction": "column",
              "position": "bottom",
              "sortDataKeys": false,
              "showMin": false,
              "showMax": false,
              "showAvg": false,
              "showTotal": true,
              "showLatest": false
            },
            "thresholds": [],
            "dataZoom": false,
            "stack": false,
            "yAxis": {
              "show": true,
              "label": "",
              "labelFont": {
                "family": "Roboto",
                "size": 12,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "600",
                "lineHeight": "1"
              },
              "labelColor": "rgba(0, 0, 0, 0.54)",
              "position": "left",
              "showTickLabels": true,
              "tickLabelFont": {
                "family": "Roboto",
                "size": 12,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "400",
                "lineHeight": "1"
              },
              "tickLabelColor": "rgba(0, 0, 0, 0.54)",
              "showTicks": true,
              "ticksColor": "rgba(0, 0, 0, 0.54)",
              "showLine": true,
              "lineColor": "rgba(0, 0, 0, 0.54)",
              "showSplitLines": true,
              "splitLinesColor": "rgba(0, 0, 0, 0.12)"
            },
            "xAxis": {
              "show": true,
              "label": "",
              "labelFont": {
                "family": "Roboto",
                "size": 12,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "600",
                "lineHeight": "1"
              },
              "labelColor": "rgba(0, 0, 0, 0.54)",
              "position": "bottom",
              "showTickLabels": true,
              "tickLabelFont": {
                "family": "Roboto",
                "size": 10,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "400",
                "lineHeight": "1"
              },
              "tickLabelColor": "rgba(0, 0, 0, 0.54)",
              "ticksFormat": {},
              "showTicks": false,
              "ticksColor": "rgba(0, 0, 0, 0.54)",
              "showLine": false,
              "lineColor": "rgba(0, 0, 0, 0.54)",
              "showSplitLines": false,
              "splitLinesColor": "rgba(0, 0, 0, 0.12)"
            },
            "legendLabelFont": {
              "family": "Roboto",
              "size": 12,
              "sizeUnit": "px",
              "style": "normal",
              "weight": "400",
              "lineHeight": "16px"
            },
            "legendLabelColor": "rgba(0, 0, 0, 0.76)",
            "showTooltip": true,
            "tooltipTrigger": "axis",
            "tooltipValueFont": {
              "family": "Roboto",
              "size": 12,
              "sizeUnit": "px",
              "style": "normal",
              "weight": "500",
              "lineHeight": "16px"
            },
            "tooltipValueColor": "rgba(0, 0, 0, 0.76)",
            "tooltipShowDate": true,
            "tooltipDateFormat": {
              "format": null,
              "lastUpdateAgo": false,
              "custom": false,
              "auto": true,
              "autoDateFormatSettings": {}
            },
            "tooltipDateFont": {
              "family": "Roboto",
              "size": 11,
              "sizeUnit": "px",
              "style": "normal",
              "weight": "400",
              "lineHeight": "16px"
            },
            "tooltipDateColor": "rgba(0, 0, 0, 0.76)",
            "tooltipDateInterval": true,
            "tooltipBackgroundColor": "rgba(255, 255, 255, 0.76)",
            "tooltipBackgroundBlur": 4,
            "background": {
              "type": "color",
              "color": "#fff",
              "overlay": {
                "enabled": false,
                "color": "rgba(255,255,255,0.72)",
                "blur": 3
              }
            },
            "yAxes": {
              "default": {
                "units": "mÂ³",
                "decimals": 0,
                "show": true,
                "label": "",
                "labelFont": {
                  "family": "Roboto",
                  "size": 12,
                  "sizeUnit": "px",
                  "style": "normal",
                  "weight": "600",
                  "lineHeight": "1"
                },
                "labelColor": "rgba(0, 0, 0, 0.54)",
                "position": "left",
                "showTickLabels": true,
                "tickLabelFont": {
                  "family": "Roboto",
                  "size": 12,
                  "sizeUnit": "px",
                  "style": "normal",
                  "weight": "400",
                  "lineHeight": "1"
                },
                "tickLabelColor": "rgba(0, 0, 0, 0.54)",
                "ticksFormatter": null,
                "showTicks": false,
                "ticksColor": "rgba(0, 0, 0, 0.54)",
                "showLine": false,
                "lineColor": "rgba(0, 0, 0, 0.54)",
                "showSplitLines": true,
                "splitLinesColor": "rgba(0, 0, 0, 0.12)",
                "id": "default",
                "order": 0,
                "ticksGenerator": null,
                "interval": null,
                "splitNumber": null
              }
            },
            "noAggregationBarWidthSettings": {
              "strategy": "separate",
              "groupWidth": {
                "relative": true,
                "relativeWidth": 20,
                "absoluteWidth": 1000
              },
              "barWidth": {
                "relative": false,
                "relativeWidth": 2,
                "absoluteWidth": 43200000
              }
            },
            "animation": {
              "animation": true,
              "animationThreshold": 2000,
              "animationDuration": 500,
              "animationEasing": "cubicOut",
              "animationDelay": 0,
              "animationDurationUpdate": 300,
              "animationEasingUpdate": "cubicOut",
              "animationDelayUpdate": 0
            },
            "padding": "12px",
            "comparisonEnabled": false,
            "timeForComparison": "previousInterval",
            "comparisonCustomIntervalValue": 7200000,
            "comparisonXAxis": {
              "show": true,
              "label": "",
              "labelFont": {
                "family": "Roboto",
                "size": 12,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "600",
                "lineHeight": "1"
              },
              "labelColor": "rgba(0, 0, 0, 0.54)",
              "position": "top",
              "showTickLabels": true,
              "tickLabelFont": {
                "family": "Roboto",
                "size": 10,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "400",
                "lineHeight": "1"
              },
              "tickLabelColor": "rgba(0, 0, 0, 0.54)",
              "ticksFormat": {},
              "showTicks": true,
              "ticksColor": "rgba(0, 0, 0, 0.54)",
              "showLine": true,
              "lineColor": "rgba(0, 0, 0, 0.54)",
              "showSplitLines": true,
              "splitLinesColor": "rgba(0, 0, 0, 0.12)"
            },
            "grid": {
              "show": false,
              "backgroundColor": null,
              "borderWidth": 1,
              "borderColor": "#ccc"
            }
          },
          "title": "Water Consumption",
          "dropShadow": false,
          "enableFullscreen": false,
          "titleStyle": {
            "padding": "5px 10px 5px 5px"
          },
          "configMode": "basic",
          "actions": {},
          "showTitleIcon": false,
          "titleIcon": "thermostat",
          "iconColor": "#1F6BDD",
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "titleFont": {
            "size": 18,
            "sizeUnit": "px",
            "family": "Roboto",
            "weight": "600",
            "style": "normal",
            "lineHeight": "24px"
          },
          "titleColor": "rgba(0, 0, 0, 0.87)",
          "titleTooltip": "",
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "widgetCss": "",
          "pageSize": 1024,
          "units": "",
          "decimals": null,
          "noDataDisplayMessage": "",
          "timewindowStyle": {
            "showIcon": false,
            "iconSize": "24px",
            "icon": null,
            "iconPosition": "left",
            "font": {
              "size": 12,
              "sizeUnit": "px",
              "family": "Roboto",
              "weight": "400",
              "style": "normal",
              "lineHeight": "16px"
            },
            "color": "rgba(0, 0, 0, 0.38)",
            "displayTypePrefix": true
          },
          "margin": "0px",
          "borderRadius": "0px",
          "iconSize": "0px",
          "enableDataExport": false
        },
        "row": 0,
        "col": 0,
        "id": "b2b1a8a8-43f5-0613-434f-d2251c2f98aa"
      },
      "3469ae52-7eb2-3628-1ad0-3102b31574f9": {
        "typeFullFqn": "system.time_series_chart",
        "type": "timeseries",
        "sizeX": 8,
        "sizeY": 5,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": "",
              "entityAliasId": "e8bf7353-e2d4-1343-d6d7-32e74bd260db",
              "dataKeys": [
                {
                  "name": "dailyConsumption",
                  "type": "timeseries",
                  "label": "${entityLabel}",
                  "color": "#2196f3",
                  "settings": {
                    "yAxisId": "default",
                    "showInLegend": true,
                    "dataHiddenByDefault": false,
                    "type": "line",
                    "lineSettings": {
                      "showLine": true,
                      "step": false,
                      "stepType": "start",
                      "smooth": true,
                      "lineType": "solid",
                      "lineWidth": 2.5,
                      "showPoints": false,
                      "showPointLabel": false,
                      "pointLabelPosition": "top",
                      "pointLabelFont": {
                        "family": "Roboto",
                        "size": 11,
                        "sizeUnit": "px",
                        "style": "normal",
                        "weight": "400",
                        "lineHeight": "1"
                      },
                      "pointLabelColor": "rgba(0, 0, 0, 0.76)",
                      "enablePointLabelBackground": false,
                      "pointLabelBackground": "rgba(255,255,255,0.56)",
                      "pointShape": "circle",
                      "pointSize": 12,
                      "fillAreaSettings": {
                        "type": "none",
                        "opacity": 0.4,
                        "gradient": {
                          "start": 100,
                          "end": 0
                        }
                      }
                    },
                    "barSettings": {
                      "showBorder": false,
                      "borderWidth": 2,
                      "borderRadius": 0,
                      "showLabel": false,
                      "labelPosition": "top",
                      "labelFont": {
                        "family": "Roboto",
                        "size": 11,
                        "sizeUnit": "px",
                        "style": "normal",
                        "weight": "400",
                        "lineHeight": "1"
                      },
                      "labelColor": "rgba(0, 0, 0, 0.76)",
                      "enableLabelBackground": false,
                      "labelBackground": "rgba(255,255,255,0.56)",
                      "backgroundSettings": {
                        "type": "none",
                        "opacity": 0.4,
                        "gradient": {
                          "start": 100,
                          "end": 0
                        }
                      }
                    },
                    "tooltipValueFormatter": null,
                    "comparisonSettings": {
                      "showValuesForComparison": true,
                      "comparisonValuesLabel": "",
                      "color": ""
                    }
                  },
                  "_hash": 0.19778923192757314,
                  "units": "mÂ³",
                  "decimals": 2,
                  "aggregationType": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                }
              ],
              "alarmFilterConfig": {
                "statusList": [
                  "ACTIVE"
                ]
              },
              "latestDataKeys": []
            }
          ],
          "timewindow": {
            "hideInterval": false,
            "hideLastInterval": false,
            "hideQuickInterval": false,
            "hideAggregation": false,
            "hideAggInterval": false,
            "hideTimezone": false,
            "selectedTab": 1,
            "history": {
              "historyType": 2,
              "timewindowMs": 60000,
              "interval": 1800000,
              "fixedTimewindow": {
                "startTimeMs": 1713181522663,
                "endTimeMs": 1713267922663
              },
              "quickInterval": "CURRENT_WEEK_ISO"
            },
            "aggregation": {
              "type": "NONE",
              "limit": 25000
            },
            "timezone": "UTC"
          },
          "showTitle": true,
          "backgroundColor": "rgba(0, 0, 0, 0)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "showLegend": true,
            "legendConfig": {
              "direction": "column",
              "position": "bottom",
              "sortDataKeys": false,
              "showMin": false,
              "showMax": false,
              "showAvg": false,
              "showTotal": false,
              "showLatest": false
            },
            "thresholds": [],
            "dataZoom": false,
            "stack": false,
            "yAxis": {
              "show": true,
              "label": "",
              "labelFont": {
                "family": "Roboto",
                "size": 12,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "600",
                "lineHeight": "1"
              },
              "labelColor": "rgba(0, 0, 0, 0.54)",
              "position": "left",
              "showTickLabels": true,
              "tickLabelFont": {
                "family": "Roboto",
                "size": 12,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "400",
                "lineHeight": "1"
              },
              "tickLabelColor": "rgba(0, 0, 0, 0.54)",
              "showTicks": true,
              "ticksColor": "rgba(0, 0, 0, 0.54)",
              "showLine": true,
              "lineColor": "rgba(0, 0, 0, 0.54)",
              "showSplitLines": true,
              "splitLinesColor": "rgba(0, 0, 0, 0.12)"
            },
            "xAxis": {
              "show": true,
              "label": "",
              "labelFont": {
                "family": "Roboto",
                "size": 12,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "600",
                "lineHeight": "1"
              },
              "labelColor": "rgba(0, 0, 0, 0.54)",
              "position": "bottom",
              "showTickLabels": true,
              "tickLabelFont": {
                "family": "Roboto",
                "size": 10,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "400",
                "lineHeight": "1"
              },
              "tickLabelColor": "rgba(0, 0, 0, 0.54)",
              "ticksFormat": {},
              "showTicks": false,
              "ticksColor": "rgba(0, 0, 0, 0.54)",
              "showLine": false,
              "lineColor": "rgba(0, 0, 0, 0.54)",
              "showSplitLines": false,
              "splitLinesColor": "rgba(0, 0, 0, 0.12)"
            },
            "legendLabelFont": {
              "family": "Roboto",
              "size": 12,
              "sizeUnit": "px",
              "style": "normal",
              "weight": "400",
              "lineHeight": "16px"
            },
            "legendLabelColor": "rgba(0, 0, 0, 0.76)",
            "showTooltip": true,
            "tooltipTrigger": "axis",
            "tooltipValueFont": {
              "family": "Roboto",
              "size": 12,
              "sizeUnit": "px",
              "style": "normal",
              "weight": "500",
              "lineHeight": "16px"
            },
            "tooltipValueColor": "rgba(0, 0, 0, 0.76)",
            "tooltipShowDate": true,
            "tooltipDateFormat": {
              "format": null,
              "lastUpdateAgo": false,
              "custom": false,
              "auto": true,
              "autoDateFormatSettings": {}
            },
            "tooltipDateFont": {
              "family": "Roboto",
              "size": 11,
              "sizeUnit": "px",
              "style": "normal",
              "weight": "400",
              "lineHeight": "16px"
            },
            "tooltipDateColor": "rgba(0, 0, 0, 0.76)",
            "tooltipDateInterval": true,
            "tooltipBackgroundColor": "rgba(255, 255, 255, 0.76)",
            "tooltipBackgroundBlur": 4,
            "background": {
              "type": "color",
              "color": "#fff",
              "overlay": {
                "enabled": false,
                "color": "rgba(255,255,255,0.72)",
                "blur": 3
              }
            },
            "yAxes": {
              "default": {
                "units": "mÂ³",
                "decimals": 0,
                "show": true,
                "label": "",
                "labelFont": {
                  "family": "Roboto",
                  "size": 12,
                  "sizeUnit": "px",
                  "style": "normal",
                  "weight": "600",
                  "lineHeight": "1"
                },
                "labelColor": "rgba(0, 0, 0, 0.54)",
                "position": "left",
                "showTickLabels": true,
                "tickLabelFont": {
                  "family": "Roboto",
                  "size": 12,
                  "sizeUnit": "px",
                  "style": "normal",
                  "weight": "400",
                  "lineHeight": "1"
                },
                "tickLabelColor": "rgba(0, 0, 0, 0.54)",
                "ticksFormatter": null,
                "showTicks": false,
                "ticksColor": "rgba(0, 0, 0, 0.54)",
                "showLine": false,
                "lineColor": "rgba(0, 0, 0, 0.54)",
                "showSplitLines": true,
                "splitLinesColor": "rgba(0, 0, 0, 0.12)",
                "id": "default",
                "order": 0,
                "ticksGenerator": null,
                "interval": null,
                "splitNumber": null
              }
            },
            "noAggregationBarWidthSettings": {
              "strategy": "group",
              "groupWidth": {
                "relative": true,
                "relativeWidth": 2,
                "absoluteWidth": 1000
              },
              "barWidth": {
                "relative": true,
                "relativeWidth": 2,
                "absoluteWidth": 1000
              }
            },
            "animation": {
              "animation": true,
              "animationThreshold": 2000,
              "animationDuration": 500,
              "animationEasing": "cubicOut",
              "animationDelay": 0,
              "animationDurationUpdate": 300,
              "animationEasingUpdate": "cubicOut",
              "animationDelayUpdate": 0
            },
            "padding": "12px",
            "comparisonEnabled": true,
            "timeForComparison": "previousInterval",
            "comparisonCustomIntervalValue": 7200000,
            "comparisonXAxis": {
              "show": true,
              "label": "",
              "labelFont": {
                "family": "Roboto",
                "size": 12,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "600",
                "lineHeight": "1"
              },
              "labelColor": "rgba(0, 0, 0, 0.54)",
              "position": "top",
              "showTickLabels": true,
              "tickLabelFont": {
                "family": "Roboto",
                "size": 10,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "400",
                "lineHeight": "1"
              },
              "tickLabelColor": "rgba(0, 0, 0, 0.54)",
              "ticksFormat": {},
              "showTicks": false,
              "ticksColor": "rgba(0, 0, 0, 0.54)",
              "showLine": false,
              "lineColor": "rgba(0, 0, 0, 0.54)",
              "showSplitLines": false,
              "splitLinesColor": "rgba(0, 0, 0, 0.12)"
            },
            "grid": {
              "show": false,
              "backgroundColor": null,
              "borderWidth": 1,
              "borderColor": "#ccc"
            }
          },
          "title": "Water Consumption",
          "dropShadow": false,
          "enableFullscreen": false,
          "titleStyle": {
            "padding": "5px 10px 5px 5px"
          },
          "configMode": "basic",
          "actions": {},
          "showTitleIcon": false,
          "titleIcon": "thermostat",
          "iconColor": "#1F6BDD",
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "titleFont": {
            "size": 18,
            "sizeUnit": "px",
            "family": "Roboto",
            "weight": "600",
            "style": "normal",
            "lineHeight": "24px"
          },
          "titleColor": "rgba(0, 0, 0, 0.87)",
          "titleTooltip": "",
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "widgetCss": "",
          "pageSize": 1024,
          "units": "",
          "decimals": null,
          "noDataDisplayMessage": "",
          "timewindowStyle": {
            "showIcon": false,
            "iconSize": "24px",
            "icon": null,
            "iconPosition": "left",
            "font": {
              "size": 12,
              "sizeUnit": "px",
              "family": "Roboto",
              "weight": "400",
              "style": "normal",
              "lineHeight": "16px"
            },
            "color": "rgba(0, 0, 0, 0.38)",
            "displayTypePrefix": true
          },
          "margin": "0px",
          "borderRadius": "0px",
          "iconSize": "0px",
          "enableDataExport": false
        },
        "row": 0,
        "col": 0,
        "id": "3469ae52-7eb2-3628-1ad0-3102b31574f9"
      },
      "dc2b642e-38b7-ffff-5dc8-191ab7a249ed": {
        "typeFullFqn": "system.time_series_chart",
        "type": "timeseries",
        "sizeX": 8,
        "sizeY": 5,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": "",
              "entityAliasId": "2754dd92-28a3-a689-d65c-ab9001a86f73",
              "dataKeys": [
                {
                  "name": "meterReadingDelta",
                  "type": "timeseries",
                  "label": "Consumption",
                  "color": "#2196f3",
                  "settings": {
                    "yAxisId": "default",
                    "showInLegend": true,
                    "dataHiddenByDefault": false,
                    "type": "bar",
                    "lineSettings": {
                      "showLine": true,
                      "step": false,
                      "stepType": "start",
                      "smooth": false,
                      "lineType": "solid",
                      "lineWidth": 2,
                      "showPoints": false,
                      "showPointLabel": false,
                      "pointLabelPosition": "top",
                      "pointLabelFont": {
                        "family": "Roboto",
                        "size": 11,
                        "sizeUnit": "px",
                        "style": "normal",
                        "weight": "400",
                        "lineHeight": "1"
                      },
                      "pointLabelColor": "rgba(0, 0, 0, 0.76)",
                      "enablePointLabelBackground": false,
                      "pointLabelBackground": "rgba(255,255,255,0.56)",
                      "pointShape": "emptyCircle",
                      "pointSize": 4,
                      "fillAreaSettings": {
                        "type": "none",
                        "opacity": 0.4,
                        "gradient": {
                          "start": 100,
                          "end": 0
                        }
                      }
                    },
                    "barSettings": {
                      "showBorder": false,
                      "borderWidth": 2,
                      "borderRadius": 0,
                      "showLabel": false,
                      "labelPosition": "top",
                      "labelFont": {
                        "family": "Roboto",
                        "size": 11,
                        "sizeUnit": "px",
                        "style": "normal",
                        "weight": "400",
                        "lineHeight": "1"
                      },
                      "labelColor": "rgba(0, 0, 0, 0.76)",
                      "enableLabelBackground": false,
                      "labelBackground": "rgba(255,255,255,0.56)",
                      "backgroundSettings": {
                        "type": "none",
                        "opacity": 0.4,
                        "gradient": {
                          "start": 100,
                          "end": 0
                        }
                      }
                    },
                    "comparisonSettings": {
                      "showValuesForComparison": false,
                      "comparisonValuesLabel": "",
                      "color": ""
                    }
                  },
                  "_hash": 0.6850103979581212,
                  "units": "mÂ³",
                  "decimals": 2,
                  "aggregationType": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                }
              ],
              "alarmFilterConfig": {
                "statusList": [
                  "ACTIVE"
                ]
              },
              "latestDataKeys": []
            }
          ],
          "timewindow": {
            "hideInterval": false,
            "hideLastInterval": false,
            "hideQuickInterval": false,
            "hideAggregation": false,
            "hideAggInterval": false,
            "hideTimezone": false,
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 0,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "interval": 1000
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            },
            "timezone": null
          },
          "showTitle": true,
          "backgroundColor": "rgba(0, 0, 0, 0)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "showLegend": true,
            "legendConfig": {
              "direction": "column",
              "position": "bottom",
              "sortDataKeys": false,
              "showMin": false,
              "showMax": false,
              "showAvg": false,
              "showTotal": true,
              "showLatest": false
            },
            "thresholds": [],
            "dataZoom": false,
            "stack": false,
            "yAxis": {
              "show": true,
              "label": "",
              "labelFont": {
                "family": "Roboto",
                "size": 12,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "600",
                "lineHeight": "1"
              },
              "labelColor": "rgba(0, 0, 0, 0.54)",
              "position": "left",
              "showTickLabels": true,
              "tickLabelFont": {
                "family": "Roboto",
                "size": 12,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "400",
                "lineHeight": "1"
              },
              "tickLabelColor": "rgba(0, 0, 0, 0.54)",
              "showTicks": true,
              "ticksColor": "rgba(0, 0, 0, 0.54)",
              "showLine": true,
              "lineColor": "rgba(0, 0, 0, 0.54)",
              "showSplitLines": true,
              "splitLinesColor": "rgba(0, 0, 0, 0.12)"
            },
            "xAxis": {
              "show": true,
              "label": "",
              "labelFont": {
                "family": "Roboto",
                "size": 12,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "600",
                "lineHeight": "1"
              },
              "labelColor": "rgba(0, 0, 0, 0.54)",
              "position": "bottom",
              "showTickLabels": true,
              "tickLabelFont": {
                "family": "Roboto",
                "size": 10,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "400",
                "lineHeight": "1"
              },
              "tickLabelColor": "rgba(0, 0, 0, 0.54)",
              "ticksFormat": {},
              "showTicks": false,
              "ticksColor": "rgba(0, 0, 0, 0.54)",
              "showLine": false,
              "lineColor": "rgba(0, 0, 0, 0.54)",
              "showSplitLines": false,
              "splitLinesColor": "rgba(0, 0, 0, 0.12)"
            },
            "legendLabelFont": {
              "family": "Roboto",
              "size": 12,
              "sizeUnit": "px",
              "style": "normal",
              "weight": "400",
              "lineHeight": "16px"
            },
            "legendLabelColor": "rgba(0, 0, 0, 0.76)",
            "showTooltip": true,
            "tooltipTrigger": "axis",
            "tooltipValueFont": {
              "family": "Roboto",
              "size": 12,
              "sizeUnit": "px",
              "style": "normal",
              "weight": "500",
              "lineHeight": "16px"
            },
            "tooltipValueColor": "rgba(0, 0, 0, 0.76)",
            "tooltipShowDate": true,
            "tooltipDateFormat": {
              "format": null,
              "lastUpdateAgo": false,
              "custom": false,
              "auto": true,
              "autoDateFormatSettings": {
                "millisecond": "MMM dd yyyy HH:mm:ss"
              }
            },
            "tooltipDateFont": {
              "family": "Roboto",
              "size": 11,
              "sizeUnit": "px",
              "style": "normal",
              "weight": "400",
              "lineHeight": "16px"
            },
            "tooltipDateColor": "rgba(0, 0, 0, 0.76)",
            "tooltipDateInterval": true,
            "tooltipBackgroundColor": "rgba(255, 255, 255, 0.76)",
            "tooltipBackgroundBlur": 4,
            "background": {
              "type": "color",
              "color": "#fff",
              "overlay": {
                "enabled": false,
                "color": "rgba(255,255,255,0.72)",
                "blur": 3
              }
            },
            "yAxes": {
              "default": {
                "units": "mÂ³",
                "decimals": 0,
                "show": true,
                "label": "",
                "labelFont": {
                  "family": "Roboto",
                  "size": 12,
                  "sizeUnit": "px",
                  "style": "normal",
                  "weight": "600",
                  "lineHeight": "1"
                },
                "labelColor": "rgba(0, 0, 0, 0.54)",
                "position": "left",
                "showTickLabels": true,
                "tickLabelFont": {
                  "family": "Roboto",
                  "size": 12,
                  "sizeUnit": "px",
                  "style": "normal",
                  "weight": "400",
                  "lineHeight": "1"
                },
                "tickLabelColor": "rgba(0, 0, 0, 0.54)",
                "ticksFormatter": null,
                "showTicks": false,
                "ticksColor": "rgba(0, 0, 0, 0.54)",
                "showLine": false,
                "lineColor": "rgba(0, 0, 0, 0.54)",
                "showSplitLines": true,
                "splitLinesColor": "rgba(0, 0, 0, 0.12)",
                "id": "default",
                "order": 0,
                "ticksGenerator": null,
                "interval": null,
                "splitNumber": null
              }
            },
            "noAggregationBarWidthSettings": {
              "strategy": "separate",
              "groupWidth": {
                "relative": true,
                "relativeWidth": 20,
                "absoluteWidth": 1000
              },
              "barWidth": {
                "relative": false,
                "relativeWidth": 2,
                "absoluteWidth": 1800000
              }
            },
            "animation": {
              "animation": true,
              "animationThreshold": 2000,
              "animationDuration": 500,
              "animationEasing": "cubicOut",
              "animationDelay": 0,
              "animationDurationUpdate": 300,
              "animationEasingUpdate": "cubicOut",
              "animationDelayUpdate": 0
            },
            "padding": "12px",
            "comparisonEnabled": false,
            "timeForComparison": "previousInterval",
            "comparisonCustomIntervalValue": 7200000,
            "comparisonXAxis": {
              "show": true,
              "label": "",
              "labelFont": {
                "family": "Roboto",
                "size": 12,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "600",
                "lineHeight": "1"
              },
              "labelColor": "rgba(0, 0, 0, 0.54)",
              "position": "top",
              "showTickLabels": true,
              "tickLabelFont": {
                "family": "Roboto",
                "size": 10,
                "sizeUnit": "px",
                "style": "normal",
                "weight": "400",
                "lineHeight": "1"
              },
              "tickLabelColor": "rgba(0, 0, 0, 0.54)",
              "ticksFormat": {},
              "showTicks": true,
              "ticksColor": "rgba(0, 0, 0, 0.54)",
              "showLine": true,
              "lineColor": "rgba(0, 0, 0, 0.54)",
              "showSplitLines": true,
              "splitLinesColor": "rgba(0, 0, 0, 0.12)"
            },
            "grid": {
              "show": false,
              "backgroundColor": null,
              "borderWidth": 1,
              "borderColor": "#ccc"
            }
          },
          "title": "Water Consumption",
          "dropShadow": false,
          "enableFullscreen": false,
          "titleStyle": {
            "padding": "5px 10px 5px 5px"
          },
          "configMode": "basic",
          "actions": {},
          "showTitleIcon": false,
          "titleIcon": "thermostat",
          "iconColor": "#1F6BDD",
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "titleFont": {
            "size": 18,
            "sizeUnit": "px",
            "family": "Roboto",
            "weight": "600",
            "style": "normal",
            "lineHeight": "24px"
          },
          "titleColor": "rgba(0, 0, 0, 0.87)",
          "titleTooltip": "",
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "widgetCss": "",
          "pageSize": 1024,
          "units": "",
          "decimals": null,
          "noDataDisplayMessage": "",
          "timewindowStyle": {
            "showIcon": false,
            "iconSize": "24px",
            "icon": null,
            "iconPosition": "left",
            "font": {
              "size": 12,
              "sizeUnit": "px",
              "family": "Roboto",
              "weight": "400",
              "style": "normal",
              "lineHeight": "16px"
            },
            "color": "rgba(0, 0, 0, 0.38)",
            "displayTypePrefix": true
          },
          "margin": "0px",
          "borderRadius": "0px",
          "iconSize": "0px",
          "enableDataExport": false
        },
        "row": 0,
        "col": 0,
        "id": "dc2b642e-38b7-ffff-5dc8-191ab7a249ed"
      },
      "acfce79f-e232-b96a-8598-b849dc49db35": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "default"
              }
            },
            "appearance": {
              "type": "outlined",
              "autoScale": true,
              "showLabel": true,
              "label": "Total",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "default",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "acfce79f-e232-b96a-8598-b849dc49db35"
      },
      "d71e1ebf-4a29-ecc0-5820-2d597ffb033d": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "analytics"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Analytics",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "analytics",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "d71e1ebf-4a29-ecc0-5820-2d597ffb033d"
      },
      "bb9e2f3e-4010-66e5-dfb2-566afc6171a7": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "devices"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Devices",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "devices",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "bb9e2f3e-4010-66e5-dfb2-566afc6171a7"
      },
      "cbb79baf-e564-4434-7f7c-02a5db58562f": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "alarms"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Alarms",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "alarms",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "cbb79baf-e564-4434-7f7c-02a5db58562f"
      },
      "900563d5-04f2-dfa0-7218-32b283f82c33": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "settings"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Settings",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "settings",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "900563d5-04f2-dfa0-7218-32b283f82c33"
      },
      "002877e7-110b-66f8-061d-148eb9592f60": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "default"
              }
            },
            "appearance": {
              "type": "outlined",
              "autoScale": true,
              "showLabel": true,
              "label": "Total",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "default",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "002877e7-110b-66f8-061d-148eb9592f60"
      },
      "88943cac-3482-66bd-a4c3-f919688d2956": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "analytics"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Analytics",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "analytics",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "88943cac-3482-66bd-a4c3-f919688d2956"
      },
      "bb18b8b8-87df-cb57-845f-01905e8d4cde": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "devices"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Devices",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "devices",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "bb18b8b8-87df-cb57-845f-01905e8d4cde"
      },
      "ddf67f22-a980-1221-6100-114a0510d8f5": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "alarms"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Alarms",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "alarms",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "ddf67f22-a980-1221-6100-114a0510d8f5"
      },
      "39d4cdf7-7b0c-bb47-92ed-d27450cb653c": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "settings"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Settings",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "settings",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "39d4cdf7-7b0c-bb47-92ed-d27450cb653c"
      },
      "833f7d2f-7a63-6ae0-4fea-340fdc1f34cb": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "default"
              }
            },
            "appearance": {
              "type": "outlined",
              "autoScale": true,
              "showLabel": true,
              "label": "Total",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "default",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "833f7d2f-7a63-6ae0-4fea-340fdc1f34cb"
      },
      "0484901b-a3ea-b40a-cdf1-d38db0b3ee12": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "analytics"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Analytics",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "analytics",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "0484901b-a3ea-b40a-cdf1-d38db0b3ee12"
      },
      "e7e5bc09-d208-27c1-7493-7d9a973e9c03": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "devices"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Devices",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "devices",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "e7e5bc09-d208-27c1-7493-7d9a973e9c03"
      },
      "dfb77440-4132-5272-0e6f-97cdd222289e": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "alarms"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Alarms",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "alarms",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "dfb77440-4132-5272-0e6f-97cdd222289e"
      },
      "03923c35-6a08-4f9a-9fd3-c42512d05bba": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "settings"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Settings",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "settings",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "03923c35-6a08-4f9a-9fd3-c42512d05bba"
      },
      "75d928b3-e676-9459-e571-5fef8aada75b": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "default"
              }
            },
            "appearance": {
              "type": "outlined",
              "autoScale": true,
              "showLabel": true,
              "label": "Total",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "default",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "75d928b3-e676-9459-e571-5fef8aada75b"
      },
      "5402a922-bbb0-79f0-0fea-d7ccaa68c7ea": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "analytics"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Analytics",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "analytics",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "5402a922-bbb0-79f0-0fea-d7ccaa68c7ea"
      },
      "be698e5c-b18c-3b7a-8c58-39ab41b66788": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "devices"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Devices",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "devices",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "be698e5c-b18c-3b7a-8c58-39ab41b66788"
      },
      "189a28ea-c0a5-c52e-7b3d-6c2dddf761e5": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "alarms"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Alarms",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "alarms",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "189a28ea-c0a5-c52e-7b3d-6c2dddf761e5"
      },
      "4cc5d061-c76d-9e69-fb1c-4b3afac1972f": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "settings"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Settings",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "settings",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "4cc5d061-c76d-9e69-fb1c-4b3afac1972f"
      },
      "8bbd938b-7c0f-da5e-c7ee-1d86b59e3add": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "default"
              }
            },
            "appearance": {
              "type": "outlined",
              "autoScale": true,
              "showLabel": true,
              "label": "Total",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "default",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "8bbd938b-7c0f-da5e-c7ee-1d86b59e3add"
      },
      "19bc0a46-fd66-16ce-f8d3-d295e59e9e1c": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "analytics"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Analytics",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "analytics",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "19bc0a46-fd66-16ce-f8d3-d295e59e9e1c"
      },
      "70e5f553-a77c-5857-6cee-f58d5df25734": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "devices"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Devices",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "devices",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "70e5f553-a77c-5857-6cee-f58d5df25734"
      },
      "accdde43-82fd-a358-a516-b583d4c8de8f": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "alarms"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Alarms",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "alarms",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "accdde43-82fd-a358-a516-b583d4c8de8f"
      },
      "ac67cf30-5fdf-f9cb-bc91-58a673f68734": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "settings"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Settings",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "updateDashboardState",
                "targetDashboardStateId": "settings",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "ac67cf30-5fdf-f9cb-bc91-58a673f68734"
      },
      "7fb191f2-48cc-01e9-c8d4-a0a2aaea23d0": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "default"
              }
            },
            "appearance": {
              "type": "outlined",
              "autoScale": true,
              "showLabel": true,
              "label": "Total",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "custom",
                "targetDashboardStateId": "default",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "customFunction": "var stateIndex = widgetContext.stateController\n        .getStateIndex();\nwhile (stateIndex > 0) {\n    stateIndex -= 1;\n    backToPrevState(stateIndex);\n}\n\nopenDashboardState('default');\n\nfunction backToPrevState(stateIndex) {\n    widgetContext.stateController.navigatePrevState(\n        stateIndex);\n}\n\nfunction openDashboardState(statedId) {\n    var currentState = widgetContext.stateController\n        .getStateId();\n    if (currentState !== statedId) {\n        var params = {};\n        widgetContext.stateController.updateState(statedId,\n            params, false);\n    }\n}"
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "7fb191f2-48cc-01e9-c8d4-a0a2aaea23d0"
      },
      "dbdaa399-188c-4b57-c776-8887dd063928": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "analytics"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Analytics",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "custom",
                "targetDashboardStateId": "analytics",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "customFunction": "var stateIndex = widgetContext.stateController\n        .getStateIndex();\nwhile (stateIndex > 0) {\n    stateIndex -= 1;\n    backToPrevState(stateIndex);\n}\nopenDashboardState('analytics');\n\nfunction backToPrevState(stateIndex) {\n    widgetContext.stateController.navigatePrevState(\n        stateIndex);\n}\n\nfunction openDashboardState(statedId) {\n    var currentState = widgetContext.stateController\n        .getStateId();\n    if (currentState !== statedId) {\n        var params = {};\n        widgetContext.stateController.updateState(statedId,\n            params, false);\n    }\n}"
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "dbdaa399-188c-4b57-c776-8887dd063928"
      },
      "fd9e9f64-ebdd-5348-9ffd-ce7ad05bca65": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "devices"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Devices",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "custom",
                "targetDashboardStateId": "devices",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "customFunction": "var stateIndex = widgetContext.stateController\n        .getStateIndex();\nwhile (stateIndex > 0) {\n    stateIndex -= 1;\n    backToPrevState(stateIndex);\n}\nopenDashboardState('devices');\n\nfunction backToPrevState(stateIndex) {\n    widgetContext.stateController.navigatePrevState(\n        stateIndex);\n}\n\nfunction openDashboardState(statedId) {\n    var currentState = widgetContext.stateController\n        .getStateId();\n    if (currentState !== statedId) {\n        var params = {};\n        widgetContext.stateController.updateState(statedId,\n            params, false);\n    }\n}"
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "fd9e9f64-ebdd-5348-9ffd-ce7ad05bca65"
      },
      "53a234f4-2c69-473a-f4b5-7999132b0d08": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "alarms"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Alarms",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "custom",
                "targetDashboardStateId": "alarms",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "customFunction": "var stateIndex = widgetContext.stateController\n        .getStateIndex();\nwhile (stateIndex > 0) {\n    stateIndex -= 1;\n    backToPrevState(stateIndex);\n}\nopenDashboardState('alarms');\n\nfunction backToPrevState(stateIndex) {\n    widgetContext.stateController.navigatePrevState(\n        stateIndex);\n}\n\nfunction openDashboardState(statedId) {\n    var currentState = widgetContext.stateController\n        .getStateId();\n    if (currentState !== statedId) {\n        var params = {};\n        widgetContext.stateController.updateState(statedId,\n            params, false);\n    }\n}"
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "53a234f4-2c69-473a-f4b5-7999132b0d08"
      },
      "618bd7f6-5a6f-73fb-d135-b89d768b71d5": {
        "typeFullFqn": "system.action_button",
        "type": "latest",
        "sizeX": 3,
        "sizeY": 1,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1713363593559,
                "endTimeMs": 1713449993559
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "#FFFFFF01",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "activatedState": {
              "action": "DO_NOTHING",
              "defaultValue": false,
              "getAttribute": {
                "key": "state",
                "scope": null
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "compareToValue": true,
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;"
              }
            },
            "disabledState": {
              "action": "GET_DASHBOARD_STATE",
              "defaultValue": false,
              "executeRpc": {
                "method": null,
                "requestTimeout": null,
                "requestPersistent": null,
                "persistentPollingInterval": null
              },
              "getAttribute": {
                "scope": null,
                "key": "state"
              },
              "getTimeSeries": {
                "key": "state"
              },
              "dataToValue": {
                "type": "NONE",
                "dataToValueFunction": "/* Should return boolean value */\nreturn data;",
                "compareToValue": "settings"
              }
            },
            "appearance": {
              "type": "outlined",
              "showLabel": true,
              "label": "Settings",
              "showIcon": false,
              "icon": "home",
              "iconSize": 24,
              "iconSizeUnit": "px",
              "mainColor": "#333333",
              "backgroundColor": "#FFFFFF",
              "autoScale": true,
              "customStyle": {
                "enabled": null,
                "hovered": null,
                "pressed": null,
                "activated": null,
                "disabled": null
              }
            }
          },
          "title": "Action button",
          "showTitleIcon": false,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "enableDataExport": false,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "showLegend": false,
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "widgetCss": "/*styles for button label*/\n.tb-widget-button-label {\n    letter-spacing: 0;\n    font-size: 12px;\n    font-weight: normal;\n    text-transform: uppercase;\n}\n/*border of the whole block*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n    transition: background 0.5s;\n    box-shadow: none;\n}\n/*hover effects*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):hover:not(:active):not(.tb-active-state).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-hover-state:not(:active):not(.tb-active-state).tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*click effects(:active property)*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state):active.tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button:not(:disabled):not(.tb-disabled-state).tb-active-state.tb-outlined{\n        border: 1px solid rgb(224, 224, 224);\n        background: #e5e5e5;\n        box-shadow: none;\n}\n/*styles for disabled state*/\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled).tb-outlined, .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled).tb-outlined{\n    border: 1px solid rgb(224, 224, 224);\n}\n.mat-mdc-button.mat-mdc-button-base.tb-widget-button:disabled:not(.tb-filled), .mat-mdc-button.mat-mdc-button-base.tb-widget-button.tb-disabled-state:not(.tb-filled){\n    background-color: #FFFFFF;\n    box-shadow: none;\n    color: rgba(0, 0, 0, 0.38);\n}",
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "borderRadius": "0px",
          "configMode": "advanced",
          "actions": {
            "click": [
              {
                "id": "917b955f-a9f3-6937-8af2-4e9abcbfd18a",
                "name": "onClick",
                "icon": "more_horiz",
                "type": "custom",
                "targetDashboardStateId": "settings",
                "openRightLayout": false,
                "setEntityId": true,
                "stateEntityParamName": null,
                "openInSeparateDialog": false,
                "openInPopover": false,
                "customFunction": "var stateIndex = widgetContext.stateController\n        .getStateIndex();\nwhile (stateIndex > 0) {\n    stateIndex -= 1;\n    backToPrevState(stateIndex);\n}\nopenDashboardState('settings');\n\nfunction backToPrevState(stateIndex) {\n    widgetContext.stateController.navigatePrevState(\n        stateIndex);\n}\n\nfunction openDashboardState(statedId) {\n    var currentState = widgetContext.stateController\n        .getStateId();\n    if (currentState !== statedId) {\n        var params = {};\n        widgetContext.stateController.updateState(statedId,\n            params, false);\n    }\n}"
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "618bd7f6-5a6f-73fb-d135-b89d768b71d5"
      },
      "f521b5c8-5329-dc74-ed67-b8674fbb7374": {
        "typeFullFqn": "system.map",
        "type": "latest",
        "sizeX": 8.5,
        "sizeY": 6,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1742747442833,
                "endTimeMs": 1742833842833
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": false,
          "backgroundColor": "rgba(0, 0, 0, 0)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "mapType": "geoMap",
            "layers": [
              {
                "label": "{i18n:widgets.maps.layer.roadmap}",
                "provider": "openstreet",
                "layerType": "CartoDB.Positron",
                "referenceLayer": null
              },
              {
                "label": "{i18n:widgets.maps.layer.satellite}",
                "provider": "openstreet",
                "layerType": "Esri.WorldImagery"
              },
              {
                "label": "{i18n:widgets.maps.layer.hybrid}",
                "provider": "openstreet",
                "layerType": "Esri.WorldImagery",
                "referenceLayer": "openstreetmap_hybrid"
              }
            ],
            "imageSource": null,
            "markers": [
              {
                "dsType": "entity",
                "dsLabel": "",
                "dsDeviceId": null,
                "dsEntityAliasId": "f7bed459-ea25-5a39-bfc1-a3bb8c941d8d",
                "dsFilterId": null,
                "additionalDataKeys": [
                  {
                    "name": "customerDailyConsumptionThresholdExceeded",
                    "type": "attribute",
                    "label": "dailyConsumptionThresholdExceeded",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.4023250080668883,
                    "aggregationType": null,
                    "units": null,
                    "decimals": null,
                    "funcBody": null,
                    "usePostProcessing": null,
                    "postFuncBody": null
                  },
                  {
                    "name": "customerWeeklyConsumptionThresholdExceeded",
                    "type": "attribute",
                    "label": "weeklyConsumptionThresholdExceeded",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.8180290932354872,
                    "aggregationType": null,
                    "units": null,
                    "decimals": null,
                    "funcBody": null,
                    "usePostProcessing": null,
                    "postFuncBody": null
                  },
                  {
                    "name": "customerTemperatureUnderThreshold",
                    "type": "attribute",
                    "label": "temperatureUnderThreshold",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.6270658047697986,
                    "aggregationType": null,
                    "units": null,
                    "decimals": null,
                    "funcBody": null,
                    "usePostProcessing": null,
                    "postFuncBody": null
                  },
                  {
                    "name": "address",
                    "type": "attribute",
                    "label": "address",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.23212279277458947
                  },
                  {
                    "name": "weeklyConsumption",
                    "type": "timeseries",
                    "label": "weeklyConsumption",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.13837522272525327,
                    "aggregationType": "NONE",
                    "units": null,
                    "decimals": null,
                    "funcBody": null,
                    "usePostProcessing": true,
                    "postFuncBody": "return value || 0;"
                  },
                  {
                    "name": "temperature",
                    "type": "timeseries",
                    "label": "temperature",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.12686738860392088,
                    "aggregationType": "NONE",
                    "units": null,
                    "decimals": null,
                    "funcBody": null,
                    "usePostProcessing": true,
                    "postFuncBody": "if (typeof value === 'number') {\n    return value.toFixed(1) +' &#8451;';\n} else {\n    return '';\n}"
                  },
                  {
                    "name": "dailyConsumption",
                    "type": "timeseries",
                    "label": "dailyConsumption",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.6022559232796783,
                    "aggregationType": "NONE",
                    "units": null,
                    "decimals": null,
                    "funcBody": null,
                    "usePostProcessing": true,
                    "postFuncBody": "return value || 0;"
                  }
                ],
                "label": {
                  "show": true,
                  "type": "pattern",
                  "pattern": "${entityName}"
                },
                "tooltip": {
                  "show": true,
                  "trigger": "hover",
                  "autoclose": true,
                  "type": "function",
                  "pattern": "<b>${entityName}</b><br/><br/><b>Latitude:</b> ${latitude:7}<br/><b>Longitude:</b> ${longitude:7}<br/><b>Temperature:</b> ${temperature} Â°C<br/><small>See tooltip settings for details</small>",
                  "offsetX": 0,
                  "offsetY": -1,
                  "patternFunction": "var dailyConsumptionThresholdExceeded = (data['dailyConsumptionThresholdExceeded'] && data['dailyConsumptionThresholdExceeded'] === 'true');\nvar weeklyConsumptionThresholdExceeded = (data['weeklyConsumptionThresholdExceeded'] && data['weeklyConsumptionThresholdExceeded'] === 'true');\nvar lowTemperature = (data['temperatureUnderThreshold'] && data['temperatureUnderThreshold'] === 'true');\n\nvar generalInfo = '<div><b style=\"line-height: 2; font-size: 14px;\">${entityLabel}</b><br/><span style=\"line-height: 2;\">Address: ${address}</span></div>';\nvar telemetryInfo = '<div><span>Consumed per week: ${weeklyConsumption:2} m<sup style=\"font-size: 9px;\">3</sup></span><br/><span>Consumed per day: ${dailyConsumption:2} m<sup style=\"font-size: 9px;\">3</sup></span><br/><span>Temperature: ${temperature:1}</span></div>';\n\nvar alarmsInfo = '';\n\nif (dailyConsumptionThresholdExceeded) {\n    alarmsInfo += '<br/><span>Daily consumption threshold exceeded.</span>';\n} \nif (weeklyConsumptionThresholdExceeded) {\n    alarmsInfo += '<br/><span>Weekly consumption threshold exceeded.</span>';\n}\nif (lowTemperature) {\n    alarmsInfo += '<br/><span>Low temperature.</span>';\n}\n\nvar label = generalInfo + telemetryInfo;\n\nif (alarmsInfo) {\n    label += '<div style=\"margin-top: 8px;\"><span>Alarms:</span>' + alarmsInfo + '</div>';\n}\n\nreturn label;",
                  "tagActions": null
                },
                "click": {
                  "type": "openDashboardState",
                  "targetDashboardStateId": "device_details",
                  "setEntityId": true,
                  "stateEntityParamName": null,
                  "openRightLayout": false,
                  "openInSeparateDialog": false,
                  "openInPopover": false
                },
                "groups": null,
                "edit": {
                  "enabledActions": [],
                  "attributeScope": "SERVER_SCOPE",
                  "snappable": false
                },
                "xKey": {
                  "name": "latitude",
                  "label": "latitude",
                  "type": "attribute",
                  "settings": {},
                  "color": "#2196f3"
                },
                "yKey": {
                  "name": "longitude",
                  "label": "longitude",
                  "type": "attribute",
                  "settings": {},
                  "color": "#2196f3"
                },
                "markerType": "image",
                "markerShape": {
                  "shape": "markerShape1",
                  "size": 34,
                  "color": {
                    "type": "constant",
                    "color": "#307FE5"
                  }
                },
                "markerIcon": {
                  "iconContainer": "iconContainer1",
                  "icon": "mdi:lightbulb-on",
                  "size": 48,
                  "color": {
                    "type": "constant",
                    "color": "#307FE5"
                  }
                },
                "markerImage": {
                  "type": "function",
                  "image": "/assets/markers/shape1.svg",
                  "imageSize": 34,
                  "imageFunction": "var res = {\n    url: images[0],\n    size: 34\n};\nvar dailyConsumptionThresholdExceeded = (data['dailyConsumptionThresholdExceeded'] && data['dailyConsumptionThresholdExceeded'] === 'true');\nvar weeklyConsumptionThresholdExceeded = (data['weeklyConsumptionThresholdExceeded'] && data['weeklyConsumptionThresholdExceeded'] === 'true');\nvar lowTemperature = (data['temperatureUnderThreshold'] && data['temperatureUnderThreshold'] === 'true');\n\nif (dailyConsumptionThresholdExceeded || weeklyConsumptionThresholdExceeded || \n            lowTemperature) {\n    res.url = images[1];\n}\nreturn res;",
                  "images": [
                    "tb-image;/api/images/system/water_metering_user_dashboard_dashboard_widget_new_openstreetmap_marker_image.svg",
                    "tb-image;/api/images/system/water_metering_user_dashboard_dashboard_widget_new_openstreetmap_marker_image_1.svg",
                    "tb-image;/api/images/system/water_metering_user_dashboard_dashboard_widget_new_openstreetmap_marker_image_2.svg"
                  ]
                },
                "markerOffsetX": 0.5,
                "markerOffsetY": 1,
                "markerClustering": {
                  "enable": false,
                  "zoomOnClick": true,
                  "maxZoom": null,
                  "maxClusterRadius": 80,
                  "zoomAnimation": true,
                  "showCoverageOnHover": true,
                  "spiderfyOnMaxZoom": false,
                  "chunkedLoad": false,
                  "lazyLoad": true,
                  "useClusterMarkerColorFunction": false,
                  "clusterMarkerColorFunction": null
                }
              }
            ],
            "polygons": [],
            "circles": [],
            "additionalDataSources": [],
            "controlsPosition": "topleft",
            "zoomActions": [
              "scroll",
              "doubleClick",
              "controlButtons"
            ],
            "scales": [],
            "dragModeButton": false,
            "fitMapBounds": true,
            "useDefaultCenterPosition": false,
            "defaultCenterPosition": "0,0",
            "defaultZoomLevel": null,
            "mapPageSize": 16384,
            "mapActionButtons": [],
            "background": {
              "type": "color",
              "color": "#fff",
              "overlay": {
                "enabled": false,
                "color": "rgba(255,255,255,0.72)",
                "blur": 3
              }
            },
            "padding": "0"
          },
          "title": "Map",
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showTitleIcon": false,
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "widgetCss": "",
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "configMode": "basic",
          "titleFont": null,
          "titleColor": null,
          "margin": "0px",
          "borderRadius": "0px",
          "iconSize": "24px",
          "titleIcon": "map",
          "iconColor": "#1F6BDD",
          "actions": {},
          "enableDataExport": false
        },
        "row": 0,
        "col": 0,
        "id": "f521b5c8-5329-dc74-ed67-b8674fbb7374"
      },
      "b5979e4b-a3af-eaa7-f955-21f6fa720815": {
        "typeFullFqn": "system.map",
        "type": "latest",
        "sizeX": 8.5,
        "sizeY": 6,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1742747442833,
                "endTimeMs": 1742833842833
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": true,
          "backgroundColor": "rgba(0, 0, 0, 0)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "mapType": "geoMap",
            "layers": [
              {
                "label": "{i18n:widgets.maps.layer.roadmap}",
                "provider": "openstreet",
                "layerType": "CartoDB.Positron",
                "referenceLayer": null
              },
              {
                "label": "{i18n:widgets.maps.layer.satellite}",
                "provider": "openstreet",
                "layerType": "Esri.WorldImagery"
              },
              {
                "label": "{i18n:widgets.maps.layer.hybrid}",
                "provider": "openstreet",
                "layerType": "Esri.WorldImagery",
                "referenceLayer": "openstreetmap_hybrid"
              }
            ],
            "imageSource": null,
            "markers": [
              {
                "dsType": "entity",
                "dsLabel": "",
                "dsDeviceId": null,
                "dsEntityAliasId": "2754dd92-28a3-a689-d65c-ab9001a86f73",
                "dsFilterId": null,
                "additionalDataKeys": [
                  {
                    "name": "dailyConsumptionThresholdExceeded",
                    "type": "attribute",
                    "label": "dailyConsumptionThresholdExceeded",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.4023250080668883,
                    "aggregationType": null,
                    "units": null,
                    "decimals": null,
                    "funcBody": null,
                    "usePostProcessing": null,
                    "postFuncBody": null
                  },
                  {
                    "name": "weeklyConsumptionThresholdExceeded",
                    "type": "attribute",
                    "label": "weeklyConsumptionThresholdExceeded",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.8180290932354872,
                    "aggregationType": null,
                    "units": null,
                    "decimals": null,
                    "funcBody": null,
                    "usePostProcessing": null,
                    "postFuncBody": null
                  },
                  {
                    "name": "temperatureUnderThreshold",
                    "type": "attribute",
                    "label": "temperatureUnderThreshold",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.6270658047697986,
                    "aggregationType": null,
                    "units": null,
                    "decimals": null,
                    "funcBody": null,
                    "usePostProcessing": null,
                    "postFuncBody": null
                  },
                  {
                    "name": "deviceInactive",
                    "type": "attribute",
                    "label": "deviceInactive",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.4919605564945897
                  },
                  {
                    "name": "lowBattery",
                    "type": "attribute",
                    "label": "lowBattery",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.08023855815659586
                  }
                ],
                "label": {
                  "show": true,
                  "type": "pattern",
                  "pattern": "${entityName}"
                },
                "tooltip": {
                  "show": true,
                  "type": "pattern",
                  "pattern": "<b>${entityName}</b><br/><br/><b>Latitude:</b> ${latitude:7}<br/><b>Longitude:</b> ${longitude:7}<br/><br/><link-act name='delete'>Delete</link-act>",
                  "patternFunction": "",
                  "trigger": "click",
                  "autoclose": true,
                  "offsetX": 0,
                  "offsetY": -1,
                  "tagActions": [
                    {
                      "name": "delete",
                      "type": "custom",
                      "customFunction": "widgetContext.mapInstance.saveMarkerLocation(additionalParams, null, null).subscribe(function success() {\n        widgetContext.updateAliases();\n});",
                      "openInSeparateDialog": false,
                      "openInPopover": false
                    }
                  ]
                },
                "click": {
                  "type": "doNothing",
                  "openInSeparateDialog": false,
                  "openInPopover": false
                },
                "groups": null,
                "edit": {
                  "enabledActions": [
                    "add",
                    "move",
                    "remove"
                  ],
                  "attributeScope": "SERVER_SCOPE",
                  "snappable": false
                },
                "xKey": {
                  "name": "latitude",
                  "label": "latitude",
                  "type": "attribute",
                  "settings": {},
                  "color": "#2196f3"
                },
                "yKey": {
                  "name": "longitude",
                  "label": "longitude",
                  "type": "attribute",
                  "settings": {},
                  "color": "#2196f3"
                },
                "markerType": "image",
                "markerShape": {
                  "shape": "markerShape1",
                  "size": 34,
                  "color": {
                    "type": "constant",
                    "color": "#307FE5"
                  }
                },
                "markerIcon": {
                  "iconContainer": "iconContainer1",
                  "icon": "mdi:lightbulb-on",
                  "size": 48,
                  "color": {
                    "type": "constant",
                    "color": "#307FE5"
                  }
                },
                "markerImage": {
                  "type": "function",
                  "image": "/assets/markers/shape1.svg",
                  "imageSize": 34,
                  "imageFunction": "var res = {\n    url: images[0],\n    size: 34\n};\nvar dailyConsumptionThresholdExceeded = (data['dailyConsumptionThresholdExceeded'] && data['dailyConsumptionThresholdExceeded'] === 'true');\nvar weeklyConsumptionThresholdExceeded = (data['weeklyConsumptionThresholdExceeded'] && data['weeklyConsumptionThresholdExceeded'] === 'true');\nvar inactive = (data['deviceInactive'] && data['deviceInactive'] === 'true');\nvar lowBattery = (data['lowBattery'] && data['lowBattery'] === 'true');\nvar lowTemperature = (data['temperatureUnderThreshold'] && data['temperatureUnderThreshold'] === 'true');\n\nif (inactive) {\n    res.url = images[2];\n} else if (dailyConsumptionThresholdExceeded || weeklyConsumptionThresholdExceeded || \n            lowBattery || lowTemperature) {\n    res.url = images[1];\n}\nreturn res;",
                  "images": [
                    "tb-image;/api/images/system/water_metering_user_dashboard_dashboard_widget_new_openstreetmap_marker_image.svg",
                    "tb-image;/api/images/system/water_metering_user_dashboard_dashboard_widget_new_openstreetmap_marker_image_1.svg",
                    "tb-image;/api/images/system/water_metering_user_dashboard_dashboard_widget_new_openstreetmap_marker_image_2.svg"
                  ]
                },
                "markerOffsetX": 0.5,
                "markerOffsetY": 1,
                "markerClustering": {
                  "enable": false,
                  "zoomOnClick": true,
                  "maxZoom": null,
                  "maxClusterRadius": 80,
                  "zoomAnimation": true,
                  "showCoverageOnHover": true,
                  "spiderfyOnMaxZoom": false,
                  "chunkedLoad": false,
                  "lazyLoad": true,
                  "useClusterMarkerColorFunction": false,
                  "clusterMarkerColorFunction": null
                }
              }
            ],
            "polygons": [],
            "circles": [],
            "additionalDataSources": [],
            "controlsPosition": "topleft",
            "zoomActions": [
              "scroll",
              "doubleClick",
              "controlButtons"
            ],
            "scales": [],
            "dragModeButton": false,
            "fitMapBounds": true,
            "useDefaultCenterPosition": false,
            "defaultCenterPosition": "0,0",
            "defaultZoomLevel": null,
            "mapPageSize": 16384,
            "mapActionButtons": [],
            "background": {
              "type": "color",
              "color": "#fff",
              "overlay": {
                "enabled": false,
                "color": "rgba(255,255,255,0.72)",
                "blur": 3
              }
            },
            "padding": "8px"
          },
          "title": "Drag and drop marker to change location",
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showTitleIcon": false,
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "widgetCss": "",
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "configMode": "basic",
          "titleFont": null,
          "titleColor": null,
          "margin": "0px",
          "borderRadius": "0px",
          "iconSize": "24px",
          "titleIcon": "map",
          "iconColor": "#1F6BDD",
          "actions": {},
          "enableDataExport": false
        },
        "row": 0,
        "col": 0,
        "id": "b5979e4b-a3af-eaa7-f955-21f6fa720815"
      },
      "5a5c96a4-69ce-3909-221f-b98fcb51e12e": {
        "typeFullFqn": "system.map",
        "type": "latest",
        "sizeX": 8.5,
        "sizeY": 6,
        "config": {
          "datasources": [],
          "timewindow": {
            "displayValue": "",
            "selectedTab": 0,
            "realtime": {
              "realtimeType": 1,
              "interval": 1000,
              "timewindowMs": 60000,
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideQuickInterval": false
            },
            "history": {
              "historyType": 0,
              "interval": 1000,
              "timewindowMs": 60000,
              "fixedTimewindow": {
                "startTimeMs": 1742747442833,
                "endTimeMs": 1742833842833
              },
              "quickInterval": "CURRENT_DAY",
              "hideInterval": false,
              "hideLastInterval": false,
              "hideFixedInterval": false,
              "hideQuickInterval": false
            },
            "aggregation": {
              "type": "AVG",
              "limit": 25000
            }
          },
          "showTitle": true,
          "backgroundColor": "rgba(0, 0, 0, 0)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "mapType": "geoMap",
            "layers": [
              {
                "label": "{i18n:widgets.maps.layer.roadmap}",
                "provider": "openstreet",
                "layerType": "CartoDB.Positron",
                "referenceLayer": null
              },
              {
                "label": "{i18n:widgets.maps.layer.satellite}",
                "provider": "openstreet",
                "layerType": "Esri.WorldImagery"
              },
              {
                "label": "{i18n:widgets.maps.layer.hybrid}",
                "provider": "openstreet",
                "layerType": "Esri.WorldImagery",
                "referenceLayer": "openstreetmap_hybrid"
              }
            ],
            "imageSource": null,
            "markers": [
              {
                "dsType": "entity",
                "dsLabel": "",
                "dsDeviceId": null,
                "dsEntityAliasId": "2754dd92-28a3-a689-d65c-ab9001a86f73",
                "dsFilterId": null,
                "additionalDataKeys": [
                  {
                    "name": "dailyConsumptionThresholdExceeded",
                    "type": "attribute",
                    "label": "dailyConsumptionThresholdExceeded",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.4023250080668883,
                    "aggregationType": null,
                    "units": null,
                    "decimals": null,
                    "funcBody": null,
                    "usePostProcessing": null,
                    "postFuncBody": null
                  },
                  {
                    "name": "weeklyConsumptionThresholdExceeded",
                    "type": "attribute",
                    "label": "weeklyConsumptionThresholdExceeded",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.8180290932354872,
                    "aggregationType": null,
                    "units": null,
                    "decimals": null,
                    "funcBody": null,
                    "usePostProcessing": null,
                    "postFuncBody": null
                  },
                  {
                    "name": "temperatureUnderThreshold",
                    "type": "attribute",
                    "label": "temperatureUnderThreshold",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.6270658047697986,
                    "aggregationType": null,
                    "units": null,
                    "decimals": null,
                    "funcBody": null,
                    "usePostProcessing": null,
                    "postFuncBody": null
                  },
                  {
                    "name": "deviceInactive",
                    "type": "attribute",
                    "label": "deviceInactive",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.4919605564945897
                  },
                  {
                    "name": "lowBattery",
                    "type": "attribute",
                    "label": "lowBattery",
                    "color": "#2196f3",
                    "settings": {},
                    "_hash": 0.08023855815659586
                  }
                ],
                "label": {
                  "show": true,
                  "type": "pattern",
                  "pattern": "${entityName}"
                },
                "tooltip": {
                  "show": true,
                  "type": "pattern",
                  "pattern": "<b>${entityName}</b><br/><br/><b>Latitude:</b> ${latitude:7}<br/><b>Longitude:</b> ${longitude:7}<br/><br/><link-act name='delete'>Delete</link-act>",
                  "patternFunction": "",
                  "trigger": "click",
                  "autoclose": true,
                  "offsetX": 0,
                  "offsetY": -1,
                  "tagActions": [
                    {
                      "name": "delete",
                      "type": "custom",
                      "customFunction": "widgetContext.mapInstance.saveMarkerLocation(additionalParams, null, null).subscribe(function success() {\n        widgetContext.updateAliases();\n});",
                      "openInSeparateDialog": false,
                      "openInPopover": false
                    }
                  ]
                },
                "click": {
                  "type": "doNothing",
                  "openInSeparateDialog": false,
                  "openInPopover": false
                },
                "groups": null,
                "edit": {
                  "enabledActions": [
                    "add",
                    "move",
                    "remove"
                  ],
                  "attributeScope": "SERVER_SCOPE",
                  "snappable": false
                },
                "xKey": {
                  "name": "latitude",
                  "label": "latitude",
                  "type": "attribute",
                  "settings": {},
                  "color": "#2196f3"
                },
                "yKey": {
                  "name": "longitude",
                  "label": "longitude",
                  "type": "attribute",
                  "settings": {},
                  "color": "#2196f3"
                },
                "markerType": "image",
                "markerShape": {
                  "shape": "markerShape1",
                  "size": 34,
                  "color": {
                    "type": "constant",
                    "color": "#307FE5"
                  }
                },
                "markerIcon": {
                  "iconContainer": "iconContainer1",
                  "icon": "mdi:lightbulb-on",
                  "size": 48,
                  "color": {
                    "type": "constant",
                    "color": "#307FE5"
                  }
                },
                "markerImage": {
                  "type": "function",
                  "image": "/assets/markers/shape1.svg",
                  "imageSize": 34,
                  "imageFunction": "var res = {\n    url: images[0],\n    size: 34\n};\nvar dailyConsumptionThresholdExceeded = (data['dailyConsumptionThresholdExceeded'] && data['dailyConsumptionThresholdExceeded'] === 'true');\nvar weeklyConsumptionThresholdExceeded = (data['weeklyConsumptionThresholdExceeded'] && data['weeklyConsumptionThresholdExceeded'] === 'true');\nvar inactive = (data['deviceInactive'] && data['deviceInactive'] === 'true');\nvar lowBattery = (data['lowBattery'] && data['lowBattery'] === 'true');\nvar lowTemperature = (data['temperatureUnderThreshold'] && data['temperatureUnderThreshold'] === 'true');\n\nif (inactive) {\n    res.url = images[2];\n} else if (dailyConsumptionThresholdExceeded || weeklyConsumptionThresholdExceeded || \n            lowBattery || lowTemperature) {\n    res.url = images[1];\n}\nreturn res;",
                  "images": [
                    "tb-image;/api/images/system/water_metering_user_dashboard_dashboard_widget_new_openstreetmap_marker_image.svg",
                    "tb-image;/api/images/system/water_metering_user_dashboard_dashboard_widget_new_openstreetmap_marker_image_1.svg",
                    "tb-image;/api/images/system/water_metering_user_dashboard_dashboard_widget_new_openstreetmap_marker_image_2.svg"
                  ]
                },
                "markerOffsetX": 0.5,
                "markerOffsetY": 1,
                "markerClustering": {
                  "enable": false,
                  "zoomOnClick": true,
                  "maxZoom": null,
                  "maxClusterRadius": 80,
                  "zoomAnimation": true,
                  "showCoverageOnHover": true,
                  "spiderfyOnMaxZoom": false,
                  "chunkedLoad": false,
                  "lazyLoad": true,
                  "useClusterMarkerColorFunction": false,
                  "clusterMarkerColorFunction": null
                }
              }
            ],
            "polygons": [],
            "circles": [],
            "additionalDataSources": [],
            "controlsPosition": "topleft",
            "zoomActions": [
              "scroll",
              "doubleClick",
              "controlButtons"
            ],
            "scales": [],
            "dragModeButton": false,
            "fitMapBounds": true,
            "useDefaultCenterPosition": false,
            "defaultCenterPosition": "0,0",
            "defaultZoomLevel": null,
            "mapPageSize": 16384,
            "mapActionButtons": [],
            "background": {
              "type": "color",
              "color": "#fff",
              "overlay": {
                "enabled": false,
                "color": "rgba(255,255,255,0.72)",
                "blur": 3
              }
            },
            "padding": "8px"
          },
          "title": "Drag and drop marker to change location",
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showTitleIcon": false,
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {
            "border": "1px solid #E0E0E0"
          },
          "widgetCss": "",
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "pageSize": 1024,
          "noDataDisplayMessage": "",
          "configMode": "basic",
          "titleFont": null,
          "titleColor": null,
          "margin": "0px",
          "borderRadius": "0px",
          "iconSize": "24px",
          "titleIcon": "map",
          "iconColor": "#1F6BDD",
          "actions": {},
          "enableDataExport": false
        },
        "row": 0,
        "col": 0,
        "id": "5a5c96a4-69ce-3909-221f-b98fcb51e12e"
      }
    },
    "states": {
      "default": {
        "name": "Total",
        "root": true,
        "layouts": {
          "main": {
            "widgets": {
              "80ac9372-6c45-28e7-6c88-baf76fe78318": {
                "sizeX": 16,
                "sizeY": 6,
                "mobileOrder": 9,
                "mobileHeight": 4,
                "row": 3,
                "col": 14
              },
              "bfe2aa3e-8453-29f4-2e16-13c23c032a38": {
                "sizeX": 8,
                "sizeY": 2,
                "row": 1,
                "col": 22,
                "mobileOrder": 7,
                "mobileHeight": 2
              },
              "e615cae0-75da-c2bd-54de-1571431b9be8": {
                "sizeX": 8,
                "sizeY": 2,
                "row": 1,
                "col": 14,
                "mobileOrder": 6,
                "mobileHeight": 2
              },
              "b2b1a8a8-43f5-0613-434f-d2251c2f98aa": {
                "sizeX": 30,
                "sizeY": 7,
                "mobileOrder": 10,
                "mobileHeight": 4,
                "row": 9,
                "col": 0
              },
              "acfce79f-e232-b96a-8598-b849dc49db35": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 0,
                "mobileOrder": 1,
                "mobileHeight": 1
              },
              "d71e1ebf-4a29-ecc0-5820-2d597ffb033d": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 6,
                "mobileOrder": 2,
                "mobileHeight": 1
              },
              "bb9e2f3e-4010-66e5-dfb2-566afc6171a7": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 12,
                "mobileOrder": 3,
                "mobileHeight": 1
              },
              "cbb79baf-e564-4434-7f7c-02a5db58562f": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 18,
                "mobileOrder": 4,
                "mobileHeight": 1
              },
              "900563d5-04f2-dfa0-7218-32b283f82c33": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 24,
                "mobileOrder": 5,
                "mobileHeight": 1
              },
              "f521b5c8-5329-dc74-ed67-b8674fbb7374": {
                "sizeX": 14,
                "sizeY": 8,
                "mobileOrder": 8,
                "mobileHeight": 4,
                "resizable": true,
                "row": 1,
                "col": 0
              }
            },
            "gridSettings": {
              "backgroundColor": "#f2f2f2",
              "color": "rgba(0,0,0,0.870588)",
              "columns": 30,
              "backgroundSizeMode": "100%",
              "autoFillHeight": true,
              "mobileAutoFillHeight": false,
              "mobileRowHeight": 70,
              "margin": 8,
              "outerMargin": true,
              "layoutType": "default"
            }
          }
        }
      },
      "analytics": {
        "name": "Analytics",
        "root": false,
        "layouts": {
          "main": {
            "widgets": {
              "e931ad52-49d0-d235-aa13-57de58615b97": {
                "sizeX": 9,
                "sizeY": 15,
                "row": 1,
                "col": 21,
                "mobileOrder": 9,
                "mobileHeight": 4
              },
              "41f3bd64-9293-91b4-60aa-eeb4971f96bd": {
                "sizeX": 10,
                "sizeY": 3,
                "row": 1,
                "col": 11,
                "mobileOrder": 7,
                "mobileHeight": 2
              },
              "ef333025-00fe-50b8-400d-65f4347bb538": {
                "sizeX": 11,
                "sizeY": 3,
                "row": 1,
                "col": 0,
                "mobileOrder": 6,
                "mobileHeight": 2
              },
              "3469ae52-7eb2-3628-1ad0-3102b31574f9": {
                "sizeX": 21,
                "sizeY": 12,
                "mobileOrder": 10,
                "mobileHeight": 5,
                "row": 4,
                "col": 0
              },
              "002877e7-110b-66f8-061d-148eb9592f60": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 0,
                "mobileOrder": 1,
                "mobileHeight": 1
              },
              "88943cac-3482-66bd-a4c3-f919688d2956": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 6,
                "mobileOrder": 2,
                "mobileHeight": 1
              },
              "bb18b8b8-87df-cb57-845f-01905e8d4cde": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 12,
                "mobileOrder": 3,
                "mobileHeight": 1
              },
              "ddf67f22-a980-1221-6100-114a0510d8f5": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 18,
                "mobileOrder": 4,
                "mobileHeight": 1
              },
              "39d4cdf7-7b0c-bb47-92ed-d27450cb653c": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 24,
                "mobileOrder": 5,
                "mobileHeight": 1
              }
            },
            "gridSettings": {
              "backgroundColor": "#f2f2f2",
              "color": "rgba(0,0,0,0.870588)",
              "columns": 30,
              "backgroundSizeMode": "100%",
              "autoFillHeight": true,
              "mobileAutoFillHeight": false,
              "mobileRowHeight": 70,
              "margin": 8,
              "outerMargin": true,
              "layoutType": "default"
            }
          }
        }
      },
      "devices": {
        "name": "Devices",
        "root": false,
        "layouts": {
          "main": {
            "widgets": {
              "291ab4b2-f371-9897-6856-385e5745f430": {
                "sizeX": 18,
                "sizeY": 15,
                "mobileOrder": 6,
                "mobileHeight": 5,
                "row": 1,
                "col": 0
              },
              "c33ce26b-a96e-4de0-ae3b-7ddf92cf6555": {
                "sizeX": 12,
                "sizeY": 15,
                "mobileOrder": 7,
                "mobileHeight": 5,
                "row": 1,
                "col": 18
              },
              "833f7d2f-7a63-6ae0-4fea-340fdc1f34cb": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 0,
                "mobileOrder": 1,
                "mobileHeight": 1
              },
              "0484901b-a3ea-b40a-cdf1-d38db0b3ee12": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 6,
                "mobileOrder": 2,
                "mobileHeight": 1
              },
              "e7e5bc09-d208-27c1-7493-7d9a973e9c03": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 12,
                "mobileOrder": 3,
                "mobileHeight": 1
              },
              "dfb77440-4132-5272-0e6f-97cdd222289e": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 18,
                "mobileOrder": 4,
                "mobileHeight": 1
              },
              "03923c35-6a08-4f9a-9fd3-c42512d05bba": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 24,
                "mobileOrder": 5,
                "mobileHeight": 1
              }
            },
            "gridSettings": {
              "backgroundColor": "#f2f2f2",
              "color": "rgba(0,0,0,0.870588)",
              "columns": 30,
              "backgroundSizeMode": "100%",
              "autoFillHeight": true,
              "mobileAutoFillHeight": false,
              "mobileRowHeight": 70,
              "margin": 8,
              "outerMargin": true,
              "layoutType": "default"
            }
          }
        }
      },
      "alarms": {
        "name": "Alarms",
        "root": false,
        "layouts": {
          "main": {
            "widgets": {
              "c2bdcb20-9d23-3ef4-34fd-950d8e322152": {
                "sizeX": 8,
                "sizeY": 15,
                "mobileOrder": 8,
                "mobileHeight": 4,
                "row": 1,
                "col": 22
              },
              "db53f985-2418-e36d-6b5d-c51eb80c6264": {
                "sizeX": 22,
                "sizeY": 15,
                "mobileOrder": 7,
                "mobileHeight": 4,
                "row": 1,
                "col": 0
              },
              "75d928b3-e676-9459-e571-5fef8aada75b": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 0,
                "mobileOrder": 1,
                "mobileHeight": 1
              },
              "5402a922-bbb0-79f0-0fea-d7ccaa68c7ea": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 6,
                "mobileOrder": 2,
                "mobileHeight": 1
              },
              "be698e5c-b18c-3b7a-8c58-39ab41b66788": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 12,
                "mobileOrder": 3,
                "mobileHeight": 1
              },
              "189a28ea-c0a5-c52e-7b3d-6c2dddf761e5": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 18,
                "mobileOrder": 4,
                "mobileHeight": 1
              },
              "4cc5d061-c76d-9e69-fb1c-4b3afac1972f": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 24,
                "mobileOrder": 5,
                "mobileHeight": 1
              }
            },
            "gridSettings": {
              "backgroundColor": "#f2f2f2",
              "color": "rgba(0,0,0,0.870588)",
              "columns": 30,
              "backgroundSizeMode": "100%",
              "autoFillHeight": true,
              "mobileAutoFillHeight": false,
              "mobileRowHeight": 70,
              "margin": 8,
              "outerMargin": true,
              "layoutType": "default"
            }
          }
        }
      },
      "settings": {
        "name": "Settings",
        "root": false,
        "layouts": {
          "main": {
            "widgets": {
              "1b26a5b1-61be-945c-b7a7-85edc3e219cf": {
                "sizeX": 10,
                "sizeY": 15,
                "row": 1,
                "col": 0,
                "mobileOrder": 7,
                "mobileHeight": 10
              },
              "e5602f65-3248-dc60-799c-0d8b413e3604": {
                "sizeX": 10,
                "sizeY": 15,
                "row": 1,
                "col": 10,
                "mobileOrder": 8,
                "mobileHeight": 5
              },
              "2b036a6f-052f-46fe-14c6-6dc59416704f": {
                "sizeX": 10,
                "sizeY": 15,
                "row": 1,
                "col": 20,
                "mobileOrder": 9,
                "mobileHeight": 5
              },
              "8bbd938b-7c0f-da5e-c7ee-1d86b59e3add": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 0,
                "mobileOrder": 1,
                "mobileHeight": 1
              },
              "19bc0a46-fd66-16ce-f8d3-d295e59e9e1c": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 6,
                "mobileOrder": 2,
                "mobileHeight": 1
              },
              "70e5f553-a77c-5857-6cee-f58d5df25734": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 12,
                "mobileOrder": 3,
                "mobileHeight": 1
              },
              "accdde43-82fd-a358-a516-b583d4c8de8f": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 18,
                "mobileOrder": 4,
                "mobileHeight": 1
              },
              "ac67cf30-5fdf-f9cb-bc91-58a673f68734": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 24,
                "mobileOrder": 5,
                "mobileHeight": 1
              }
            },
            "gridSettings": {
              "backgroundColor": "#f2f2f2",
              "color": "rgba(0,0,0,0.870588)",
              "columns": 30,
              "backgroundSizeMode": "100%",
              "autoFillHeight": true,
              "mobileAutoFillHeight": false,
              "mobileRowHeight": 70,
              "margin": 8,
              "outerMargin": true,
              "layoutType": "default"
            }
          }
        }
      },
      "device_details": {
        "name": "${entityName}",
        "root": false,
        "layouts": {
          "main": {
            "widgets": {
              "2f9a86a1-b6ac-6fee-e67c-cbe72f2d41a7": {
                "sizeX": 8,
                "sizeY": 3,
                "row": 1,
                "col": 0,
                "mobileOrder": 7,
                "mobileHeight": 2
              },
              "6f390f15-d267-3d9d-3afd-5b18247ddc2d": {
                "sizeX": 8,
                "sizeY": 3,
                "row": 1,
                "col": 8,
                "mobileOrder": 8,
                "mobileHeight": 2
              },
              "328e8d85-ed7c-ae06-d537-3edc002de94c": {
                "sizeX": 7,
                "sizeY": 3,
                "row": 1,
                "col": 16,
                "mobileOrder": 9,
                "mobileHeight": 2
              },
              "1e7b764e-6e7d-0bb3-7470-9e3b9154235c": {
                "sizeX": 7,
                "sizeY": 5,
                "mobileOrder": 13,
                "mobileHeight": 5,
                "row": 11,
                "col": 9
              },
              "51f6f10f-c491-9e27-04d5-a235ca4fc16c": {
                "sizeX": 7,
                "sizeY": 5,
                "mobileOrder": 15,
                "mobileHeight": 5,
                "row": 11,
                "col": 16
              },
              "0924e14a-b8cc-2566-90e1-5c6f9819761e": {
                "sizeX": 7,
                "sizeY": 5,
                "row": 11,
                "col": 23,
                "mobileOrder": 16,
                "mobileHeight": 5
              },
              "7862ed59-3ffa-e2ae-5bd1-c5531ca668cb": {
                "sizeX": 7,
                "sizeY": 3,
                "row": 1,
                "col": 23
              },
              "a1d8419f-a06d-497c-a334-38225733b77c": {
                "sizeX": 7,
                "sizeY": 7,
                "row": 4,
                "col": 23
              },
              "dc2b642e-38b7-ffff-5dc8-191ab7a249ed": {
                "sizeX": 23,
                "sizeY": 7,
                "mobileOrder": 11,
                "mobileHeight": 3,
                "row": 4,
                "col": 0
              },
              "7fb191f2-48cc-01e9-c8d4-a0a2aaea23d0": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 0,
                "mobileOrder": 1,
                "mobileHeight": 1
              },
              "dbdaa399-188c-4b57-c776-8887dd063928": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 6,
                "mobileOrder": 2,
                "mobileHeight": 1
              },
              "fd9e9f64-ebdd-5348-9ffd-ce7ad05bca65": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 12,
                "mobileOrder": 3,
                "mobileHeight": 1
              },
              "53a234f4-2c69-473a-f4b5-7999132b0d08": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 18,
                "mobileOrder": 4,
                "mobileHeight": 1
              },
              "618bd7f6-5a6f-73fb-d135-b89d768b71d5": {
                "sizeX": 6,
                "sizeY": 1,
                "row": 0,
                "col": 24,
                "mobileOrder": 5,
                "mobileHeight": 1
              },
              "b5979e4b-a3af-eaa7-f955-21f6fa720815": {
                "sizeX": 9,
                "sizeY": 5,
                "mobileOrder": 17,
                "mobileHeight": 5,
                "resizable": true,
                "row": 11,
                "col": 0
              }
            },
            "gridSettings": {
              "backgroundColor": "#f2f2f2",
              "color": "rgba(0,0,0,0.870588)",
              "columns": 30,
              "backgroundSizeMode": "100%",
              "autoFillHeight": true,
              "mobileAutoFillHeight": false,
              "mobileRowHeight": 70,
              "margin": 8,
              "outerMargin": true,
              "layoutType": "default"
            }
          }
        }
      },
      "set-location": {
        "name": "${entityName}: Edit location parameters",
        "root": false,
        "layouts": {
          "main": {
            "widgets": {
              "ac8a033a-b659-fe42-f85a-a3c20fd2b0f1": {
                "sizeX": 48,
                "sizeY": 3,
                "row": 0,
                "col": 0
              },
              "5a5c96a4-69ce-3909-221f-b98fcb51e12e": {
                "sizeX": 48,
                "sizeY": 19,
                "resizable": true,
                "row": 3,
                "col": 0
              }
            },
            "gridSettings": {
              "backgroundColor": "#eeeeee",
              "color": "rgba(0,0,0,0.870588)",
              "columns": 48,
              "margin": 0,
              "backgroundSizeMode": "100%",
              "autoFillHeight": true,
              "backgroundImageUrl": null,
              "mobileAutoFillHeight": false,
              "mobileRowHeight": 70,
              "outerMargin": true,
              "layoutType": "default"
            }
          }
        }
      }
    },
    "entityAliases": {
      "f7bed459-ea25-5a39-bfc1-a3bb8c941d8d": {
        "id": "f7bed459-ea25-5a39-bfc1-a3bb8c941d8d",
        "alias": "Sensors",
        "filter": {
          "type": "deviceSearchQuery",
          "resolveMultiple": true,
          "rootStateEntity": true,
          "stateEntityParamName": "",
          "defaultStateEntity": {
            "entityType": "CURRENT_CUSTOMER",
            "id": "70d6d5b0-8b0f-11eb-8d54-672ef9e6d207"
          },
          "rootEntity": null,
          "direction": "FROM",
          "maxLevel": 1,
          "fetchLastLevelOnly": null,
          "relationType": "Owns",
          "deviceTypes": [
            "Water Meter"
          ]
        }
      },
      "2754dd92-28a3-a689-d65c-ab9001a86f73": {
        "id": "2754dd92-28a3-a689-d65c-ab9001a86f73",
        "alias": "State",
        "filter": {
          "type": "stateEntity",
          "resolveMultiple": false,
          "stateEntityParamName": "",
          "defaultStateEntity": {
            "entityType": "CURRENT_CUSTOMER",
            "id": "70d6d5b0-8b0f-11eb-8d54-672ef9e6d207"
          }
        }
      },
      "e8bf7353-e2d4-1343-d6d7-32e74bd260db": {
        "id": "e8bf7353-e2d4-1343-d6d7-32e74bd260db",
        "alias": "Selected Entity",
        "filter": {
          "type": "stateEntity",
          "resolveMultiple": false,
          "stateEntityParamName": "device",
          "defaultStateEntity": {
            "entityType": "CURRENT_CUSTOMER",
            "id": "70d6d5b0-8b0f-11eb-8d54-672ef9e6d207"
          }
        }
      },
      "98886949-dba9-9fcf-7b4f-9d3937df249a": {
        "id": "98886949-dba9-9fcf-7b4f-9d3937df249a",
        "alias": "Current Customer",
        "filter": {
          "type": "singleEntity",
          "resolveMultiple": false,
          "singleEntity": {
            "entityType": "CURRENT_CUSTOMER",
            "id": "70d6d5b0-8b0f-11eb-8d54-672ef9e6d207"
          }
        }
      }
    },
    "timewindow": {
      "hideAggregation": false,
      "hideAggInterval": false,
      "hideTimezone": false,
      "selectedTab": 1,
      "history": {
        "historyType": 2,
        "timewindowMs": 60000,
        "interval": 1000,
        "fixedTimewindow": {
          "startTimeMs": 1616088742934,
          "endTimeMs": 1616175142934
        },
        "quickInterval": "CURRENT_WEEK_ISO"
      },
      "aggregation": {
        "type": "NONE",
        "limit": 2500
      },
      "timezone": "UTC"
    },
    "settings": {
      "stateControllerId": "entity",
      "showTitle": false,
      "showDashboardsSelect": false,
      "showEntitiesSelect": false,
      "showDashboardTimewindow": true,
      "showDashboardExport": false,
      "toolbarAlwaysOpen": true,
      "titleColor": "rgba(0,0,0,0.870588)"
    },
    "filters": {}
  },
  "name": "Water metering User dashboard",
  "resources": [
    {
      "link": "/api/images/system/water_metering_user_dashboard_dashboard_widget_new_openstreetmap_marker_image.svg",
      "title": "\"Water Metering User Dashboard\" dashboard widget \"New OpenStreetMap\" marker image",
      "type": "IMAGE",
      "subType": "IMAGE",
      "fileName": "water_metering_user_dashboard_dashboard_widget_new_openstreetmap_marker_image.svg",
      "publicResourceKey": "5Zf8FsFikTaeE6AG3OZDxKu0VYZjHtgY",
      "mediaType": "image/svg+xml",
      "data": "PHN2ZyB3aWR0aD0iMzAiIGhlaWdodD0iMzciIHZpZXdCb3g9IjAgMCAzMCAzNyIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICAgIDxwYXRoIGZpbGwtcnVsZT0iZXZlbm9kZCIgY2xpcC1ydWxlPSJldmVub2RkIiBkPSJNMTUgMzUuNTg4MkMxNSAzNS41ODgyIDI5IDI2LjAyNjEgMjkgMTVDMjkgNy4yNjgwMSAyMi43MzIgMSAxNSAxQzcuMjY4MDEgMSAxIDcuMjY4MDEgMSAxNUMxIDI2LjAyNjEgMTUgMzUuNTg4MiAxNSAzNS41ODgyWk0xNC44MzU0IDI0LjcxNzZDMjAuMTExMyAyNC43MTc2IDI0LjM4ODMgMjAuNDQwNiAyNC4zODgzIDE1LjE2NDdDMjQuMzg4MyA5Ljg4ODc2IDIwLjExMTMgNS42MTE3NiAxNC44MzU0IDUuNjExNzZDOS41NTk0MSA1LjYxMTc2IDUuMjgyNDEgOS44ODg3NiA1LjI4MjQxIDE1LjE2NDdDNS4yODI0MSAyMC40NDA2IDkuNTU5NDEgMjQuNzE3NiAxNC44MzU0IDI0LjcxNzZaIiBmaWxsPSJ3aGl0ZSIvPgogICAgPHBhdGggZD0iTTE1IDM1LjU4ODJMMTQuNzE4IDM2LjAwMTFMMTUgMzYuMTkzN0wxNS4yODIgMzYuMDAxMUwxNSAzNS41ODgyWk0yOC41IDE1QzI4LjUgMjAuMzE1MSAyNS4xMTM4IDI1LjM0MTIgMjEuNjMzNiAyOS4wODg3QzE5LjkwMzQgMzAuOTUxNyAxOC4xNzE2IDMyLjQ3NTggMTYuODcxOCAzMy41MzQxQzE2LjIyMjMgMzQuMDYzIDE1LjY4MTYgMzQuNDc0OCAxNS4zMDQzIDM0Ljc1MzhDMTUuMTE1NyAzNC44OTMyIDE0Ljk2OCAzNC45OTk0IDE0Ljg2OCAzNS4wNzAzQzE0LjgxOCAzNS4xMDU4IDE0Ljc3OTkgMzUuMTMyNCAxNC43NTQ2IDM1LjE1QzE0Ljc0MiAzNS4xNTg4IDE0LjczMjUgMzUuMTY1MyAxNC43MjY0IDM1LjE2OTZDMTQuNzIzMyAzNS4xNzE3IDE0LjcyMTEgMzUuMTczMiAxNC43MTk3IDM1LjE3NDJDMTQuNzE5IDM1LjE3NDcgMTQuNzE4NSAzNS4xNzUgMTQuNzE4MiAzNS4xNzUyQzE0LjcxODEgMzUuMTc1MyAxNC43MTggMzUuMTc1MyAxNC43MTc5IDM1LjE3NTRDMTQuNzE3OSAzNS4xNzU0IDE0LjcxOCAzNS4xNzU0IDE1IDM1LjU4ODJDMTUuMjgyIDM2LjAwMTEgMTUuMjgyMiAzNi4wMDEgMTUuMjgyNCAzNi4wMDA5QzE1LjI4MjUgMzYuMDAwOCAxNS4yODI4IDM2LjAwMDYgMTUuMjgzMSAzNi4wMDA0QzE1LjI4MzYgMzYgMTUuMjg0NCAzNS45OTk1IDE1LjI4NTQgMzUuOTk4OEMxNS4yODc0IDM1Ljk5NzQgMTUuMjkwMiAzNS45OTU1IDE1LjI5MzkgMzUuOTkyOUMxNS4zMDEyIDM1Ljk4NzkgMTUuMzExOSAzNS45ODA1IDE1LjMyNTcgMzUuOTcwOUMxNS4zNTM0IDM1Ljk1MTYgMTUuMzk0IDM1LjkyMzIgMTUuNDQ2NSAzNS44ODZDMTUuNTUxNiAzNS44MTE1IDE1LjcwNDYgMzUuNzAxNCAxNS44OTg4IDM1LjU1NzlDMTYuMjg3MSAzNS4yNzA4IDE2Ljg0MDIgMzQuODQ5NCAxNy41MDMyIDM0LjMwOTZDMTguODI4NCAzMy4yMzA1IDIwLjU5NjYgMzEuNjc0OSAyMi4zNjY0IDI5Ljc2OTJDMjUuODg2MiAyNS45NzkgMjkuNSAyMC43MTEgMjkuNSAxNUgyOC41Wk0xNSAxLjVDMjIuNDU1OCAxLjUgMjguNSA3LjU0NDE2IDI4LjUgMTVIMjkuNUMyOS41IDYuOTkxODcgMjMuMDA4MSAwLjUgMTUgMC41VjEuNVpNMS41IDE1QzEuNSA3LjU0NDE2IDcuNTQ0MTYgMS41IDE1IDEuNVYwLjVDNi45OTE4NyAwLjUgMC41IDYuOTkxODcgMC41IDE1SDEuNVpNMTUgMzUuNTg4MkMxNS4yODIgMzUuMTc1NCAxNS4yODIxIDM1LjE3NTQgMTUuMjgyMSAzNS4xNzU0QzE1LjI4MiAzNS4xNzUzIDE1LjI4MTkgMzUuMTc1MyAxNS4yODE4IDM1LjE3NTJDMTUuMjgxNSAzNS4xNzUgMTUuMjgxIDM1LjE3NDcgMTUuMjgwMyAzNS4xNzQyQzE1LjI3ODkgMzUuMTczMiAxNS4yNzY3IDM1LjE3MTcgMTUuMjczNiAzNS4xNjk2QzE1LjI2NzUgMzUuMTY1MyAxNS4yNTggMzUuMTU4OCAxNS4yNDU0IDM1LjE1QzE1LjIyMDEgMzUuMTMyNCAxNS4xODIgMzUuMTA1OCAxNS4xMzIgMzUuMDcwM0MxNS4wMzIgMzQuOTk5NCAxNC44ODQzIDM0Ljg5MzIgMTQuNjk1NyAzNC43NTM4QzE0LjMxODQgMzQuNDc0OCAxMy43Nzc3IDM0LjA2MyAxMy4xMjgyIDMzLjUzNDFDMTEuODI4NCAzMi40NzU4IDEwLjA5NjYgMzAuOTUxNyA4LjM2NjM4IDI5LjA4ODdDNC44ODYxOSAyNS4zNDEyIDEuNSAyMC4zMTUxIDEuNSAxNUgwLjVDMC41IDIwLjcxMSA0LjExMzgxIDI1Ljk3OSA3LjYzMzYyIDI5Ljc2OTJDOS40MDM0MiAzMS42NzQ5IDExLjE3MTYgMzMuMjMwNSAxMi40OTY4IDM0LjMwOTZDMTMuMTU5OCAzNC44NDk0IDEzLjcxMjkgMzUuMjcwOCAxNC4xMDEyIDM1LjU1NzlDMTQuMjk1NCAzNS43MDE0IDE0LjQ0ODQgMzUuODExNSAxNC41NTM1IDM1Ljg4NkMxNC42MDYgMzUuOTIzMiAxNC42NDY2IDM1Ljk1MTYgMTQuNjc0MyAzNS45NzA5QzE0LjY4ODEgMzUuOTgwNSAxNC42OTg4IDM1Ljk4NzkgMTQuNzA2MSAzNS45OTI5QzE0LjcwOTggMzUuOTk1NSAxNC43MTI2IDM1Ljk5NzQgMTQuNzE0NiAzNS45OTg4QzE0LjcxNTYgMzUuOTk5NSAxNC43MTY0IDM2IDE0LjcxNjkgMzYuMDAwNEMxNC43MTcyIDM2LjAwMDYgMTQuNzE3NSAzNi4wMDA4IDE0LjcxNzYgMzYuMDAwOUMxNC43MTc4IDM2LjAwMSAxNC43MTggMzYuMDAxMSAxNSAzNS41ODgyWk0yMy44ODgzIDE1LjE2NDdDMjMuODg4MyAyMC4xNjQ1IDE5LjgzNTIgMjQuMjE3NiAxNC44MzU0IDI0LjIxNzZWMjUuMjE3NkMyMC4zODc0IDI1LjIxNzYgMjQuODg4MyAyMC43MTY4IDI0Ljg4ODMgMTUuMTY0N0gyMy44ODgzWk0xNC44MzU0IDYuMTExNzZDMTkuODM1MiA2LjExMTc2IDIzLjg4ODMgMTAuMTY0OSAyMy44ODgzIDE1LjE2NDdIMjQuODg4M0MyNC44ODgzIDkuNjEyNjIgMjAuMzg3NCA1LjExMTc2IDE0LjgzNTQgNS4xMTE3NlY2LjExMTc2Wk01Ljc4MjQxIDE1LjE2NDdDNS43ODI0MSAxMC4xNjQ5IDkuODM1NTUgNi4xMTE3NiAxNC44MzU0IDYuMTExNzZWNS4xMTE3NkM5LjI4MzI2IDUuMTExNzYgNC43ODI0MSA5LjYxMjYyIDQuNzgyNDEgMTUuMTY0N0g1Ljc4MjQxWk0xNC44MzU0IDI0LjIxNzZDOS44MzU1NSAyNC4yMTc2IDUuNzgyNDEgMjAuMTY0NSA1Ljc4MjQxIDE1LjE2NDdINC43ODI0MUM0Ljc4MjQxIDIwLjcxNjggOS4yODMyNiAyNS4yMTc2IDE0LjgzNTQgMjUuMjE3NlYyNC4yMTc2WiIgZmlsbD0iI0UwRTBFMCIvPgogICAgPGNpcmNsZSBjeD0iMTUuMDAwMSIgY3k9IjE1LjAwMDEiIHI9IjYuMzM3MjEiIGZpbGw9IiM2RkNGOTciIHN0cm9rZT0iIzIxOTY1MyIvPgo8L3N2Zz4=",
      "public": true
    },
    {
      "link": "/api/images/system/water_metering_user_dashboard_dashboard_widget_new_openstreetmap_marker_image_1.svg",
      "title": "\"Water Metering User Dashboard\" dashboard widget \"New OpenStreetMap\" marker image 1",
      "type": "IMAGE",
      "subType": "IMAGE",
      "fileName": "water_metering_user_dashboard_dashboard_widget_new_openstreetmap_marker_image_1.svg",
      "publicResourceKey": "DXA8o7dZQMufFu8F15vIDy6z7LQlsKno",
      "mediaType": "image/svg+xml",
      "data": "PHN2ZyB3aWR0aD0iMzAiIGhlaWdodD0iMzciIHZpZXdCb3g9IjAgMCAzMCAzNyIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICAgIDxwYXRoIGZpbGwtcnVsZT0iZXZlbm9kZCIgY2xpcC1ydWxlPSJldmVub2RkIiBkPSJNMTUgMzUuNTg4MkMxNSAzNS41ODgyIDI5IDI2LjAyNjEgMjkgMTVDMjkgNy4yNjgwMSAyMi43MzIgMSAxNSAxQzcuMjY4MDEgMSAxIDcuMjY4MDEgMSAxNUMxIDI2LjAyNjEgMTUgMzUuNTg4MiAxNSAzNS41ODgyWk0xNC44MzU0IDI0LjcxNzZDMjAuMTExMyAyNC43MTc2IDI0LjM4ODMgMjAuNDQwNiAyNC4zODgzIDE1LjE2NDdDMjQuMzg4MyA5Ljg4ODc2IDIwLjExMTMgNS42MTE3NiAxNC44MzU0IDUuNjExNzZDOS41NTk0MSA1LjYxMTc2IDUuMjgyNDEgOS44ODg3NiA1LjI4MjQxIDE1LjE2NDdDNS4yODI0MSAyMC40NDA2IDkuNTU5NDEgMjQuNzE3NiAxNC44MzU0IDI0LjcxNzZaIiBmaWxsPSJ3aGl0ZSIvPgogICAgPHBhdGggZD0iTTE1IDM1LjU4ODJMMTQuNzE4IDM2LjAwMTFMMTUgMzYuMTkzN0wxNS4yODIgMzYuMDAxMUwxNSAzNS41ODgyWk0yOC41IDE1QzI4LjUgMjAuMzE1MSAyNS4xMTM4IDI1LjM0MTIgMjEuNjMzNiAyOS4wODg3QzE5LjkwMzQgMzAuOTUxNyAxOC4xNzE2IDMyLjQ3NTggMTYuODcxOCAzMy41MzQxQzE2LjIyMjMgMzQuMDYzIDE1LjY4MTYgMzQuNDc0OCAxNS4zMDQzIDM0Ljc1MzhDMTUuMTE1NyAzNC44OTMyIDE0Ljk2OCAzNC45OTk0IDE0Ljg2OCAzNS4wNzAzQzE0LjgxOCAzNS4xMDU4IDE0Ljc3OTkgMzUuMTMyNCAxNC43NTQ2IDM1LjE1QzE0Ljc0MiAzNS4xNTg4IDE0LjczMjUgMzUuMTY1MyAxNC43MjY0IDM1LjE2OTZDMTQuNzIzMyAzNS4xNzE3IDE0LjcyMTEgMzUuMTczMiAxNC43MTk3IDM1LjE3NDJDMTQuNzE5IDM1LjE3NDcgMTQuNzE4NSAzNS4xNzUgMTQuNzE4MiAzNS4xNzUyQzE0LjcxODEgMzUuMTc1MyAxNC43MTggMzUuMTc1MyAxNC43MTc5IDM1LjE3NTRDMTQuNzE3OSAzNS4xNzU0IDE0LjcxOCAzNS4xNzU0IDE1IDM1LjU4ODJDMTUuMjgyIDM2LjAwMTEgMTUuMjgyMiAzNi4wMDEgMTUuMjgyNCAzNi4wMDA5QzE1LjI4MjUgMzYuMDAwOCAxNS4yODI4IDM2LjAwMDYgMTUuMjgzMSAzNi4wMDA0QzE1LjI4MzYgMzYgMTUuMjg0NCAzNS45OTk1IDE1LjI4NTQgMzUuOTk4OEMxNS4yODc0IDM1Ljk5NzQgMTUuMjkwMiAzNS45OTU1IDE1LjI5MzkgMzUuOTkyOUMxNS4zMDEyIDM1Ljk4NzkgMTUuMzExOSAzNS45ODA1IDE1LjMyNTcgMzUuOTcwOUMxNS4zNTM0IDM1Ljk1MTYgMTUuMzk0IDM1LjkyMzIgMTUuNDQ2NSAzNS44ODZDMTUuNTUxNiAzNS44MTE1IDE1LjcwNDYgMzUuNzAxNCAxNS44OTg4IDM1LjU1NzlDMTYuMjg3MSAzNS4yNzA4IDE2Ljg0MDIgMzQuODQ5NCAxNy41MDMyIDM0LjMwOTZDMTguODI4NCAzMy4yMzA1IDIwLjU5NjYgMzEuNjc0OSAyMi4zNjY0IDI5Ljc2OTJDMjUuODg2MiAyNS45NzkgMjkuNSAyMC43MTEgMjkuNSAxNUgyOC41Wk0xNSAxLjVDMjIuNDU1OCAxLjUgMjguNSA3LjU0NDE2IDI4LjUgMTVIMjkuNUMyOS41IDYuOTkxODcgMjMuMDA4MSAwLjUgMTUgMC41VjEuNVpNMS41IDE1QzEuNSA3LjU0NDE2IDcuNTQ0MTYgMS41IDE1IDEuNVYwLjVDNi45OTE4NyAwLjUgMC41IDYuOTkxODcgMC41IDE1SDEuNVpNMTUgMzUuNTg4MkMxNS4yODIgMzUuMTc1NCAxNS4yODIxIDM1LjE3NTQgMTUuMjgyMSAzNS4xNzU0QzE1LjI4MiAzNS4xNzUzIDE1LjI4MTkgMzUuMTc1MyAxNS4yODE4IDM1LjE3NTJDMTUuMjgxNSAzNS4xNzUgMTUuMjgxIDM1LjE3NDcgMTUuMjgwMyAzNS4xNzQyQzE1LjI3ODkgMzUuMTczMiAxNS4yNzY3IDM1LjE3MTcgMTUuMjczNiAzNS4xNjk2QzE1LjI2NzUgMzUuMTY1MyAxNS4yNTggMzUuMTU4OCAxNS4yNDU0IDM1LjE1QzE1LjIyMDEgMzUuMTMyNCAxNS4xODIgMzUuMTA1OCAxNS4xMzIgMzUuMDcwM0MxNS4wMzIgMzQuOTk5NCAxNC44ODQzIDM0Ljg5MzIgMTQuNjk1NyAzNC43NTM4QzE0LjMxODQgMzQuNDc0OCAxMy43Nzc3IDM0LjA2MyAxMy4xMjgyIDMzLjUzNDFDMTEuODI4NCAzMi40NzU4IDEwLjA5NjYgMzAuOTUxNyA4LjM2NjM4IDI5LjA4ODdDNC44ODYxOSAyNS4zNDEyIDEuNSAyMC4zMTUxIDEuNSAxNUgwLjVDMC41IDIwLjcxMSA0LjExMzgxIDI1Ljk3OSA3LjYzMzYyIDI5Ljc2OTJDOS40MDM0MiAzMS42NzQ5IDExLjE3MTYgMzMuMjMwNSAxMi40OTY4IDM0LjMwOTZDMTMuMTU5OCAzNC44NDk0IDEzLjcxMjkgMzUuMjcwOCAxNC4xMDEyIDM1LjU1NzlDMTQuMjk1NCAzNS43MDE0IDE0LjQ0ODQgMzUuODExNSAxNC41NTM1IDM1Ljg4NkMxNC42MDYgMzUuOTIzMiAxNC42NDY2IDM1Ljk1MTYgMTQuNjc0MyAzNS45NzA5QzE0LjY4ODEgMzUuOTgwNSAxNC42OTg4IDM1Ljk4NzkgMTQuNzA2MSAzNS45OTI5QzE0LjcwOTggMzUuOTk1NSAxNC43MTI2IDM1Ljk5NzQgMTQuNzE0NiAzNS45OTg4QzE0LjcxNTYgMzUuOTk5NSAxNC43MTY0IDM2IDE0LjcxNjkgMzYuMDAwNEMxNC43MTcyIDM2LjAwMDYgMTQuNzE3NSAzNi4wMDA4IDE0LjcxNzYgMzYuMDAwOUMxNC43MTc4IDM2LjAwMSAxNC43MTggMzYuMDAxMSAxNSAzNS41ODgyWk0yMy44ODgzIDE1LjE2NDdDMjMuODg4MyAyMC4xNjQ1IDE5LjgzNTIgMjQuMjE3NiAxNC44MzU0IDI0LjIxNzZWMjUuMjE3NkMyMC4zODc0IDI1LjIxNzYgMjQuODg4MyAyMC43MTY4IDI0Ljg4ODMgMTUuMTY0N0gyMy44ODgzWk0xNC44MzU0IDYuMTExNzZDMTkuODM1MiA2LjExMTc2IDIzLjg4ODMgMTAuMTY0OSAyMy44ODgzIDE1LjE2NDdIMjQuODg4M0MyNC44ODgzIDkuNjEyNjIgMjAuMzg3NCA1LjExMTc2IDE0LjgzNTQgNS4xMTE3NlY2LjExMTc2Wk01Ljc4MjQxIDE1LjE2NDdDNS43ODI0MSAxMC4xNjQ5IDkuODM1NTUgNi4xMTE3NiAxNC44MzU0IDYuMTExNzZWNS4xMTE3NkM5LjI4MzI2IDUuMTExNzYgNC43ODI0MSA5LjYxMjYyIDQuNzgyNDEgMTUuMTY0N0g1Ljc4MjQxWk0xNC44MzU0IDI0LjIxNzZDOS44MzU1NSAyNC4yMTc2IDUuNzgyNDEgMjAuMTY0NSA1Ljc4MjQxIDE1LjE2NDdINC43ODI0MUM0Ljc4MjQxIDIwLjcxNjggOS4yODMyNiAyNS4yMTc2IDE0LjgzNTQgMjUuMjE3NlYyNC4yMTc2WiIgZmlsbD0iI0UwRTBFMCIvPgogICAgPGNpcmNsZSBjeD0iMTUuMDAwMSIgY3k9IjE1LjAwMDEiIHI9IjYuMzM3MjEiIGZpbGw9IiNGMjk5NEEiIHN0cm9rZT0iI0RFODUzNiIvPgo8L3N2Zz4=",
      "public": true
    },
    {
      "link": "/api/images/system/water_metering_user_dashboard_dashboard_widget_new_openstreetmap_marker_image_2.svg",
      "title": "\"Water Metering User Dashboard\" dashboard widget \"New OpenStreetMap\" marker image 2",
      "type": "IMAGE",
      "subType": "IMAGE",
      "fileName": "water_metering_user_dashboard_dashboard_widget_new_openstreetmap_marker_image_2.svg",
      "publicResourceKey": "e7xrEsN7HwLHcGucbwRZu87vtPsvLV80",
      "mediaType": "image/svg+xml",
      "data": "PHN2ZyB3aWR0aD0iMzAiIGhlaWdodD0iMzciIHZpZXdCb3g9IjAgMCAzMCAzNyIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICAgIDxwYXRoIGZpbGwtcnVsZT0iZXZlbm9kZCIgY2xpcC1ydWxlPSJldmVub2RkIiBkPSJNMTUgMzUuNTg4MkMxNSAzNS41ODgyIDI5IDI2LjAyNjEgMjkgMTVDMjkgNy4yNjgwMSAyMi43MzIgMSAxNSAxQzcuMjY4MDEgMSAxIDcuMjY4MDEgMSAxNUMxIDI2LjAyNjEgMTUgMzUuNTg4MiAxNSAzNS41ODgyWk0xNC44MzU0IDI0LjcxNzZDMjAuMTExMyAyNC43MTc2IDI0LjM4ODMgMjAuNDQwNiAyNC4zODgzIDE1LjE2NDdDMjQuMzg4MyA5Ljg4ODc2IDIwLjExMTMgNS42MTE3NiAxNC44MzU0IDUuNjExNzZDOS41NTk0MSA1LjYxMTc2IDUuMjgyNDEgOS44ODg3NiA1LjI4MjQxIDE1LjE2NDdDNS4yODI0MSAyMC40NDA2IDkuNTU5NDEgMjQuNzE3NiAxNC44MzU0IDI0LjcxNzZaIiBmaWxsPSJ3aGl0ZSIvPgogICAgPHBhdGggZD0iTTE1IDM1LjU4ODJMMTQuNzE4IDM2LjAwMTFMMTUgMzYuMTkzN0wxNS4yODIgMzYuMDAxMUwxNSAzNS41ODgyWk0yOC41IDE1QzI4LjUgMjAuMzE1MSAyNS4xMTM4IDI1LjM0MTIgMjEuNjMzNiAyOS4wODg3QzE5LjkwMzQgMzAuOTUxNyAxOC4xNzE2IDMyLjQ3NTggMTYuODcxOCAzMy41MzQxQzE2LjIyMjMgMzQuMDYzIDE1LjY4MTYgMzQuNDc0OCAxNS4zMDQzIDM0Ljc1MzhDMTUuMTE1NyAzNC44OTMyIDE0Ljk2OCAzNC45OTk0IDE0Ljg2OCAzNS4wNzAzQzE0LjgxOCAzNS4xMDU4IDE0Ljc3OTkgMzUuMTMyNCAxNC43NTQ2IDM1LjE1QzE0Ljc0MiAzNS4xNTg4IDE0LjczMjUgMzUuMTY1MyAxNC43MjY0IDM1LjE2OTZDMTQuNzIzMyAzNS4xNzE3IDE0LjcyMTEgMzUuMTczMiAxNC43MTk3IDM1LjE3NDJDMTQuNzE5IDM1LjE3NDcgMTQuNzE4NSAzNS4xNzUgMTQuNzE4MiAzNS4xNzUyQzE0LjcxODEgMzUuMTc1MyAxNC43MTggMzUuMTc1MyAxNC43MTc5IDM1LjE3NTRDMTQuNzE3OSAzNS4xNzU0IDE0LjcxOCAzNS4xNzU0IDE1IDM1LjU4ODJDMTUuMjgyIDM2LjAwMTEgMTUuMjgyMiAzNi4wMDEgMTUuMjgyNCAzNi4wMDA5QzE1LjI4MjUgMzYuMDAwOCAxNS4yODI4IDM2LjAwMDYgMTUuMjgzMSAzNi4wMDA0QzE1LjI4MzYgMzYgMTUuMjg0NCAzNS45OTk1IDE1LjI4NTQgMzUuOTk4OEMxNS4yODc0IDM1Ljk5NzQgMTUuMjkwMiAzNS45OTU1IDE1LjI5MzkgMzUuOTkyOUMxNS4zMDEyIDM1Ljk4NzkgMTUuMzExOSAzNS45ODA1IDE1LjMyNTcgMzUuOTcwOUMxNS4zNTM0IDM1Ljk1MTYgMTUuMzk0IDM1LjkyMzIgMTUuNDQ2NSAzNS44ODZDMTUuNTUxNiAzNS44MTE1IDE1LjcwNDYgMzUuNzAxNCAxNS44OTg4IDM1LjU1NzlDMTYuMjg3MSAzNS4yNzA4IDE2Ljg0MDIgMzQuODQ5NCAxNy41MDMyIDM0LjMwOTZDMTguODI4NCAzMy4yMzA1IDIwLjU5NjYgMzEuNjc0OSAyMi4zNjY0IDI5Ljc2OTJDMjUuODg2MiAyNS45NzkgMjkuNSAyMC43MTEgMjkuNSAxNUgyOC41Wk0xNSAxLjVDMjIuNDU1OCAxLjUgMjguNSA3LjU0NDE2IDI4LjUgMTVIMjkuNUMyOS41IDYuOTkxODcgMjMuMDA4MSAwLjUgMTUgMC41VjEuNVpNMS41IDE1QzEuNSA3LjU0NDE2IDcuNTQ0MTYgMS41IDE1IDEuNVYwLjVDNi45OTE4NyAwLjUgMC41IDYuOTkxODcgMC41IDE1SDEuNVpNMTUgMzUuNTg4MkMxNS4yODIgMzUuMTc1NCAxNS4yODIxIDM1LjE3NTQgMTUuMjgyMSAzNS4xNzU0QzE1LjI4MiAzNS4xNzUzIDE1LjI4MTkgMzUuMTc1MyAxNS4yODE4IDM1LjE3NTJDMTUuMjgxNSAzNS4xNzUgMTUuMjgxIDM1LjE3NDcgMTUuMjgwMyAzNS4xNzQyQzE1LjI3ODkgMzUuMTczMiAxNS4yNzY3IDM1LjE3MTcgMTUuMjczNiAzNS4xNjk2QzE1LjI2NzUgMzUuMTY1MyAxNS4yNTggMzUuMTU4OCAxNS4yNDU0IDM1LjE1QzE1LjIyMDEgMzUuMTMyNCAxNS4xODIgMzUuMTA1OCAxNS4xMzIgMzUuMDcwM0MxNS4wMzIgMzQuOTk5NCAxNC44ODQzIDM0Ljg5MzIgMTQuNjk1NyAzNC43NTM4QzE0LjMxODQgMzQuNDc0OCAxMy43Nzc3IDM0LjA2MyAxMy4xMjgyIDMzLjUzNDFDMTEuODI4NCAzMi40NzU4IDEwLjA5NjYgMzAuOTUxNyA4LjM2NjM4IDI5LjA4ODdDNC44ODYxOSAyNS4zNDEyIDEuNSAyMC4zMTUxIDEuNSAxNUgwLjVDMC41IDIwLjcxMSA0LjExMzgxIDI1Ljk3OSA3LjYzMzYyIDI5Ljc2OTJDOS40MDM0MiAzMS42NzQ5IDExLjE3MTYgMzMuMjMwNSAxMi40OTY4IDM0LjMwOTZDMTMuMTU5OCAzNC44NDk0IDEzLjcxMjkgMzUuMjcwOCAxNC4xMDEyIDM1LjU1NzlDMTQuMjk1NCAzNS43MDE0IDE0LjQ0ODQgMzUuODExNSAxNC41NTM1IDM1Ljg4NkMxNC42MDYgMzUuOTIzMiAxNC42NDY2IDM1Ljk1MTYgMTQuNjc0MyAzNS45NzA5QzE0LjY4ODEgMzUuOTgwNSAxNC42OTg4IDM1Ljk4NzkgMTQuNzA2MSAzNS45OTI5QzE0LjcwOTggMzUuOTk1NSAxNC43MTI2IDM1Ljk5NzQgMTQuNzE0NiAzNS45OTg4QzE0LjcxNTYgMzUuOTk5NSAxNC43MTY0IDM2IDE0LjcxNjkgMzYuMDAwNEMxNC43MTcyIDM2LjAwMDYgMTQuNzE3NSAzNi4wMDA4IDE0LjcxNzYgMzYuMDAwOUMxNC43MTc4IDM2LjAwMSAxNC43MTggMzYuMDAxMSAxNSAzNS41ODgyWk0yMy44ODgzIDE1LjE2NDdDMjMuODg4MyAyMC4xNjQ1IDE5LjgzNTIgMjQuMjE3NiAxNC44MzU0IDI0LjIxNzZWMjUuMjE3NkMyMC4zODc0IDI1LjIxNzYgMjQuODg4MyAyMC43MTY4IDI0Ljg4ODMgMTUuMTY0N0gyMy44ODgzWk0xNC44MzU0IDYuMTExNzZDMTkuODM1MiA2LjExMTc2IDIzLjg4ODMgMTAuMTY0OSAyMy44ODgzIDE1LjE2NDdIMjQuODg4M0MyNC44ODgzIDkuNjEyNjIgMjAuMzg3NCA1LjExMTc2IDE0LjgzNTQgNS4xMTE3NlY2LjExMTc2Wk01Ljc4MjQxIDE1LjE2NDdDNS43ODI0MSAxMC4xNjQ5IDkuODM1NTUgNi4xMTE3NiAxNC44MzU0IDYuMTExNzZWNS4xMTE3NkM5LjI4MzI2IDUuMTExNzYgNC43ODI0MSA5LjYxMjYyIDQuNzgyNDEgMTUuMTY0N0g1Ljc4MjQxWk0xNC44MzU0IDI0LjIxNzZDOS44MzU1NSAyNC4yMTc2IDUuNzgyNDEgMjAuMTY0NSA1Ljc4MjQxIDE1LjE2NDdINC43ODI0MUM0Ljc4MjQxIDIwLjcxNjggOS4yODMyNiAyNS4yMTc2IDE0LjgzNTQgMjUuMjE3NlYyNC4yMTc2WiIgZmlsbD0iI0UwRTBFMCIvPgogICAgPGNpcmNsZSBjeD0iMTUuMDAwMSIgY3k9IjE1LjAwMDEiIHI9IjYuMzM3MjEiIGZpbGw9IiNFQjU3NTciIHN0cm9rZT0iI0Q3NDM0MyIvPgo8L3N2Zz4=",
      "public": true
    }
  ]
}