/**
 * Copyright Â© 2016-2023 The Thingsboard Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.thingsboard.server.edge;

import com.datastax.oss.driver.api.core.uuid.Uuids;
import org.junit.Assert;
import org.junit.Test;
import org.thingsboard.server.common.data.ResourceType;
import org.thingsboard.server.common.data.TbResource;
import org.thingsboard.server.dao.service.DaoSqlTest;
import org.thingsboard.server.gen.edge.v1.ResourceUpdateMsg;
import org.thingsboard.server.gen.edge.v1.UpdateMsgType;
import org.thingsboard.server.gen.edge.v1.UplinkMsg;
import org.thingsboard.server.gen.edge.v1.UplinkResponseMsg;

import java.util.UUID;

@DaoSqlTest
public class ResourceEdgeTest extends AbstractEdgeTest {

    @Test
    public void testSendResourceToCloud() throws Exception {
        UUID uuid = Uuids.timeBased();

        UplinkMsg.Builder uplinkMsgBuilder = UplinkMsg.newBuilder();
        ResourceUpdateMsg.Builder resourceUpdateMsgBuilder = ResourceUpdateMsg.newBuilder();
        resourceUpdateMsgBuilder.setIdMSB(uuid.getMostSignificantBits());
        resourceUpdateMsgBuilder.setIdLSB(uuid.getLeastSignificantBits());
        resourceUpdateMsgBuilder.setTitle("Edge Test Resource");
        resourceUpdateMsgBuilder.setResourceType(ResourceType.JKS.name());
        resourceUpdateMsgBuilder.setResourceKey("EdgeResource.jks");
        resourceUpdateMsgBuilder.setFileName("EdgeResource.jks");
        resourceUpdateMsgBuilder.setData("Data");
        resourceUpdateMsgBuilder.setIsSystem(false);
        resourceUpdateMsgBuilder.setMsgType(UpdateMsgType.ENTITY_CREATED_RPC_MESSAGE);
        testAutoGeneratedCodeByProtobuf(resourceUpdateMsgBuilder);
        uplinkMsgBuilder.addResourceUpdateMsg(resourceUpdateMsgBuilder.build());

        testAutoGeneratedCodeByProtobuf(uplinkMsgBuilder);

        edgeImitator.expectResponsesAmount(1);
        edgeImitator.sendUplinkMsg(uplinkMsgBuilder.build());

        Assert.assertTrue(edgeImitator.waitForResponses());

        UplinkResponseMsg latestResponseMsg = edgeImitator.getLatestResponseMsg();
        Assert.assertTrue(latestResponseMsg.getSuccess());

        TbResource tbResource = doGet("/api/resource/" + uuid, TbResource.class);
        Assert.assertNotNull(tbResource);
        Assert.assertEquals("Edge Test Resource", tbResource.getName());
    }
}
