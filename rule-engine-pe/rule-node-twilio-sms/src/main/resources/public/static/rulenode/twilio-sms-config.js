!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@angular/common"),require("@ngx-translate/core"),require("@shared/public-api"),require("@home/components/public-api"),require("@ngrx/store"),require("@angular/forms")):"function"==typeof define&&define.amd?define("twilio-sms-config",["exports","@angular/core","@angular/common","@ngx-translate/core","@shared/public-api","@home/components/public-api","@ngrx/store","@angular/forms"],o):o((e=e||self)["twilio-sms-config"]={},e.ng.core,e.ng.common,e["ngx-translate"],e.shared,e.publicApi$1,e["ngrx-store"],e.ng.forms)}(this,(function(e,o,a,i,r,t,n,l){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var u=function(e,o){return(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,o){e.__proto__=o}||function(e,o){for(var a in o)Object.prototype.hasOwnProperty.call(o,a)&&(e[a]=o[a])})(e,o)};function s(e,o){function a(){this.constructor=e}u(e,o),e.prototype=null===o?Object.create(o):(a.prototype=o.prototype,new a)}function L(e,o,a,i){var r,t=arguments.length,n=t<3?o:null===i?i=Object.getOwnPropertyDescriptor(o,a):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,o,a,i);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(n=(t<3?r(n):t>3?r(o,a,n):r(o,a))||n);return t>3&&n&&Object.defineProperty(o,a,n),n}function m(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)}Object.create;Object.create;var c,v,P=function(e){function a(o,a){var i=e.call(this,o)||this;return i.store=o,i.fb=a,i}return s(a,e),a.prototype.configForm=function(){return this.twilioSmsConfigForm},a.prototype.onConfigurationSet=function(e){this.twilioSmsConfigForm=this.fb.group({numberFrom:[e?e.numberFrom:null,[l.Validators.required]],numbersTo:[e?e.numbersTo:null,[l.Validators.required]],accountSid:[e?e.accountSid:null,[l.Validators.required]],accountToken:[e?e.accountToken:null,[l.Validators.required]]})},a.ctorParameters=function(){return[{type:n.Store},{type:l.FormBuilder}]},a=L([o.Component({selector:"tb-action-node-twilio-sms-config",template:'<section [formGroup]="twilioSmsConfigForm" fxLayout="column">\n  <mat-form-field class="mat-block">\n    <mat-label translate>tb.twilio-sms.number-from</mat-label>\n    <input required matInput formControlName="numberFrom">\n    <mat-error *ngIf="twilioSmsConfigForm.get(\'numberFrom\').hasError(\'required\')">\n      {{ \'tb.twilio-sms.number-from-required\' | translate }}\n    </mat-error>\n    <mat-hint innerHTML="{{ \'tb.twilio-sms.number-from-hint\' | translate }}"></mat-hint>\n  </mat-form-field>\n  <mat-form-field class="mat-block">\n    <mat-label translate>tb.twilio-sms.numbers-to</mat-label>\n    <input required matInput formControlName="numbersTo">\n    <mat-error *ngIf="twilioSmsConfigForm.get(\'numbersTo\').hasError(\'required\')">\n      {{ \'tb.twilio-sms.numbers-to-required\' | translate }}\n    </mat-error>\n    <mat-hint innerHTML="{{ \'tb.twilio-sms.numbers-to-hint\' | translate }}"></mat-hint>\n  </mat-form-field>\n  <mat-form-field class="mat-block">\n    <mat-label translate>tb.twilio-sms.account-sid</mat-label>\n    <input required matInput formControlName="accountSid">\n    <mat-error *ngIf="twilioSmsConfigForm.get(\'accountSid\').hasError(\'required\')">\n      {{ \'tb.twilio-sms.account-sid-required\' | translate }}\n    </mat-error>\n  </mat-form-field>\n  <mat-form-field class="mat-block">\n    <mat-label translate>tb.twilio-sms.account-token</mat-label>\n    <input required type="password" matInput formControlName="accountToken">\n    <mat-error *ngIf="twilioSmsConfigForm.get(\'accountToken\').hasError(\'required\')">\n      {{ \'tb.twilio-sms.account-token-required\' | translate }}\n    </mat-error>\n  </mat-form-field>\n</section>\n'}),m("design:paramtypes",[n.Store,l.FormBuilder])],a)}(r.RuleNodeConfigurationComponent);!function(e){e.MAN="man",e.WOMAN="woman",e.ALICE="alice",e.POLLY_ADITI="Polly.Aditi",e.POLLY_AMY="Polly.Amy",e.POLLY_ASTRID="Polly.Astrid",e.POLLY_BIANCA="Polly.Bianca",e.POLLY_BRIAN="Polly.Brian",e.POLLY_CAMILA="Polly.Camila",e.POLLY_CARLA="Polly.Carla",e.POLLY_CARMEN="Polly.Carmen",e.POLLY_CELINE="Polly.Celine",e.POLLY_CHANTAL="Polly.Chantal",e.POLLY_CONCHITA="Polly.Conchita",e.POLLY_CRISTIANO="Polly.Cristiano",e.POLLY_DORA="Polly.Dora",e.POLLY_EMMA="Polly.Emma",e.POLLY_ENRIQUE="Polly.Enrique",e.POLLY_EWA="Polly.Ewa",e.POLLY_FILIZ="Polly.Filiz",e.POLLY_GERAINT="Polly.Geraint",e.POLLY_GIORGIO="Polly.Giorgio",e.POLLY_GWYNETH="Polly.Gwyneth",e.POLLY_HANS="Polly.Hans",e.POLLY_INES="Polly.Ines",e.POLLY_IVY="Polly.Ivy",e.POLLY_JACEK="Polly.Jacek",e.POLLY_JAN="Polly.Jan",e.POLLY_JOANNA="Polly.Joanna",e.POLLY_JOEY="Polly.Joey",e.POLLY_JUSTIN="Polly.Justin",e.POLLY_KARL="Polly.Karl",e.POLLY_KENDRA="Polly.Kendra",e.POLLY_KIMBERLY="Polly.Kimberly",e.POLLY_LEA="Polly.Lea",e.POLLY_LIV="Polly.Liv",e.POLLY_LOTTE="Polly.Lotte",e.POLLY_LUCIA="Polly.Lucia",e.POLLY_LUPE="Polly.Lupe",e.POLLY_MADS="Polly.Mads",e.POLLY_MAJA="Polly.Maja",e.POLLY_MARLENE="Polly.Marlene",e.POLLY_MATHIEU="Polly.Mathieu",e.POLLY_MATTHEW="Polly.Matthew",e.POLLY_MAXIM="Polly.Maxim",e.POLLY_MIA="Polly.Mia",e.POLLY_MIGUEL="Polly.Miguel",e.POLLY_MIZUKI="Polly.Mizuki",e.POLLY_NAJA="Polly.Naja",e.POLLY_NICOLE="Polly.Nicole",e.POLLY_PENELOPE="Polly.Penelope",e.POLLY_RAVEENA="Polly.Raveena",e.POLLY_RICARDO="Polly.Ricardo",e.POLLY_RUBEN="Polly.Ruben",e.POLLY_RUSSELL="Polly.Russell",e.POLLY_SALLI="Polly.Salli",e.POLLY_SEOYEON="Polly.Seoyeon",e.POLLY_TAKUMI="Polly.Takumi",e.POLLY_TATYANA="Polly.Tatyana",e.POLLY_VICKI="Polly.Vicki",e.POLLY_VITORIA="Polly.Vitoria",e.POLLY_ZEINA="Polly.Zeina",e.POLLY_ZHIYU="Polly.Zhiyu",e.POLLY_AMY_NEURAL="Polly.Amy-Neural",e.POLLY_EMMA_NEURAL="Polly.Emma-Neural",e.POLLY_BRIAN_NEURAL="Polly.Brian-Neural",e.POLLY_SALLI_NEURAL="Polly.Salli-Neural",e.POLLY_IVY_NEURAL="Polly.Ivy-Neural",e.POLLY_JOANNA_NEURAL="Polly.Joanna-Neural",e.POLLY_KENDRA_NEURAL="Polly.Kendra-Neural",e.POLLY_KIMBERLY_NEURAL="Polly.Kimberly-Neural",e.POLLY_JOEY_NEURAL="Polly.Joey-Neural",e.POLLY_JUSTIN_NEURAL="Polly.Justin-Neural",e.POLLY_MATTHEW_NEURAL="Polly.Matthew-Neural",e.POLLY_CAMILA_NEURAL="Polly.Camila-Neural",e.POLLY_LUPE_NEURAL="Polly.Lupe-Neural"}(c||(c={})),function(e){e.BASIC="Basic",e.ALICE="Alice",e.AMAZON_POLLY="Amazon Polly"}(v||(v={}));var d=new Map([["en",{viewValue:"English, United States",value:"en",voices:[c.MAN,c.WOMAN]}],["en-gb",{viewValue:"English, British",value:"en-gb",voices:[c.MAN,c.WOMAN]}],["es",{viewValue:"Spanish, Spain",value:"es",voices:[c.MAN,c.WOMAN]}],["fr",{viewValue:"French",value:"fr",voices:[c.MAN,c.WOMAN]}],["de",{viewValue:"German",value:"de",voices:[c.MAN,c.WOMAN]}]]),f=new Map([["da-DK",{viewValue:"Danish, Denmark",value:"da-DK",voices:[c.ALICE]}],["de-DE",{viewValue:"German, Germany",value:"de-DE",voices:[c.ALICE]}],["en-AU",{viewValue:"English, Australia",value:"en-AU",voices:[c.ALICE]}],["en-CA",{viewValue:"English, Canada",value:"en-CA",voices:[c.ALICE]}],["en-GB",{viewValue:"English, UK",value:"en-GB",voices:[c.ALICE]}],["en-IN",{viewValue:"English, India",value:"en-IN",voices:[c.ALICE]}],["en-US",{viewValue:"English, United States",value:"en-US",voices:[c.ALICE]}],["ca-ES",{viewValue:"Catalan, Spain",value:"ca-ES",voices:[c.ALICE]}],["es-ES",{viewValue:"Spanish, Spain",value:"es-ES",voices:[c.ALICE]}],["es-MX",{viewValue:"Spanish, Mexico",value:"es-MX",voices:[c.ALICE]}],["fi-FI",{viewValue:"Finnish, Finland",value:"fi-FI",voices:[c.ALICE]}],["fr-CA",{viewValue:"French, Canada",value:"fr-CA",voices:[c.ALICE]}],["fr-FR",{viewValue:"French, France",value:"fr-FR",voices:[c.ALICE]}],["it-IT",{viewValue:"Italian, Italy",value:"it-IT",voices:[c.ALICE]}],["ja-JP",{viewValue:"Japanese, Japan",value:"ja-JP",voices:[c.ALICE]}],["ko-KR",{viewValue:"Korean, Korea",value:"ko-KR",voices:[c.ALICE]}],["nb-NO",{viewValue:"Norwegian, Norway",value:"nb-NO",voices:[c.ALICE]}],["nl-NL",{viewValue:"Dutch, Netherlands",value:"nl-NL",voices:[c.ALICE]}],["pl-PL",{viewValue:"Polish-Poland",value:"pl-PL",voices:[c.ALICE]}],["pt-BR",{viewValue:"Portuguese, Brazil",value:"pt-BR",voices:[c.ALICE]}],["pt-PT",{viewValue:"Portuguese, Portugal",value:"pt-PT",voices:[c.ALICE]}],["ru-RU",{viewValue:"Russian, Russia",value:"ru-RU",voices:[c.ALICE]}],["sv-SE",{viewValue:"Swedish, Sweden",value:"sv-SE",voices:[c.ALICE]}],["zh-CN",{viewValue:"Chinese (Mandarin)",value:"zh-CN",voices:[c.ALICE]}],["zh-HK",{viewValue:"Chinese (Cantonese)",value:"zh-HK",voices:[c.ALICE]}],["zh-TW",{viewValue:"Chinese (Taiwanese Mandarin)",value:"zh-TW",voices:[c.ALICE]}]]),A=new Map([["arb",{viewValue:"Arabic",value:"arb",voices:[c.POLLY_ZEINA]}],["cy-GB",{viewValue:"Welsh",value:"cy-GB",voices:[c.POLLY_GWYNETH]}],["da-DK",{viewValue:"Danish",value:"da-DK",voices:[c.POLLY_NAJA,c.POLLY_MADS]}],["de-DE",{viewValue:"German",value:"de-DE",voices:[c.POLLY_MARLENE,c.POLLY_VICKI,c.POLLY_HANS]}],["en-AU",{viewValue:"English (Australian)",value:"en-AU",voices:[c.POLLY_NICOLE,c.POLLY_RUSSELL]}],["en-GB",{viewValue:"English (British)",value:"en-GB",voices:[c.POLLY_AMY,c.POLLY_EMMA,c.POLLY_BRIAN,c.POLLY_AMY_NEURAL,c.POLLY_EMMA_NEURAL,c.POLLY_BRIAN_NEURAL]}],["en-GB",{viewValue:"English (Welsh)",value:"en-GB-WLS",voices:[c.POLLY_GERAINT]}],["en-IN",{viewValue:"English (Indian)",value:"en-IN",voices:[c.POLLY_ADITI,c.POLLY_RAVEENA]}],["en-US",{viewValue:"English (US)",value:"en-US",voices:[c.POLLY_SALLI,c.POLLY_IVY,c.POLLY_JOANNA,c.POLLY_KENDRA,c.POLLY_KIMBERLY,c.POLLY_JOEY,c.POLLY_JUSTIN,c.POLLY_MATTHEW,c.POLLY_SALLI_NEURAL,c.POLLY_IVY_NEURAL,c.POLLY_JOANNA_NEURAL,c.POLLY_KENDRA_NEURAL,c.POLLY_KIMBERLY_NEURAL,c.POLLY_JOEY_NEURAL,c.POLLY_JUSTIN_NEURAL,c.POLLY_MATTHEW_NEURAL]}],["es-ES",{viewValue:"Spanish (Castilian)",value:"es-ES",voices:[c.POLLY_CONCHITA,c.POLLY_ENRIQUE,c.POLLY_LUCIA]}],["es-MX",{viewValue:"Spanish (Mexico)",value:"es-MX",voices:[c.POLLY_MIA]}],["es-US",{viewValue:"Spanish (Latin American)",value:"es-US",voices:[c.POLLY_LUPE,c.POLLY_PENELOPE,c.POLLY_MIGUEL,c.POLLY_LUPE_NEURAL]}],["fr-CA",{viewValue:"French (Canadian)",value:"fr-CA",voices:[c.POLLY_CHANTAL]}],["fr-FR",{viewValue:"French",value:"fr-FR",voices:[c.POLLY_CELINE,c.POLLY_MATHIEU,c.POLLY_LEA]}],["hi-IN",{viewValue:"Hindi",value:"hi-IN",voices:[c.POLLY_ADITI]}],["is-IS",{viewValue:"Icelandic",value:"is-IS",voices:[c.POLLY_DORA,c.POLLY_KARL]}],["it-IT",{viewValue:"Italian",value:"it-IT",voices:[c.POLLY_CARLA,c.POLLY_GIORGIO,c.POLLY_BIANCA]}],["ja-JP",{viewValue:"Japanese",value:"ja-JP",voices:[c.POLLY_MIZUKI,c.POLLY_TAKUMI]}],["ko-KR",{viewValue:"Korean",value:"ko-KR",voices:[c.POLLY_SEOYEON]}],["nb-NO",{viewValue:"Norwegian",value:"nb-NO",voices:[c.POLLY_LIV]}],["nl-NL",{viewValue:"Dutch",value:"nl-NL",voices:[c.POLLY_LOTTE,c.POLLY_RUBEN]}],["pl-PL",{viewValue:"Polish",value:"pl-PL",voices:[c.POLLY_EWA,c.POLLY_MAJA,c.POLLY_JAN,c.POLLY_JACEK]}],["pt-BR",{viewValue:"Portuguese (Brazilian)",value:"pt-BR",voices:[c.POLLY_CAMILA,c.POLLY_VITORIA,c.POLLY_RICARDO,c.POLLY_CAMILA_NEURAL]}],["pt-PT",{viewValue:"Portuguese (European)",value:"pt-PT",voices:[c.POLLY_INES,c.POLLY_CRISTIANO]}],["ro-RO",{viewValue:"Romanian",value:"ro-RO",voices:[c.POLLY_CARMEN]}],["ru-RU",{viewValue:"Russian",value:"ru-RU",voices:[c.POLLY_TATYANA,c.POLLY_MAXIM]}],["sv-SE",{viewValue:"Swedish",value:"sv-SE",voices:[c.POLLY_ASTRID]}],["tr-TR",{viewValue:"Turkish",value:"tr-TR",voices:[c.POLLY_FILIZ]}],["zh-CN",{viewValue:"Chinese (Mandarin)",value:"zh-CN",voices:[c.POLLY_ZHIYU]}]]),O=new Map([[v.BASIC,d],[v.ALICE,f],[v.AMAZON_POLLY,A]]),p=function(e){function a(o,a){var i=e.call(this,o)||this;return i.store=o,i.fb=a,i.voiceConfiguration=O,i.providers=v,i.languages=[],i.voices=[],i}return s(a,e),a.prototype.configForm=function(){return this.twilioVoiceConfigForm},a.prototype.updateConfiguration=function(o){var a,i,r;e.prototype.updateConfiguration.call(this,o),null!==this.configuration.provider&&(this.languages=Array.from(null===(a=this.voiceConfiguration.get(null==o?void 0:o.provider))||void 0===a?void 0:a.values()),this.voices=null===(r=null===(i=this.voiceConfiguration.get(null==o?void 0:o.provider))||void 0===i?void 0:i.get(null==o?void 0:o.language))||void 0===r?void 0:r.voices)},a.prototype.onConfigurationSet=function(e){var o=this;this.twilioVoiceConfigForm=this.fb.group({numberFrom:[e?e.numberFrom:null,[l.Validators.required]],numbersTo:[e?e.numbersTo:null,[l.Validators.required]],accountSid:[e?e.accountSid:null,[l.Validators.required]],accountToken:[e?e.accountToken:null,[l.Validators.required]],provider:[e?e.provider:null,[l.Validators.required]],language:[e?e.language:null,[l.Validators.required]],voice:[e?e.voice:null,[l.Validators.required]],pitch:[e?e.pitch:null,[l.Validators.required,l.Validators.min(0)]],rate:[e?e.rate:null,[l.Validators.required,l.Validators.min(0)]],volume:[e?e.volume:null,[l.Validators.required]],startPause:[e?e.startPause:null,[l.Validators.required,l.Validators.min(0)]]}),this.twilioVoiceConfigForm.get("provider").valueChanges.subscribe((function(e){var a;o.languages=Array.from(null===(a=o.voiceConfiguration.get(e))||void 0===a?void 0:a.values()),o.voices=e===v.ALICE?[c.ALICE]:[],o.twilioVoiceConfigForm.patchValue({language:null,voice:e===v.ALICE?c.ALICE:null},{emitEvent:!1})})),this.twilioVoiceConfigForm.get("language").valueChanges.subscribe((function(e){var a;o.voices=Array.from(null===(a=o.voiceConfiguration.get(o.twilioVoiceConfigForm.get("provider").value))||void 0===a?void 0:a.get(e).voices),o.twilioVoiceConfigForm.patchValue({voice:o.twilioVoiceConfigForm.get("provider").value===v.ALICE?c.ALICE:null},{emitEvent:!1})}))},a.ctorParameters=function(){return[{type:n.Store},{type:l.FormBuilder}]},a=L([o.Component({selector:"tb-action-node-twilio-voice-config",template:'<section [formGroup]="twilioVoiceConfigForm" fxLayout="column">\n  <mat-form-field class="mat-block">\n    <mat-label translate>tb.twilio-sms.number-from</mat-label>\n    <input required matInput formControlName="numberFrom">\n    <mat-error *ngIf="twilioVoiceConfigForm.get(\'numberFrom\').hasError(\'required\')">\n      {{ \'tb.twilio-sms.number-from-required\' | translate }}\n    </mat-error>\n    <mat-hint innerHTML="{{ \'tb.twilio-sms.number-from-hint\' | translate }}"></mat-hint>\n  </mat-form-field>\n  <mat-form-field class="mat-block">\n    <mat-label translate>tb.twilio-sms.numbers-to</mat-label>\n    <input required matInput formControlName="numbersTo">\n    <mat-error *ngIf="twilioVoiceConfigForm.get(\'numbersTo\').hasError(\'required\')">\n      {{ \'tb.twilio-sms.numbers-to-required\' | translate }}\n    </mat-error>\n    <mat-hint innerHTML="{{ \'tb.twilio-sms.numbers-to-hint\' | translate }}"></mat-hint>\n  </mat-form-field>\n  <mat-form-field class="mat-block">\n    <mat-label translate>tb.twilio-sms.account-sid</mat-label>\n    <input required matInput formControlName="accountSid">\n    <mat-error *ngIf="twilioVoiceConfigForm.get(\'accountSid\').hasError(\'required\')">\n      {{ \'tb.twilio-sms.account-sid-required\' | translate }}\n    </mat-error>\n  </mat-form-field>\n  <mat-form-field class="mat-block">\n    <mat-label translate>tb.twilio-sms.account-token</mat-label>\n    <input required type="password" autocomplete="new-password" matInput formControlName="accountToken">\n    <mat-error *ngIf="twilioVoiceConfigForm.get(\'accountToken\').hasError(\'required\')">\n      {{ \'tb.twilio-sms.account-token-required\' | translate }}\n    </mat-error>\n  </mat-form-field>\n  <section>\n    <mat-form-field class="mat-block">\n      <mat-label translate>tb.twilio-sms.provider</mat-label>\n      <mat-select formControlName="provider">\n        <mat-option *ngFor="let provider of providers | keyvalue" [value]="provider.value">\n          {{ provider.value }}\n        </mat-option>\n      </mat-select>\n      <mat-error *ngIf="twilioVoiceConfigForm.get(\'provider\').hasError(\'required\')">\n        {{ \'tb.twilio-sms.provider-required\' | translate }}\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class="mat-block">\n      <mat-label translate>tb.twilio-sms.language</mat-label>\n      <mat-select required formControlName="language">\n        <mat-option *ngFor="let language of languages" [value]="language.value">\n          {{ language.viewValue }}\n        </mat-option>\n      </mat-select>\n      <mat-error *ngIf="twilioVoiceConfigForm.get(\'language\').hasError(\'required\')">\n        {{ \'tb.twilio-sms.language-required\' | translate }}\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class="mat-block" *ngIf="this.configuration.provider!=\'Alice\'" disabled="this.twilioVoiceConfigForm.get(\'language\').value">\n      <mat-label translate>tb.twilio-sms.voice</mat-label>\n      <mat-select required formControlName="voice">\n        <mat-option *ngFor="let voice of voices" [value]="voice">\n          {{ voice }}\n        </mat-option>\n      </mat-select>\n      <mat-error *ngIf="twilioVoiceConfigForm.get(\'voice\').hasError(\'required\')">\n        {{ \'tb.twilio-sms.voice-required\' | translate }}\n      </mat-error>\n    </mat-form-field>\n  </section>\n  <section fxLayout="row" fxLayoutGap="8px">\n    <mat-form-field fxFlex class="mat-block">\n      <mat-label translate>tb.twilio-sms.pitch</mat-label>\n      <input required matInput type="number" formControlName="pitch" min="0">\n      <span matSuffix> %</span>\n      <mat-error *ngIf="twilioVoiceConfigForm.get(\'pitch\').hasError(\'required\')">\n        {{ \'tb.twilio-sms.pitch-required\' | translate }}\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field fxFlex class="mat-block">\n      <mat-label translate>tb.twilio-sms.rate</mat-label>\n      <input required matInput type="number" formControlName="rate" min="0">\n      <span matSuffix> %</span>\n      <mat-error *ngIf="twilioVoiceConfigForm.get(\'rate\').hasError(\'required\')">\n        {{ \'tb.twilio-sms.rate-required\' | translate }}\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field fxFlex class="mat-block">\n      <mat-label translate>tb.twilio-sms.volume</mat-label>\n      <input required matInput type="number" formControlName="volume">\n      <span matSuffix> dB</span>\n      <mat-error *ngIf="twilioVoiceConfigForm.get(\'volume\').hasError(\'required\')">\n        {{ \'tb.twilio-sms.volume-required\' | translate }}\n      </mat-error>\n    </mat-form-field>\n  </section>\n  <section>\n    <mat-form-field class="mat-block">\n      <mat-label translate>tb.twilio-sms.start-pause</mat-label>\n      <span matSuffix> second</span>\n      <input required matInput type="number" formControlName="startPause" min="0">\n    </mat-form-field>\n  </section>\n</section>\n'}),m("design:paramtypes",[n.Store,l.FormBuilder])],a)}(r.RuleNodeConfigurationComponent),E=function(){function e(e){!function(e){e.setTranslation("en_US",{tb:{"twilio-sms":{"number-from":"Phone Number From","number-from-required":"Phone Number From is required.","number-from-hint":"Phone Number From pattern, use <code>${metaKeyName}</code> to substitute variables from metadata","numbers-to":"Phone Numbers To","numbers-to-required":"Phone Numbers To is required.","numbers-to-hint":"Comma separated Phone Numbers, use <code>${metaKeyName}</code> to substitute variables from metadata","account-sid":"Twilio Account SID","account-sid-required":"Twilio Account SID is required","account-token":"Twilio Account Token","account-token-required":"Twilio Account Token is required",provider:"Voice provider","provider-required":"Voice provider is required",language:"Language","language-required":"Language is required",voice:"Voice","voice-required":"Voice is required",pitch:"Pitch","pitch-required":"Pitch is required",volume:"Volume","volume-required":"Volume is required",rate:"Rate","rate-required":"Rate is required","start-pause":"Pause before talking"}}},!0)}(e)}return e.ctorParameters=function(){return[{type:i.TranslateService}]},e=L([o.NgModule({declarations:[P,p],imports:[a.CommonModule,r.SharedModule,t.HomeComponentsModule],exports:[P,p]}),m("design:paramtypes",[i.TranslateService])],e)}();e.TwilioSmsConfigModule=E,e.ɵa=P,e.ɵb=p,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=twilio-sms-config.umd.min.js.map